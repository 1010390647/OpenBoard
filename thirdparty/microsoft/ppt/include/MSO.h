/****************************************************************************
**
** Namespace Office generated by dumpcpp from type library
** c:\Program Files\Common Files\Microsoft Shared\OFFICE11\MSO.DLL
**
****************************************************************************/

#ifndef QAX_DUMPCPP_OFFICE_H
#define QAX_DUMPCPP_OFFICE_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef OFFICE_EXPORT
#define OFFICE_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace Office {

    enum DocProperties {
        offPropertyTypeNumber   = 1,
        offPropertyTypeBoolean  = 2,
        offPropertyTypeDate     = 3,
        offPropertyTypeString   = 4,
        offPropertyTypeFloat    = 5
    };

    enum MailFormat {
        mfPlainText             = 1,
        mfHTML                  = 2,
        mfRTF                   = 3
    };

    enum MsoAlertButtonType {
        msoAlertButtonOK        = 0,
        msoAlertButtonOKCancel  = 1,
        msoAlertButtonAbortRetryIgnore= 2,
        msoAlertButtonYesNoCancel= 3,
        msoAlertButtonYesNo     = 4,
        msoAlertButtonRetryCancel= 5,
        msoAlertButtonYesAllNoCancel= 6
    };

    enum MsoAlertCancelType {
        msoAlertCancelDefault   = -1,
        msoAlertCancelFirst     = 0,
        msoAlertCancelSecond    = 1,
        msoAlertCancelThird     = 2,
        msoAlertCancelFourth    = 3,
        msoAlertCancelFifth     = 4
    };

    enum MsoAlertDefaultType {
        msoAlertDefaultFirst    = 0,
        msoAlertDefaultSecond   = 1,
        msoAlertDefaultThird    = 2,
        msoAlertDefaultFourth   = 3,
        msoAlertDefaultFifth    = 4
    };

    enum MsoAlertIconType {
        msoAlertIconNoIcon      = 0,
        msoAlertIconCritical    = 1,
        msoAlertIconQuery       = 2,
        msoAlertIconWarning     = 3,
        msoAlertIconInfo        = 4
    };

    enum MsoAlignCmd {
        msoAlignLefts           = 0,
        msoAlignCenters         = 1,
        msoAlignRights          = 2,
        msoAlignTops            = 3,
        msoAlignMiddles         = 4,
        msoAlignBottoms         = 5
    };

    enum MsoAnimationType {
        msoAnimationIdle        = 1,
        msoAnimationGreeting    = 2,
        msoAnimationGoodbye     = 3,
        msoAnimationBeginSpeaking= 4,
        msoAnimationRestPose    = 5,
        msoAnimationCharacterSuccessMajor= 6,
        msoAnimationGetAttentionMajor= 11,
        msoAnimationGetAttentionMinor= 12,
        msoAnimationSearching   = 13,
        msoAnimationPrinting    = 18,
        msoAnimationGestureRight= 19,
        msoAnimationWritingNotingSomething= 22,
        msoAnimationWorkingAtSomething= 23,
        msoAnimationThinking    = 24,
        msoAnimationSendingMail = 25,
        msoAnimationListensToComputer= 26,
        msoAnimationDisappear   = 31,
        msoAnimationAppear      = 32,
        msoAnimationGetArtsy    = 100,
        msoAnimationGetTechy    = 101,
        msoAnimationGetWizardy  = 102,
        msoAnimationCheckingSomething= 103,
        msoAnimationLookDown    = 104,
        msoAnimationLookDownLeft= 105,
        msoAnimationLookDownRight= 106,
        msoAnimationLookLeft    = 107,
        msoAnimationLookRight   = 108,
        msoAnimationLookUp      = 109,
        msoAnimationLookUpLeft  = 110,
        msoAnimationLookUpRight = 111,
        msoAnimationSaving      = 112,
        msoAnimationGestureDown = 113,
        msoAnimationGestureLeft = 114,
        msoAnimationGestureUp   = 115,
        msoAnimationEmptyTrash  = 116
    };

    enum MsoAppLanguageID {
        msoLanguageIDInstall    = 1,
        msoLanguageIDUI         = 2,
        msoLanguageIDHelp       = 3,
        msoLanguageIDExeMode    = 4,
        msoLanguageIDUIPrevious = 5
    };

    enum MsoArrowheadLength {
        msoArrowheadLengthMixed = -2,
        msoArrowheadShort       = 1,
        msoArrowheadLengthMedium= 2,
        msoArrowheadLong        = 3
    };

    enum MsoArrowheadStyle {
        msoArrowheadStyleMixed  = -2,
        msoArrowheadNone        = 1,
        msoArrowheadTriangle    = 2,
        msoArrowheadOpen        = 3,
        msoArrowheadStealth     = 4,
        msoArrowheadDiamond     = 5,
        msoArrowheadOval        = 6
    };

    enum MsoArrowheadWidth {
        msoArrowheadWidthMixed  = -2,
        msoArrowheadNarrow      = 1,
        msoArrowheadWidthMedium = 2,
        msoArrowheadWide        = 3
    };

    enum MsoAutoShapeType {
        msoShapeMixed           = -2,
        msoShapeRectangle       = 1,
        msoShapeParallelogram   = 2,
        msoShapeTrapezoid       = 3,
        msoShapeDiamond         = 4,
        msoShapeRoundedRectangle= 5,
        msoShapeOctagon         = 6,
        msoShapeIsoscelesTriangle= 7,
        msoShapeRightTriangle   = 8,
        msoShapeOval            = 9,
        msoShapeHexagon         = 10,
        msoShapeCross           = 11,
        msoShapeRegularPentagon = 12,
        msoShapeCan             = 13,
        msoShapeCube            = 14,
        msoShapeBevel           = 15,
        msoShapeFoldedCorner    = 16,
        msoShapeSmileyFace      = 17,
        msoShapeDonut           = 18,
        msoShapeNoSymbol        = 19,
        msoShapeBlockArc        = 20,
        msoShapeHeart           = 21,
        msoShapeLightningBolt   = 22,
        msoShapeSun             = 23,
        msoShapeMoon            = 24,
        msoShapeArc             = 25,
        msoShapeDoubleBracket   = 26,
        msoShapeDoubleBrace     = 27,
        msoShapePlaque          = 28,
        msoShapeLeftBracket     = 29,
        msoShapeRightBracket    = 30,
        msoShapeLeftBrace       = 31,
        msoShapeRightBrace      = 32,
        msoShapeRightArrow      = 33,
        msoShapeLeftArrow       = 34,
        msoShapeUpArrow         = 35,
        msoShapeDownArrow       = 36,
        msoShapeLeftRightArrow  = 37,
        msoShapeUpDownArrow     = 38,
        msoShapeQuadArrow       = 39,
        msoShapeLeftRightUpArrow= 40,
        msoShapeBentArrow       = 41,
        msoShapeUTurnArrow      = 42,
        msoShapeLeftUpArrow     = 43,
        msoShapeBentUpArrow     = 44,
        msoShapeCurvedRightArrow= 45,
        msoShapeCurvedLeftArrow = 46,
        msoShapeCurvedUpArrow   = 47,
        msoShapeCurvedDownArrow = 48,
        msoShapeStripedRightArrow= 49,
        msoShapeNotchedRightArrow= 50,
        msoShapePentagon        = 51,
        msoShapeChevron         = 52,
        msoShapeRightArrowCallout= 53,
        msoShapeLeftArrowCallout= 54,
        msoShapeUpArrowCallout  = 55,
        msoShapeDownArrowCallout= 56,
        msoShapeLeftRightArrowCallout= 57,
        msoShapeUpDownArrowCallout= 58,
        msoShapeQuadArrowCallout= 59,
        msoShapeCircularArrow   = 60,
        msoShapeFlowchartProcess= 61,
        msoShapeFlowchartAlternateProcess= 62,
        msoShapeFlowchartDecision= 63,
        msoShapeFlowchartData   = 64,
        msoShapeFlowchartPredefinedProcess= 65,
        msoShapeFlowchartInternalStorage= 66,
        msoShapeFlowchartDocument= 67,
        msoShapeFlowchartMultidocument= 68,
        msoShapeFlowchartTerminator= 69,
        msoShapeFlowchartPreparation= 70,
        msoShapeFlowchartManualInput= 71,
        msoShapeFlowchartManualOperation= 72,
        msoShapeFlowchartConnector= 73,
        msoShapeFlowchartOffpageConnector= 74,
        msoShapeFlowchartCard   = 75,
        msoShapeFlowchartPunchedTape= 76,
        msoShapeFlowchartSummingJunction= 77,
        msoShapeFlowchartOr     = 78,
        msoShapeFlowchartCollate= 79,
        msoShapeFlowchartSort   = 80,
        msoShapeFlowchartExtract= 81,
        msoShapeFlowchartMerge  = 82,
        msoShapeFlowchartStoredData= 83,
        msoShapeFlowchartDelay  = 84,
        msoShapeFlowchartSequentialAccessStorage= 85,
        msoShapeFlowchartMagneticDisk= 86,
        msoShapeFlowchartDirectAccessStorage= 87,
        msoShapeFlowchartDisplay= 88,
        msoShapeExplosion1      = 89,
        msoShapeExplosion2      = 90,
        msoShape4pointStar      = 91,
        msoShape5pointStar      = 92,
        msoShape8pointStar      = 93,
        msoShape16pointStar     = 94,
        msoShape24pointStar     = 95,
        msoShape32pointStar     = 96,
        msoShapeUpRibbon        = 97,
        msoShapeDownRibbon      = 98,
        msoShapeCurvedUpRibbon  = 99,
        msoShapeCurvedDownRibbon= 100,
        msoShapeVerticalScroll  = 101,
        msoShapeHorizontalScroll= 102,
        msoShapeWave            = 103,
        msoShapeDoubleWave      = 104,
        msoShapeRectangularCallout= 105,
        msoShapeRoundedRectangularCallout= 106,
        msoShapeOvalCallout     = 107,
        msoShapeCloudCallout    = 108,
        msoShapeLineCallout1    = 109,
        msoShapeLineCallout2    = 110,
        msoShapeLineCallout3    = 111,
        msoShapeLineCallout4    = 112,
        msoShapeLineCallout1AccentBar= 113,
        msoShapeLineCallout2AccentBar= 114,
        msoShapeLineCallout3AccentBar= 115,
        msoShapeLineCallout4AccentBar= 116,
        msoShapeLineCallout1NoBorder= 117,
        msoShapeLineCallout2NoBorder= 118,
        msoShapeLineCallout3NoBorder= 119,
        msoShapeLineCallout4NoBorder= 120,
        msoShapeLineCallout1BorderandAccentBar= 121,
        msoShapeLineCallout2BorderandAccentBar= 122,
        msoShapeLineCallout3BorderandAccentBar= 123,
        msoShapeLineCallout4BorderandAccentBar= 124,
        msoShapeActionButtonCustom= 125,
        msoShapeActionButtonHome= 126,
        msoShapeActionButtonHelp= 127,
        msoShapeActionButtonInformation= 128,
        msoShapeActionButtonBackorPrevious= 129,
        msoShapeActionButtonForwardorNext= 130,
        msoShapeActionButtonBeginning= 131,
        msoShapeActionButtonEnd = 132,
        msoShapeActionButtonReturn= 133,
        msoShapeActionButtonDocument= 134,
        msoShapeActionButtonSound= 135,
        msoShapeActionButtonMovie= 136,
        msoShapeBalloon         = 137,
        msoShapeNotPrimitive    = 138
    };

    enum MsoAutomationSecurity {
        msoAutomationSecurityLow= 1,
        msoAutomationSecurityByUI= 2,
        msoAutomationSecurityForceDisable= 3
    };

    enum MsoBalloonButtonType {
        msoBalloonButtonYesToAll= -15,
        msoBalloonButtonOptions = -14,
        msoBalloonButtonTips    = -13,
        msoBalloonButtonClose   = -12,
        msoBalloonButtonSnooze  = -11,
        msoBalloonButtonSearch  = -10,
        msoBalloonButtonIgnore  = -9,
        msoBalloonButtonAbort   = -8,
        msoBalloonButtonRetry   = -7,
        msoBalloonButtonNext    = -6,
        msoBalloonButtonBack    = -5,
        msoBalloonButtonNo      = -4,
        msoBalloonButtonYes     = -3,
        msoBalloonButtonCancel  = -2,
        msoBalloonButtonOK      = -1,
        msoBalloonButtonNull    = 0
    };

    enum MsoBalloonErrorType {
        msoBalloonErrorNone     = 0,
        msoBalloonErrorOther    = 1,
        msoBalloonErrorTooBig   = 2,
        msoBalloonErrorOutOfMemory= 3,
        msoBalloonErrorBadPictureRef= 4,
        msoBalloonErrorBadReference= 5,
        msoBalloonErrorButtonlessModal= 6,
        msoBalloonErrorButtonModeless= 7,
        msoBalloonErrorBadCharacter= 8,
        msoBalloonErrorCOMFailure= 9,
        msoBalloonErrorCharNotTopmostForModal= 10,
        msoBalloonErrorTooManyControls= 11
    };

    enum MsoBalloonType {
        msoBalloonTypeButtons   = 0,
        msoBalloonTypeBullets   = 1,
        msoBalloonTypeNumbers   = 2
    };

    enum MsoBarPosition {
        msoBarLeft              = 0,
        msoBarTop               = 1,
        msoBarRight             = 2,
        msoBarBottom            = 3,
        msoBarFloating          = 4,
        msoBarPopup             = 5,
        msoBarMenuBar           = 6
    };

    enum MsoBarProtection {
        msoBarNoProtection      = 0,
        msoBarNoCustomize       = 1,
        msoBarNoResize          = 2,
        msoBarNoMove            = 4,
        msoBarNoChangeVisible   = 8,
        msoBarNoChangeDock      = 16,
        msoBarNoVerticalDock    = 32,
        msoBarNoHorizontalDock  = 64
    };

    enum MsoBarRow {
        msoBarRowFirst          = 0,
        msoBarRowLast           = -1
    };

    enum MsoBarType {
        msoBarTypeNormal        = 0,
        msoBarTypeMenuBar       = 1,
        msoBarTypePopup         = 2
    };

    enum MsoBlackWhiteMode {
        msoBlackWhiteMixed      = -2,
        msoBlackWhiteAutomatic  = 1,
        msoBlackWhiteGrayScale  = 2,
        msoBlackWhiteLightGrayScale= 3,
        msoBlackWhiteInverseGrayScale= 4,
        msoBlackWhiteGrayOutline= 5,
        msoBlackWhiteBlackTextAndLine= 6,
        msoBlackWhiteHighContrast= 7,
        msoBlackWhiteBlack      = 8,
        msoBlackWhiteWhite      = 9,
        msoBlackWhiteDontShow   = 10
    };

    enum MsoButtonSetType {
        msoButtonSetNone        = 0,
        msoButtonSetOK          = 1,
        msoButtonSetCancel      = 2,
        msoButtonSetOkCancel    = 3,
        msoButtonSetYesNo       = 4,
        msoButtonSetYesNoCancel = 5,
        msoButtonSetBackClose   = 6,
        msoButtonSetNextClose   = 7,
        msoButtonSetBackNextClose= 8,
        msoButtonSetRetryCancel = 9,
        msoButtonSetAbortRetryIgnore= 10,
        msoButtonSetSearchClose = 11,
        msoButtonSetBackNextSnooze= 12,
        msoButtonSetTipsOptionsClose= 13,
        msoButtonSetYesAllNoCancel= 14
    };

    enum MsoButtonState {
        msoButtonUp             = 0,
        msoButtonDown           = -1,
        msoButtonMixed          = 2
    };

    enum MsoButtonStyle {
        msoButtonAutomatic      = 0,
        msoButtonIcon           = 1,
        msoButtonCaption        = 2,
        msoButtonIconAndCaption = 3,
        msoButtonIconAndWrapCaption= 7,
        msoButtonIconAndCaptionBelow= 11,
        msoButtonWrapCaption    = 14,
        msoButtonIconAndWrapCaptionBelow= 15
    };

    enum MsoButtonStyleHidden {
        msoButtonWrapText       = 4,
        msoButtonTextBelow      = 8
    };

    enum MsoCalloutAngleType {
        msoCalloutAngleMixed    = -2,
        msoCalloutAngleAutomatic= 1,
        msoCalloutAngle30       = 2,
        msoCalloutAngle45       = 3,
        msoCalloutAngle60       = 4,
        msoCalloutAngle90       = 5
    };

    enum MsoCalloutDropType {
        msoCalloutDropMixed     = -2,
        msoCalloutDropCustom    = 1,
        msoCalloutDropTop       = 2,
        msoCalloutDropCenter    = 3,
        msoCalloutDropBottom    = 4
    };

    enum MsoCalloutType {
        msoCalloutMixed         = -2,
        msoCalloutOne           = 1,
        msoCalloutTwo           = 2,
        msoCalloutThree         = 3,
        msoCalloutFour          = 4
    };

    enum MsoCharacterSet {
        msoCharacterSetArabic   = 1,
        msoCharacterSetCyrillic = 2,
        msoCharacterSetEnglishWesternEuropeanOtherLatinScript= 3,
        msoCharacterSetGreek    = 4,
        msoCharacterSetHebrew   = 5,
        msoCharacterSetJapanese = 6,
        msoCharacterSetKorean   = 7,
        msoCharacterSetMultilingualUnicode= 8,
        msoCharacterSetSimplifiedChinese= 9,
        msoCharacterSetThai     = 10,
        msoCharacterSetTraditionalChinese= 11,
        msoCharacterSetVietnamese= 12
    };

    enum MsoColorType {
        msoColorTypeMixed       = -2,
        msoColorTypeRGB         = 1,
        msoColorTypeScheme      = 2,
        msoColorTypeCMYK        = 3,
        msoColorTypeCMS         = 4,
        msoColorTypeInk         = 5
    };

    enum MsoComboStyle {
        msoComboNormal          = 0,
        msoComboLabel           = 1
    };

    enum MsoCommandBarButtonHyperlinkType {
        msoCommandBarButtonHyperlinkNone= 0,
        msoCommandBarButtonHyperlinkOpen= 1,
        msoCommandBarButtonHyperlinkInsertPicture= 2
    };

    enum MsoCondition {
        msoConditionFileTypeAllFiles= 1,
        msoConditionFileTypeOfficeFiles= 2,
        msoConditionFileTypeWordDocuments= 3,
        msoConditionFileTypeExcelWorkbooks= 4,
        msoConditionFileTypePowerPointPresentations= 5,
        msoConditionFileTypeBinders= 6,
        msoConditionFileTypeDatabases= 7,
        msoConditionFileTypeTemplates= 8,
        msoConditionIncludes    = 9,
        msoConditionIncludesPhrase= 10,
        msoConditionBeginsWith  = 11,
        msoConditionEndsWith    = 12,
        msoConditionIncludesNearEachOther= 13,
        msoConditionIsExactly   = 14,
        msoConditionIsNot       = 15,
        msoConditionYesterday   = 16,
        msoConditionToday       = 17,
        msoConditionTomorrow    = 18,
        msoConditionLastWeek    = 19,
        msoConditionThisWeek    = 20,
        msoConditionNextWeek    = 21,
        msoConditionLastMonth   = 22,
        msoConditionThisMonth   = 23,
        msoConditionNextMonth   = 24,
        msoConditionAnytime     = 25,
        msoConditionAnytimeBetween= 26,
        msoConditionOn          = 27,
        msoConditionOnOrAfter   = 28,
        msoConditionOnOrBefore  = 29,
        msoConditionInTheNext   = 30,
        msoConditionInTheLast   = 31,
        msoConditionEquals      = 32,
        msoConditionDoesNotEqual= 33,
        msoConditionAnyNumberBetween= 34,
        msoConditionAtMost      = 35,
        msoConditionAtLeast     = 36,
        msoConditionMoreThan    = 37,
        msoConditionLessThan    = 38,
        msoConditionIsYes       = 39,
        msoConditionIsNo        = 40,
        msoConditionIncludesFormsOf= 41,
        msoConditionFreeText    = 42,
        msoConditionFileTypeOutlookItems= 43,
        msoConditionFileTypeMailItem= 44,
        msoConditionFileTypeCalendarItem= 45,
        msoConditionFileTypeContactItem= 46,
        msoConditionFileTypeNoteItem= 47,
        msoConditionFileTypeJournalItem= 48,
        msoConditionFileTypeTaskItem= 49,
        msoConditionFileTypePhotoDrawFiles= 50,
        msoConditionFileTypeDataConnectionFiles= 51,
        msoConditionFileTypePublisherFiles= 52,
        msoConditionFileTypeProjectFiles= 53,
        msoConditionFileTypeDocumentImagingFiles= 54,
        msoConditionFileTypeVisioFiles= 55,
        msoConditionFileTypeDesignerFiles= 56,
        msoConditionFileTypeWebPages= 57,
        msoConditionEqualsLow   = 58,
        msoConditionEqualsNormal= 59,
        msoConditionEqualsHigh  = 60,
        msoConditionNotEqualToLow= 61,
        msoConditionNotEqualToNormal= 62,
        msoConditionNotEqualToHigh= 63,
        msoConditionEqualsNotStarted= 64,
        msoConditionEqualsInProgress= 65,
        msoConditionEqualsCompleted= 66,
        msoConditionEqualsWaitingForSomeoneElse= 67,
        msoConditionEqualsDeferred= 68,
        msoConditionNotEqualToNotStarted= 69,
        msoConditionNotEqualToInProgress= 70,
        msoConditionNotEqualToCompleted= 71,
        msoConditionNotEqualToWaitingForSomeoneElse= 72,
        msoConditionNotEqualToDeferred= 73
    };

    enum MsoConnector {
        msoConnectorAnd         = 1,
        msoConnectorOr          = 2
    };

    enum MsoConnectorType {
        msoConnectorTypeMixed   = -2,
        msoConnectorStraight    = 1,
        msoConnectorElbow       = 2,
        msoConnectorCurve       = 3
    };

    enum MsoControlOLEUsage {
        msoControlOLEUsageNeither= 0,
        msoControlOLEUsageServer= 1,
        msoControlOLEUsageClient= 2,
        msoControlOLEUsageBoth  = 3
    };

    enum MsoControlType {
        msoControlCustom        = 0,
        msoControlButton        = 1,
        msoControlEdit          = 2,
        msoControlDropdown      = 3,
        msoControlComboBox      = 4,
        msoControlButtonDropdown= 5,
        msoControlSplitDropdown = 6,
        msoControlOCXDropdown   = 7,
        msoControlGenericDropdown= 8,
        msoControlGraphicDropdown= 9,
        msoControlPopup         = 10,
        msoControlGraphicPopup  = 11,
        msoControlButtonPopup   = 12,
        msoControlSplitButtonPopup= 13,
        msoControlSplitButtonMRUPopup= 14,
        msoControlLabel         = 15,
        msoControlExpandingGrid = 16,
        msoControlSplitExpandingGrid= 17,
        msoControlGrid          = 18,
        msoControlGauge         = 19,
        msoControlGraphicCombo  = 20,
        msoControlPane          = 21,
        msoControlActiveX       = 22,
        msoControlSpinner       = 23,
        msoControlLabelEx       = 24,
        msoControlWorkPane      = 25,
        msoControlAutoCompleteCombo= 26
    };

    enum MsoDiagramNodeType {
        msoDiagramNode          = 1,
        msoDiagramAssistant     = 2
    };

    enum MsoDiagramType {
        msoDiagramMixed         = -2,
        msoDiagramOrgChart      = 1,
        msoDiagramCycle         = 2,
        msoDiagramRadial        = 3,
        msoDiagramPyramid       = 4,
        msoDiagramVenn          = 5,
        msoDiagramTarget        = 6
    };

    enum MsoDistributeCmd {
        msoDistributeHorizontally= 0,
        msoDistributeVertically = 1
    };

    enum MsoDocProperties {
        msoPropertyTypeNumber   = 1,
        msoPropertyTypeBoolean  = 2,
        msoPropertyTypeDate     = 3,
        msoPropertyTypeString   = 4,
        msoPropertyTypeFloat    = 5
    };

    enum MsoEditingType {
        msoEditingAuto          = 0,
        msoEditingCorner        = 1,
        msoEditingSmooth        = 2,
        msoEditingSymmetric     = 3
    };

    enum MsoEncoding {
        msoEncodingThai         = 874,
        msoEncodingJapaneseShiftJIS= 932,
        msoEncodingSimplifiedChineseGBK= 936,
        msoEncodingKorean       = 949,
        msoEncodingTraditionalChineseBig5= 950,
        msoEncodingUnicodeLittleEndian= 1200,
        msoEncodingUnicodeBigEndian= 1201,
        msoEncodingCentralEuropean= 1250,
        msoEncodingCyrillic     = 1251,
        msoEncodingWestern      = 1252,
        msoEncodingGreek        = 1253,
        msoEncodingTurkish      = 1254,
        msoEncodingHebrew       = 1255,
        msoEncodingArabic       = 1256,
        msoEncodingBaltic       = 1257,
        msoEncodingVietnamese   = 1258,
        msoEncodingAutoDetect   = 50001,
        msoEncodingJapaneseAutoDetect= 50932,
        msoEncodingSimplifiedChineseAutoDetect= 50936,
        msoEncodingKoreanAutoDetect= 50949,
        msoEncodingTraditionalChineseAutoDetect= 50950,
        msoEncodingCyrillicAutoDetect= 51251,
        msoEncodingGreekAutoDetect= 51253,
        msoEncodingArabicAutoDetect= 51256,
        msoEncodingISO88591Latin1= 28591,
        msoEncodingISO88592CentralEurope= 28592,
        msoEncodingISO88593Latin3= 28593,
        msoEncodingISO88594Baltic= 28594,
        msoEncodingISO88595Cyrillic= 28595,
        msoEncodingISO88596Arabic= 28596,
        msoEncodingISO88597Greek= 28597,
        msoEncodingISO88598Hebrew= 28598,
        msoEncodingISO88599Turkish= 28599,
        msoEncodingISO885915Latin9= 28605,
        msoEncodingISO88598HebrewLogical= 38598,
        msoEncodingISO2022JPNoHalfwidthKatakana= 50220,
        msoEncodingISO2022JPJISX02021984= 50221,
        msoEncodingISO2022JPJISX02011989= 50222,
        msoEncodingISO2022KR    = 50225,
        msoEncodingISO2022CNTraditionalChinese= 50227,
        msoEncodingISO2022CNSimplifiedChinese= 50229,
        msoEncodingMacRoman     = 10000,
        msoEncodingMacJapanese  = 10001,
        msoEncodingMacTraditionalChineseBig5= 10002,
        msoEncodingMacKorean    = 10003,
        msoEncodingMacArabic    = 10004,
        msoEncodingMacHebrew    = 10005,
        msoEncodingMacGreek1    = 10006,
        msoEncodingMacCyrillic  = 10007,
        msoEncodingMacSimplifiedChineseGB2312= 10008,
        msoEncodingMacRomania   = 10010,
        msoEncodingMacUkraine   = 10017,
        msoEncodingMacLatin2    = 10029,
        msoEncodingMacIcelandic = 10079,
        msoEncodingMacTurkish   = 10081,
        msoEncodingMacCroatia   = 10082,
        msoEncodingEBCDICUSCanada= 37,
        msoEncodingEBCDICInternational= 500,
        msoEncodingEBCDICMultilingualROECELatin2= 870,
        msoEncodingEBCDICGreekModern= 875,
        msoEncodingEBCDICTurkishLatin5= 1026,
        msoEncodingEBCDICGermany= 20273,
        msoEncodingEBCDICDenmarkNorway= 20277,
        msoEncodingEBCDICFinlandSweden= 20278,
        msoEncodingEBCDICItaly  = 20280,
        msoEncodingEBCDICLatinAmericaSpain= 20284,
        msoEncodingEBCDICUnitedKingdom= 20285,
        msoEncodingEBCDICJapaneseKatakanaExtended= 20290,
        msoEncodingEBCDICFrance = 20297,
        msoEncodingEBCDICArabic = 20420,
        msoEncodingEBCDICGreek  = 20423,
        msoEncodingEBCDICHebrew = 20424,
        msoEncodingEBCDICKoreanExtended= 20833,
        msoEncodingEBCDICThai   = 20838,
        msoEncodingEBCDICIcelandic= 20871,
        msoEncodingEBCDICTurkish= 20905,
        msoEncodingEBCDICRussian= 20880,
        msoEncodingEBCDICSerbianBulgarian= 21025,
        msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese= 50930,
        msoEncodingEBCDICUSCanadaAndJapanese= 50931,
        msoEncodingEBCDICKoreanExtendedAndKorean= 50933,
        msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese= 50935,
        msoEncodingEBCDICUSCanadaAndTraditionalChinese= 50937,
        msoEncodingEBCDICJapaneseLatinExtendedAndJapanese= 50939,
        msoEncodingOEMUnitedStates= 437,
        msoEncodingOEMGreek437G = 737,
        msoEncodingOEMBaltic    = 775,
        msoEncodingOEMMultilingualLatinI= 850,
        msoEncodingOEMMultilingualLatinII= 852,
        msoEncodingOEMCyrillic  = 855,
        msoEncodingOEMTurkish   = 857,
        msoEncodingOEMPortuguese= 860,
        msoEncodingOEMIcelandic = 861,
        msoEncodingOEMHebrew    = 862,
        msoEncodingOEMCanadianFrench= 863,
        msoEncodingOEMArabic    = 864,
        msoEncodingOEMNordic    = 865,
        msoEncodingOEMCyrillicII= 866,
        msoEncodingOEMModernGreek= 869,
        msoEncodingEUCJapanese  = 51932,
        msoEncodingEUCChineseSimplifiedChinese= 51936,
        msoEncodingEUCKorean    = 51949,
        msoEncodingEUCTaiwaneseTraditionalChinese= 51950,
        msoEncodingISCIIDevanagari= 57002,
        msoEncodingISCIIBengali = 57003,
        msoEncodingISCIITamil   = 57004,
        msoEncodingISCIITelugu  = 57005,
        msoEncodingISCIIAssamese= 57006,
        msoEncodingISCIIOriya   = 57007,
        msoEncodingISCIIKannada = 57008,
        msoEncodingISCIIMalayalam= 57009,
        msoEncodingISCIIGujarati= 57010,
        msoEncodingISCIIPunjabi = 57011,
        msoEncodingArabicASMO   = 708,
        msoEncodingArabicTransparentASMO= 720,
        msoEncodingKoreanJohab  = 1361,
        msoEncodingTaiwanCNS    = 20000,
        msoEncodingTaiwanTCA    = 20001,
        msoEncodingTaiwanEten   = 20002,
        msoEncodingTaiwanIBM5550= 20003,
        msoEncodingTaiwanTeleText= 20004,
        msoEncodingTaiwanWang   = 20005,
        msoEncodingIA5IRV       = 20105,
        msoEncodingIA5German    = 20106,
        msoEncodingIA5Swedish   = 20107,
        msoEncodingIA5Norwegian = 20108,
        msoEncodingUSASCII      = 20127,
        msoEncodingT61          = 20261,
        msoEncodingISO6937NonSpacingAccent= 20269,
        msoEncodingKOI8R        = 20866,
        msoEncodingExtAlphaLowercase= 21027,
        msoEncodingKOI8U        = 21866,
        msoEncodingEuropa3      = 29001,
        msoEncodingHZGBSimplifiedChinese= 52936,
        msoEncodingSimplifiedChineseGB18030= 54936,
        msoEncodingUTF7         = 65000,
        msoEncodingUTF8         = 65001
    };

    enum MsoExtraInfoMethod {
        msoMethodGet            = 0,
        msoMethodPost           = 1
    };

    enum MsoExtrusionColorType {
        msoExtrusionColorTypeMixed= -2,
        msoExtrusionColorAutomatic= 1,
        msoExtrusionColorCustom = 2
    };

    enum MsoFarEastLineBreakLanguageID {
        MsoFarEastLineBreakLanguageJapanese= 1041,
        MsoFarEastLineBreakLanguageKorean= 1042,
        MsoFarEastLineBreakLanguageSimplifiedChinese= 2052,
        MsoFarEastLineBreakLanguageTraditionalChinese= 1028
    };

    enum MsoFeatureInstall {
        msoFeatureInstallNone   = 0,
        msoFeatureInstallOnDemand= 1,
        msoFeatureInstallOnDemandWithUI= 2
    };

    enum MsoFileDialogType {
        msoFileDialogOpen       = 1,
        msoFileDialogSaveAs     = 2,
        msoFileDialogFilePicker = 3,
        msoFileDialogFolderPicker= 4
    };

    enum MsoFileDialogView {
        msoFileDialogViewList   = 1,
        msoFileDialogViewDetails= 2,
        msoFileDialogViewProperties= 3,
        msoFileDialogViewPreview= 4,
        msoFileDialogViewThumbnail= 5,
        msoFileDialogViewLargeIcons= 6,
        msoFileDialogViewSmallIcons= 7,
        msoFileDialogViewWebView= 8,
        msoFileDialogViewTiles  = 9
    };

    enum MsoFileFindListBy {
        msoListbyName           = 1,
        msoListbyTitle          = 2
    };

    enum MsoFileFindOptions {
        msoOptionsNew           = 1,
        msoOptionsAdd           = 2,
        msoOptionsWithin        = 3
    };

    enum MsoFileFindSortBy {
        msoFileFindSortbyAuthor = 1,
        msoFileFindSortbyDateCreated= 2,
        msoFileFindSortbyLastSavedBy= 3,
        msoFileFindSortbyDateSaved= 4,
        msoFileFindSortbyFileName= 5,
        msoFileFindSortbySize   = 6,
        msoFileFindSortbyTitle  = 7
    };

    enum MsoFileFindView {
        msoViewFileInfo         = 1,
        msoViewPreview          = 2,
        msoViewSummaryInfo      = 3
    };

    enum MsoFileNewAction {
        msoEditFile             = 0,
        msoCreateNewFile        = 1,
        msoOpenFile             = 2
    };

    enum MsoFileNewSection {
        msoOpenDocument         = 0,
        msoNew                  = 1,
        msoNewfromExistingFile  = 2,
        msoNewfromTemplate      = 3,
        msoBottomSection        = 4
    };

    enum MsoFileType {
        msoFileTypeAllFiles     = 1,
        msoFileTypeOfficeFiles  = 2,
        msoFileTypeWordDocuments= 3,
        msoFileTypeExcelWorkbooks= 4,
        msoFileTypePowerPointPresentations= 5,
        msoFileTypeBinders      = 6,
        msoFileTypeDatabases    = 7,
        msoFileTypeTemplates    = 8,
        msoFileTypeOutlookItems = 9,
        msoFileTypeMailItem     = 10,
        msoFileTypeCalendarItem = 11,
        msoFileTypeContactItem  = 12,
        msoFileTypeNoteItem     = 13,
        msoFileTypeJournalItem  = 14,
        msoFileTypeTaskItem     = 15,
        msoFileTypePhotoDrawFiles= 16,
        msoFileTypeDataConnectionFiles= 17,
        msoFileTypePublisherFiles= 18,
        msoFileTypeProjectFiles = 19,
        msoFileTypeDocumentImagingFiles= 20,
        msoFileTypeVisioFiles   = 21,
        msoFileTypeDesignerFiles= 22,
        msoFileTypeWebPages     = 23
    };

    enum MsoFillType {
        msoFillMixed            = -2,
        msoFillSolid            = 1,
        msoFillPatterned        = 2,
        msoFillGradient         = 3,
        msoFillTextured         = 4,
        msoFillBackground       = 5,
        msoFillPicture          = 6
    };

    enum MsoFilterComparison {
        msoFilterComparisonEqual= 0,
        msoFilterComparisonNotEqual= 1,
        msoFilterComparisonLessThan= 2,
        msoFilterComparisonGreaterThan= 3,
        msoFilterComparisonLessThanEqual= 4,
        msoFilterComparisonGreaterThanEqual= 5,
        msoFilterComparisonIsBlank= 6,
        msoFilterComparisonIsNotBlank= 7,
        msoFilterComparisonContains= 8,
        msoFilterComparisonNotContains= 9
    };

    enum MsoFilterConjunction {
        msoFilterConjunctionAnd = 0,
        msoFilterConjunctionOr  = 1
    };

    enum MsoFlipCmd {
        msoFlipHorizontal       = 0,
        msoFlipVertical         = 1
    };

    enum MsoGradientColorType {
        msoGradientColorMixed   = -2,
        msoGradientOneColor     = 1,
        msoGradientTwoColors    = 2,
        msoGradientPresetColors = 3
    };

    enum MsoGradientStyle {
        msoGradientMixed        = -2,
        msoGradientHorizontal   = 1,
        msoGradientVertical     = 2,
        msoGradientDiagonalUp   = 3,
        msoGradientDiagonalDown = 4,
        msoGradientFromCorner   = 5,
        msoGradientFromTitle    = 6,
        msoGradientFromCenter   = 7
    };

    enum MsoHTMLProjectOpen {
        msoHTMLProjectOpenSourceView= 1,
        msoHTMLProjectOpenTextView= 2
    };

    enum MsoHTMLProjectState {
        msoHTMLProjectStateDocumentLocked= 1,
        msoHTMLProjectStateProjectLocked= 2,
        msoHTMLProjectStateDocumentProjectUnlocked= 3
    };

    enum MsoHorizontalAnchor {
        msoHorizontalAnchorMixed= -2,
        msoAnchorNone           = 1,
        msoAnchorCenter         = 2
    };

    enum MsoHyperlinkType {
        msoHyperlinkRange       = 0,
        msoHyperlinkShape       = 1,
        msoHyperlinkInlineShape = 2
    };

    enum MsoIconType {
        msoIconNone             = 0,
        msoIconAlert            = 2,
        msoIconTip              = 3,
        msoIconAlertInfo        = 4,
        msoIconAlertWarning     = 5,
        msoIconAlertQuery       = 6,
        msoIconAlertCritical    = 7
    };

    enum MsoLanguageID {
        msoLanguageIDMixed      = -2,
        msoLanguageIDNone       = 0,
        msoLanguageIDNoProofing = 1024,
        msoLanguageIDAfrikaans  = 1078,
        msoLanguageIDAlbanian   = 1052,
        msoLanguageIDAmharic    = 1118,
        msoLanguageIDArabicAlgeria= 5121,
        msoLanguageIDArabicBahrain= 15361,
        msoLanguageIDArabicEgypt= 3073,
        msoLanguageIDArabicIraq = 2049,
        msoLanguageIDArabicJordan= 11265,
        msoLanguageIDArabicKuwait= 13313,
        msoLanguageIDArabicLebanon= 12289,
        msoLanguageIDArabicLibya= 4097,
        msoLanguageIDArabicMorocco= 6145,
        msoLanguageIDArabicOman = 8193,
        msoLanguageIDArabicQatar= 16385,
        msoLanguageIDArabic     = 1025,
        msoLanguageIDArabicSyria= 10241,
        msoLanguageIDArabicTunisia= 7169,
        msoLanguageIDArabicUAE  = 14337,
        msoLanguageIDArabicYemen= 9217,
        msoLanguageIDArmenian   = 1067,
        msoLanguageIDAssamese   = 1101,
        msoLanguageIDAzeriCyrillic= 2092,
        msoLanguageIDAzeriLatin = 1068,
        msoLanguageIDBasque     = 1069,
        msoLanguageIDByelorussian= 1059,
        msoLanguageIDBengali    = 1093,
        msoLanguageIDBosnian    = 4122,
        msoLanguageIDBosnianBosniaHerzegovinaCyrillic= 8218,
        msoLanguageIDBosnianBosniaHerzegovinaLatin= 5146,
        msoLanguageIDBulgarian  = 1026,
        msoLanguageIDBurmese    = 1109,
        msoLanguageIDCatalan    = 1027,
        msoLanguageIDChineseHongKongSAR= 3076,
        msoLanguageIDChineseMacaoSAR= 5124,
        msoLanguageIDSimplifiedChinese= 2052,
        msoLanguageIDChineseSingapore= 4100,
        msoLanguageIDTraditionalChinese= 1028,
        msoLanguageIDCherokee   = 1116,
        msoLanguageIDCroatian   = 1050,
        msoLanguageIDCzech      = 1029,
        msoLanguageIDDanish     = 1030,
        msoLanguageIDDivehi     = 1125,
        msoLanguageIDBelgianDutch= 2067,
        msoLanguageIDDutch      = 1043,
        msoLanguageIDDzongkhaBhutan= 2129,
        msoLanguageIDEdo        = 1126,
        msoLanguageIDEnglishAUS = 3081,
        msoLanguageIDEnglishBelize= 10249,
        msoLanguageIDEnglishCanadian= 4105,
        msoLanguageIDEnglishCaribbean= 9225,
        msoLanguageIDEnglishIndonesia= 14345,
        msoLanguageIDEnglishIreland= 6153,
        msoLanguageIDEnglishJamaica= 8201,
        msoLanguageIDEnglishNewZealand= 5129,
        msoLanguageIDEnglishPhilippines= 13321,
        msoLanguageIDEnglishSouthAfrica= 7177,
        msoLanguageIDEnglishTrinidadTobago= 11273,
        msoLanguageIDEnglishUK  = 2057,
        msoLanguageIDEnglishUS  = 1033,
        msoLanguageIDEnglishZimbabwe= 12297,
        msoLanguageIDEstonian   = 1061,
        msoLanguageIDFaeroese   = 1080,
        msoLanguageIDFarsi      = 1065,
        msoLanguageIDFilipino   = 1124,
        msoLanguageIDFinnish    = 1035,
        msoLanguageIDBelgianFrench= 2060,
        msoLanguageIDFrenchCameroon= 11276,
        msoLanguageIDFrenchCanadian= 3084,
        msoLanguageIDFrenchCotedIvoire= 12300,
        msoLanguageIDFrench     = 1036,
        msoLanguageIDFrenchHaiti= 15372,
        msoLanguageIDFrenchLuxembourg= 5132,
        msoLanguageIDFrenchMali = 13324,
        msoLanguageIDFrenchMonaco= 6156,
        msoLanguageIDFrenchMorocco= 14348,
        msoLanguageIDFrenchReunion= 8204,
        msoLanguageIDFrenchSenegal= 10252,
        msoLanguageIDSwissFrench= 4108,
        msoLanguageIDFrenchWestIndies= 7180,
        msoLanguageIDFrenchZaire= 9228,
        msoLanguageIDFrisianNetherlands= 1122,
        msoLanguageIDFulfulde   = 1127,
        msoLanguageIDGaelicIreland= 2108,
        msoLanguageIDGaelicScotland= 1084,
        msoLanguageIDGalician   = 1110,
        msoLanguageIDGeorgian   = 1079,
        msoLanguageIDGermanAustria= 3079,
        msoLanguageIDGerman     = 1031,
        msoLanguageIDGermanLiechtenstein= 5127,
        msoLanguageIDGermanLuxembourg= 4103,
        msoLanguageIDSwissGerman= 2055,
        msoLanguageIDGreek      = 1032,
        msoLanguageIDGuarani    = 1140,
        msoLanguageIDGujarati   = 1095,
        msoLanguageIDHausa      = 1128,
        msoLanguageIDHawaiian   = 1141,
        msoLanguageIDHebrew     = 1037,
        msoLanguageIDHindi      = 1081,
        msoLanguageIDHungarian  = 1038,
        msoLanguageIDIbibio     = 1129,
        msoLanguageIDIcelandic  = 1039,
        msoLanguageIDIgbo       = 1136,
        msoLanguageIDIndonesian = 1057,
        msoLanguageIDInuktitut  = 1117,
        msoLanguageIDItalian    = 1040,
        msoLanguageIDSwissItalian= 2064,
        msoLanguageIDJapanese   = 1041,
        msoLanguageIDKannada    = 1099,
        msoLanguageIDKanuri     = 1137,
        msoLanguageIDKashmiri   = 1120,
        msoLanguageIDKashmiriDevanagari= 2144,
        msoLanguageIDKazakh     = 1087,
        msoLanguageIDKhmer      = 1107,
        msoLanguageIDKirghiz    = 1088,
        msoLanguageIDKonkani    = 1111,
        msoLanguageIDKorean     = 1042,
        msoLanguageIDKyrgyz     = 1088,
        msoLanguageIDLatin      = 1142,
        msoLanguageIDLao        = 1108,
        msoLanguageIDLatvian    = 1062,
        msoLanguageIDLithuanian = 1063,
        msoLanguageIDMacedonian = 1071,
        msoLanguageIDMalaysian  = 1086,
        msoLanguageIDMalayBruneiDarussalam= 2110,
        msoLanguageIDMalayalam  = 1100,
        msoLanguageIDMaltese    = 1082,
        msoLanguageIDManipuri   = 1112,
        msoLanguageIDMaori      = 1153,
        msoLanguageIDMarathi    = 1102,
        msoLanguageIDMongolian  = 1104,
        msoLanguageIDNepali     = 1121,
        msoLanguageIDNorwegianBokmol= 1044,
        msoLanguageIDNorwegianNynorsk= 2068,
        msoLanguageIDOriya      = 1096,
        msoLanguageIDOromo      = 1138,
        msoLanguageIDPashto     = 1123,
        msoLanguageIDPolish     = 1045,
        msoLanguageIDBrazilianPortuguese= 1046,
        msoLanguageIDPortuguese = 2070,
        msoLanguageIDPunjabi    = 1094,
        msoLanguageIDQuechuaBolivia= 1131,
        msoLanguageIDQuechuaEcuador= 2155,
        msoLanguageIDQuechuaPeru= 3179,
        msoLanguageIDRhaetoRomanic= 1047,
        msoLanguageIDRomanianMoldova= 2072,
        msoLanguageIDRomanian   = 1048,
        msoLanguageIDRussianMoldova= 2073,
        msoLanguageIDRussian    = 1049,
        msoLanguageIDSamiLappish= 1083,
        msoLanguageIDSanskrit   = 1103,
        msoLanguageIDSepedi     = 1132,
        msoLanguageIDSerbianBosniaHerzegovinaCyrillic= 7194,
        msoLanguageIDSerbianBosniaHerzegovinaLatin= 6170,
        msoLanguageIDSerbianCyrillic= 3098,
        msoLanguageIDSerbianLatin= 2074,
        msoLanguageIDSesotho    = 1072,
        msoLanguageIDSindhi     = 1113,
        msoLanguageIDSindhiPakistan= 2137,
        msoLanguageIDSinhalese  = 1115,
        msoLanguageIDSlovak     = 1051,
        msoLanguageIDSlovenian  = 1060,
        msoLanguageIDSomali     = 1143,
        msoLanguageIDSorbian    = 1070,
        msoLanguageIDSpanishArgentina= 11274,
        msoLanguageIDSpanishBolivia= 16394,
        msoLanguageIDSpanishChile= 13322,
        msoLanguageIDSpanishColombia= 9226,
        msoLanguageIDSpanishCostaRica= 5130,
        msoLanguageIDSpanishDominicanRepublic= 7178,
        msoLanguageIDSpanishEcuador= 12298,
        msoLanguageIDSpanishElSalvador= 17418,
        msoLanguageIDSpanishGuatemala= 4106,
        msoLanguageIDSpanishHonduras= 18442,
        msoLanguageIDMexicanSpanish= 2058,
        msoLanguageIDSpanishNicaragua= 19466,
        msoLanguageIDSpanishPanama= 6154,
        msoLanguageIDSpanishParaguay= 15370,
        msoLanguageIDSpanishPeru= 10250,
        msoLanguageIDSpanishPuertoRico= 20490,
        msoLanguageIDSpanishModernSort= 3082,
        msoLanguageIDSpanish    = 1034,
        msoLanguageIDSpanishUruguay= 14346,
        msoLanguageIDSpanishVenezuela= 8202,
        msoLanguageIDSutu       = 1072,
        msoLanguageIDSwahili    = 1089,
        msoLanguageIDSwedishFinland= 2077,
        msoLanguageIDSwedish    = 1053,
        msoLanguageIDSyriac     = 1114,
        msoLanguageIDTajik      = 1064,
        msoLanguageIDTamil      = 1097,
        msoLanguageIDTamazight  = 1119,
        msoLanguageIDTamazightLatin= 2143,
        msoLanguageIDTatar      = 1092,
        msoLanguageIDTelugu     = 1098,
        msoLanguageIDThai       = 1054,
        msoLanguageIDTibetan    = 1105,
        msoLanguageIDTigrignaEthiopic= 1139,
        msoLanguageIDTigrignaEritrea= 2163,
        msoLanguageIDTsonga     = 1073,
        msoLanguageIDTswana     = 1074,
        msoLanguageIDTurkish    = 1055,
        msoLanguageIDTurkmen    = 1090,
        msoLanguageIDUkrainian  = 1058,
        msoLanguageIDUrdu       = 1056,
        msoLanguageIDUzbekCyrillic= 2115,
        msoLanguageIDUzbekLatin = 1091,
        msoLanguageIDVenda      = 1075,
        msoLanguageIDVietnamese = 1066,
        msoLanguageIDWelsh      = 1106,
        msoLanguageIDXhosa      = 1076,
        msoLanguageIDYi         = 1144,
        msoLanguageIDYiddish    = 1085,
        msoLanguageIDYoruba     = 1130,
        msoLanguageIDZulu       = 1077
    };

    enum MsoLanguageIDHidden {
        msoLanguageIDChineseHongKong= 3076,
        msoLanguageIDChineseMacao= 5124,
        msoLanguageIDEnglishTrinidad= 11273
    };

    enum MsoLastModified {
        msoLastModifiedYesterday= 1,
        msoLastModifiedToday    = 2,
        msoLastModifiedLastWeek = 3,
        msoLastModifiedThisWeek = 4,
        msoLastModifiedLastMonth= 5,
        msoLastModifiedThisMonth= 6,
        msoLastModifiedAnyTime  = 7
    };

    enum MsoLineDashStyle {
        msoLineDashStyleMixed   = -2,
        msoLineSolid            = 1,
        msoLineSquareDot        = 2,
        msoLineRoundDot         = 3,
        msoLineDash             = 4,
        msoLineDashDot          = 5,
        msoLineDashDotDot       = 6,
        msoLineLongDash         = 7,
        msoLineLongDashDot      = 8
    };

    enum MsoLineStyle {
        msoLineStyleMixed       = -2,
        msoLineSingle           = 1,
        msoLineThinThin         = 2,
        msoLineThinThick        = 3,
        msoLineThickThin        = 4,
        msoLineThickBetweenThin = 5
    };

    enum MsoMenuAnimation {
        msoMenuAnimationNone    = 0,
        msoMenuAnimationRandom  = 1,
        msoMenuAnimationUnfold  = 2,
        msoMenuAnimationSlide   = 3
    };

    enum MsoMixedType {
        msoIntegerMixed         = 32768,
        msoSingleMixed          = -2147483648
    };

    enum MsoModeType {
        msoModeModal            = 0,
        msoModeAutoDown         = 1,
        msoModeModeless         = 2
    };

    enum MsoMoveRow {
        msoMoveRowFirst         = -4,
        msoMoveRowPrev          = -3,
        msoMoveRowNext          = -2,
        msoMoveRowNbr           = -1
    };

    enum MsoOLEMenuGroup {
        msoOLEMenuGroupNone     = -1,
        msoOLEMenuGroupFile     = 0,
        msoOLEMenuGroupEdit     = 1,
        msoOLEMenuGroupContainer= 2,
        msoOLEMenuGroupObject   = 3,
        msoOLEMenuGroupWindow   = 4,
        msoOLEMenuGroupHelp     = 5
    };

    enum MsoOrgChartLayoutType {
        msoOrgChartLayoutMixed  = -2,
        msoOrgChartLayoutStandard= 1,
        msoOrgChartLayoutBothHanging= 2,
        msoOrgChartLayoutLeftHanging= 3,
        msoOrgChartLayoutRightHanging= 4
    };

    enum MsoOrgChartOrientation {
        msoOrgChartOrientationMixed= -2,
        msoOrgChartOrientationVertical= 1
    };

    enum MsoOrientation {
        msoOrientationMixed     = -2,
        msoOrientationHorizontal= 1,
        msoOrientationVertical  = 2
    };

    enum MsoPatternType {
        msoPatternMixed         = -2,
        msoPattern5Percent      = 1,
        msoPattern10Percent     = 2,
        msoPattern20Percent     = 3,
        msoPattern25Percent     = 4,
        msoPattern30Percent     = 5,
        msoPattern40Percent     = 6,
        msoPattern50Percent     = 7,
        msoPattern60Percent     = 8,
        msoPattern70Percent     = 9,
        msoPattern75Percent     = 10,
        msoPattern80Percent     = 11,
        msoPattern90Percent     = 12,
        msoPatternDarkHorizontal= 13,
        msoPatternDarkVertical  = 14,
        msoPatternDarkDownwardDiagonal= 15,
        msoPatternDarkUpwardDiagonal= 16,
        msoPatternSmallCheckerBoard= 17,
        msoPatternTrellis       = 18,
        msoPatternLightHorizontal= 19,
        msoPatternLightVertical = 20,
        msoPatternLightDownwardDiagonal= 21,
        msoPatternLightUpwardDiagonal= 22,
        msoPatternSmallGrid     = 23,
        msoPatternDottedDiamond = 24,
        msoPatternWideDownwardDiagonal= 25,
        msoPatternWideUpwardDiagonal= 26,
        msoPatternDashedUpwardDiagonal= 27,
        msoPatternDashedDownwardDiagonal= 28,
        msoPatternNarrowVertical= 29,
        msoPatternNarrowHorizontal= 30,
        msoPatternDashedVertical= 31,
        msoPatternDashedHorizontal= 32,
        msoPatternLargeConfetti = 33,
        msoPatternLargeGrid     = 34,
        msoPatternHorizontalBrick= 35,
        msoPatternLargeCheckerBoard= 36,
        msoPatternSmallConfetti = 37,
        msoPatternZigZag        = 38,
        msoPatternSolidDiamond  = 39,
        msoPatternDiagonalBrick = 40,
        msoPatternOutlinedDiamond= 41,
        msoPatternPlaid         = 42,
        msoPatternSphere        = 43,
        msoPatternWeave         = 44,
        msoPatternDottedGrid    = 45,
        msoPatternDivot         = 46,
        msoPatternShingle       = 47,
        msoPatternWave          = 48
    };

    enum MsoPermission {
        msoPermissionView       = 1,
        msoPermissionRead       = 1,
        msoPermissionEdit       = 2,
        msoPermissionSave       = 4,
        msoPermissionExtract    = 8,
        msoPermissionChange     = 15,
        msoPermissionPrint      = 16,
        msoPermissionObjModel   = 32,
        msoPermissionFullControl= 64
    };

    enum MsoPictureColorType {
        msoPictureMixed         = -2,
        msoPictureAutomatic     = 1,
        msoPictureGrayscale     = 2,
        msoPictureBlackAndWhite = 3,
        msoPictureWatermark     = 4
    };

    enum MsoPresetExtrusionDirection {
        msoPresetExtrusionDirectionMixed= -2,
        msoExtrusionBottomRight = 1,
        msoExtrusionBottom      = 2,
        msoExtrusionBottomLeft  = 3,
        msoExtrusionRight       = 4,
        msoExtrusionNone        = 5,
        msoExtrusionLeft        = 6,
        msoExtrusionTopRight    = 7,
        msoExtrusionTop         = 8,
        msoExtrusionTopLeft     = 9
    };

    enum MsoPresetGradientType {
        msoPresetGradientMixed  = -2,
        msoGradientEarlySunset  = 1,
        msoGradientLateSunset   = 2,
        msoGradientNightfall    = 3,
        msoGradientDaybreak     = 4,
        msoGradientHorizon      = 5,
        msoGradientDesert       = 6,
        msoGradientOcean        = 7,
        msoGradientCalmWater    = 8,
        msoGradientFire         = 9,
        msoGradientFog          = 10,
        msoGradientMoss         = 11,
        msoGradientPeacock      = 12,
        msoGradientWheat        = 13,
        msoGradientParchment    = 14,
        msoGradientMahogany     = 15,
        msoGradientRainbow      = 16,
        msoGradientRainbowII    = 17,
        msoGradientGold         = 18,
        msoGradientGoldII       = 19,
        msoGradientBrass        = 20,
        msoGradientChrome       = 21,
        msoGradientChromeII     = 22,
        msoGradientSilver       = 23,
        msoGradientSapphire     = 24
    };

    enum MsoPresetLightingDirection {
        msoPresetLightingDirectionMixed= -2,
        msoLightingTopLeft      = 1,
        msoLightingTop          = 2,
        msoLightingTopRight     = 3,
        msoLightingLeft         = 4,
        msoLightingNone         = 5,
        msoLightingRight        = 6,
        msoLightingBottomLeft   = 7,
        msoLightingBottom       = 8,
        msoLightingBottomRight  = 9
    };

    enum MsoPresetLightingSoftness {
        msoPresetLightingSoftnessMixed= -2,
        msoLightingDim          = 1,
        msoLightingNormal       = 2,
        msoLightingBright       = 3
    };

    enum MsoPresetMaterial {
        msoPresetMaterialMixed  = -2,
        msoMaterialMatte        = 1,
        msoMaterialPlastic      = 2,
        msoMaterialMetal        = 3,
        msoMaterialWireFrame    = 4
    };

    enum MsoPresetTextEffect {
        msoTextEffectMixed      = -2,
        msoTextEffect1          = 0,
        msoTextEffect2          = 1,
        msoTextEffect3          = 2,
        msoTextEffect4          = 3,
        msoTextEffect5          = 4,
        msoTextEffect6          = 5,
        msoTextEffect7          = 6,
        msoTextEffect8          = 7,
        msoTextEffect9          = 8,
        msoTextEffect10         = 9,
        msoTextEffect11         = 10,
        msoTextEffect12         = 11,
        msoTextEffect13         = 12,
        msoTextEffect14         = 13,
        msoTextEffect15         = 14,
        msoTextEffect16         = 15,
        msoTextEffect17         = 16,
        msoTextEffect18         = 17,
        msoTextEffect19         = 18,
        msoTextEffect20         = 19,
        msoTextEffect21         = 20,
        msoTextEffect22         = 21,
        msoTextEffect23         = 22,
        msoTextEffect24         = 23,
        msoTextEffect25         = 24,
        msoTextEffect26         = 25,
        msoTextEffect27         = 26,
        msoTextEffect28         = 27,
        msoTextEffect29         = 28,
        msoTextEffect30         = 29
    };

    enum MsoPresetTextEffectShape {
        msoTextEffectShapeMixed = -2,
        msoTextEffectShapePlainText= 1,
        msoTextEffectShapeStop  = 2,
        msoTextEffectShapeTriangleUp= 3,
        msoTextEffectShapeTriangleDown= 4,
        msoTextEffectShapeChevronUp= 5,
        msoTextEffectShapeChevronDown= 6,
        msoTextEffectShapeRingInside= 7,
        msoTextEffectShapeRingOutside= 8,
        msoTextEffectShapeArchUpCurve= 9,
        msoTextEffectShapeArchDownCurve= 10,
        msoTextEffectShapeCircleCurve= 11,
        msoTextEffectShapeButtonCurve= 12,
        msoTextEffectShapeArchUpPour= 13,
        msoTextEffectShapeArchDownPour= 14,
        msoTextEffectShapeCirclePour= 15,
        msoTextEffectShapeButtonPour= 16,
        msoTextEffectShapeCurveUp= 17,
        msoTextEffectShapeCurveDown= 18,
        msoTextEffectShapeCanUp = 19,
        msoTextEffectShapeCanDown= 20,
        msoTextEffectShapeWave1 = 21,
        msoTextEffectShapeWave2 = 22,
        msoTextEffectShapeDoubleWave1= 23,
        msoTextEffectShapeDoubleWave2= 24,
        msoTextEffectShapeInflate= 25,
        msoTextEffectShapeDeflate= 26,
        msoTextEffectShapeInflateBottom= 27,
        msoTextEffectShapeDeflateBottom= 28,
        msoTextEffectShapeInflateTop= 29,
        msoTextEffectShapeDeflateTop= 30,
        msoTextEffectShapeDeflateInflate= 31,
        msoTextEffectShapeDeflateInflateDeflate= 32,
        msoTextEffectShapeFadeRight= 33,
        msoTextEffectShapeFadeLeft= 34,
        msoTextEffectShapeFadeUp= 35,
        msoTextEffectShapeFadeDown= 36,
        msoTextEffectShapeSlantUp= 37,
        msoTextEffectShapeSlantDown= 38,
        msoTextEffectShapeCascadeUp= 39,
        msoTextEffectShapeCascadeDown= 40
    };

    enum MsoPresetTexture {
        msoPresetTextureMixed   = -2,
        msoTexturePapyrus       = 1,
        msoTextureCanvas        = 2,
        msoTextureDenim         = 3,
        msoTextureWovenMat      = 4,
        msoTextureWaterDroplets = 5,
        msoTexturePaperBag      = 6,
        msoTextureFishFossil    = 7,
        msoTextureSand          = 8,
        msoTextureGreenMarble   = 9,
        msoTextureWhiteMarble   = 10,
        msoTextureBrownMarble   = 11,
        msoTextureGranite       = 12,
        msoTextureNewsprint     = 13,
        msoTextureRecycledPaper = 14,
        msoTextureParchment     = 15,
        msoTextureStationery    = 16,
        msoTextureBlueTissuePaper= 17,
        msoTexturePinkTissuePaper= 18,
        msoTexturePurpleMesh    = 19,
        msoTextureBouquet       = 20,
        msoTextureCork          = 21,
        msoTextureWalnut        = 22,
        msoTextureOak           = 23,
        msoTextureMediumWood    = 24
    };

    enum MsoPresetThreeDFormat {
        msoPresetThreeDFormatMixed= -2,
        msoThreeD1              = 1,
        msoThreeD2              = 2,
        msoThreeD3              = 3,
        msoThreeD4              = 4,
        msoThreeD5              = 5,
        msoThreeD6              = 6,
        msoThreeD7              = 7,
        msoThreeD8              = 8,
        msoThreeD9              = 9,
        msoThreeD10             = 10,
        msoThreeD11             = 11,
        msoThreeD12             = 12,
        msoThreeD13             = 13,
        msoThreeD14             = 14,
        msoThreeD15             = 15,
        msoThreeD16             = 16,
        msoThreeD17             = 17,
        msoThreeD18             = 18,
        msoThreeD19             = 19,
        msoThreeD20             = 20
    };

    enum MsoRelativeNodePosition {
        msoBeforeNode           = 1,
        msoAfterNode            = 2,
        msoBeforeFirstSibling   = 3,
        msoAfterLastSibling     = 4
    };

    enum MsoScaleFrom {
        msoScaleFromTopLeft     = 0,
        msoScaleFromMiddle      = 1,
        msoScaleFromBottomRight = 2
    };

    enum MsoScreenSize {
        msoScreenSize544x376    = 0,
        msoScreenSize640x480    = 1,
        msoScreenSize720x512    = 2,
        msoScreenSize800x600    = 3,
        msoScreenSize1024x768   = 4,
        msoScreenSize1152x882   = 5,
        msoScreenSize1152x900   = 6,
        msoScreenSize1280x1024  = 7,
        msoScreenSize1600x1200  = 8,
        msoScreenSize1800x1440  = 9,
        msoScreenSize1920x1200  = 10
    };

    enum MsoScriptLanguage {
        msoScriptLanguageJava   = 1,
        msoScriptLanguageVisualBasic= 2,
        msoScriptLanguageASP    = 3,
        msoScriptLanguageOther  = 4
    };

    enum MsoScriptLocation {
        msoScriptLocationInHead = 1,
        msoScriptLocationInBody = 2
    };

    enum MsoSearchIn {
        msoSearchInMyComputer   = 0,
        msoSearchInOutlook      = 1,
        msoSearchInMyNetworkPlaces= 2,
        msoSearchInCustom       = 3
    };

    enum MsoSegmentType {
        msoSegmentLine          = 0,
        msoSegmentCurve         = 1
    };

    enum MsoShadowType {
        msoShadowMixed          = -2,
        msoShadow1              = 1,
        msoShadow2              = 2,
        msoShadow3              = 3,
        msoShadow4              = 4,
        msoShadow5              = 5,
        msoShadow6              = 6,
        msoShadow7              = 7,
        msoShadow8              = 8,
        msoShadow9              = 9,
        msoShadow10             = 10,
        msoShadow11             = 11,
        msoShadow12             = 12,
        msoShadow13             = 13,
        msoShadow14             = 14,
        msoShadow15             = 15,
        msoShadow16             = 16,
        msoShadow17             = 17,
        msoShadow18             = 18,
        msoShadow19             = 19,
        msoShadow20             = 20
    };

    enum MsoShapeType {
        msoShapeTypeMixed       = -2,
        msoAutoShape            = 1,
        msoCallout              = 2,
        msoChart                = 3,
        msoComment              = 4,
        msoFreeform             = 5,
        msoGroup                = 6,
        msoEmbeddedOLEObject    = 7,
        msoFormControl          = 8,
        msoLine                 = 9,
        msoLinkedOLEObject      = 10,
        msoLinkedPicture        = 11,
        msoOLEControlObject     = 12,
        msoPicture              = 13,
        msoPlaceholder          = 14,
        msoTextEffect           = 15,
        msoMedia                = 16,
        msoTextBox              = 17,
        msoScriptAnchor         = 18,
        msoTable                = 19,
        msoCanvas               = 20,
        msoDiagram              = 21,
        msoInk                  = 22,
        msoInkComment           = 23
    };

    enum MsoSharedWorkspaceTaskPriority {
        msoSharedWorkspaceTaskPriorityHigh= 1,
        msoSharedWorkspaceTaskPriorityNormal= 2,
        msoSharedWorkspaceTaskPriorityLow= 3
    };

    enum MsoSharedWorkspaceTaskStatus {
        msoSharedWorkspaceTaskStatusNotStarted= 1,
        msoSharedWorkspaceTaskStatusInProgress= 2,
        msoSharedWorkspaceTaskStatusCompleted= 3,
        msoSharedWorkspaceTaskStatusDeferred= 4,
        msoSharedWorkspaceTaskStatusWaiting= 5
    };

    enum MsoSortBy {
        msoSortByFileName       = 1,
        msoSortBySize           = 2,
        msoSortByFileType       = 3,
        msoSortByLastModified   = 4,
        msoSortByNone           = 5
    };

    enum MsoSortOrder {
        msoSortOrderAscending   = 1,
        msoSortOrderDescending  = 2
    };

    enum MsoSyncAvailableType {
        msoSyncAvailableNone    = 0,
        msoSyncAvailableOffline = 1,
        msoSyncAvailableAnywhere= 2
    };

    enum MsoSyncCompareType {
        msoSyncCompareAndMerge  = 0,
        msoSyncCompareSideBySide= 1
    };

    enum MsoSyncConflictResolutionType {
        msoSyncConflictClientWins= 0,
        msoSyncConflictServerWins= 1,
        msoSyncConflictMerge    = 2
    };

    enum MsoSyncErrorType {
        msoSyncErrorNone        = 0,
        msoSyncErrorUnauthorizedUser= 1,
        msoSyncErrorCouldNotConnect= 2,
        msoSyncErrorOutOfSpace  = 3,
        msoSyncErrorFileNotFound= 4,
        msoSyncErrorFileTooLarge= 5,
        msoSyncErrorFileInUse   = 6,
        msoSyncErrorVirusUpload = 7,
        msoSyncErrorVirusDownload= 8,
        msoSyncErrorUnknownUpload= 9,
        msoSyncErrorUnknownDownload= 10,
        msoSyncErrorCouldNotOpen= 11,
        msoSyncErrorCouldNotUpdate= 12,
        msoSyncErrorCouldNotCompare= 13,
        msoSyncErrorCouldNotResolve= 14,
        msoSyncErrorNoNetwork   = 15,
        msoSyncErrorUnknown     = 16
    };

    enum MsoSyncEventType {
        msoSyncEventDownloadInitiated= 0,
        msoSyncEventDownloadSucceeded= 1,
        msoSyncEventDownloadFailed= 2,
        msoSyncEventUploadInitiated= 3,
        msoSyncEventUploadSucceeded= 4,
        msoSyncEventUploadFailed= 5,
        msoSyncEventDownloadNoChange= 6,
        msoSyncEventOffline     = 7
    };

    enum MsoSyncStatusType {
        msoSyncStatusNoSharedWorkspace= 0,
        msoSyncStatusLatest     = 1,
        msoSyncStatusNewerAvailable= 2,
        msoSyncStatusLocalChanges= 3,
        msoSyncStatusConflict   = 4,
        msoSyncStatusSuspended  = 5,
        msoSyncStatusError      = 6
    };

    enum MsoSyncVersionType {
        msoSyncVersionLastViewed= 0,
        msoSyncVersionServer    = 1
    };

    enum MsoTargetBrowser {
        msoTargetBrowserV3      = 0,
        msoTargetBrowserV4      = 1,
        msoTargetBrowserIE4     = 2,
        msoTargetBrowserIE5     = 3,
        msoTargetBrowserIE6     = 4
    };

    enum MsoTextEffectAlignment {
        msoTextEffectAlignmentMixed= -2,
        msoTextEffectAlignmentLeft= 1,
        msoTextEffectAlignmentCentered= 2,
        msoTextEffectAlignmentRight= 3,
        msoTextEffectAlignmentLetterJustify= 4,
        msoTextEffectAlignmentWordJustify= 5,
        msoTextEffectAlignmentStretchJustify= 6
    };

    enum MsoTextOrientation {
        msoTextOrientationMixed = -2,
        msoTextOrientationHorizontal= 1,
        msoTextOrientationUpward= 2,
        msoTextOrientationDownward= 3,
        msoTextOrientationVerticalFarEast= 4,
        msoTextOrientationVertical= 5,
        msoTextOrientationHorizontalRotatedFarEast= 6
    };

    enum MsoTextureType {
        msoTextureTypeMixed     = -2,
        msoTexturePreset        = 1,
        msoTextureUserDefined   = 2
    };

    enum MsoTriState {
        msoTrue                 = -1,
        msoFalse                = 0,
        msoCTrue                = 1,
        msoTriStateToggle       = -3,
        msoTriStateMixed        = -2
    };

    enum MsoVerticalAnchor {
        msoVerticalAnchorMixed  = -2,
        msoAnchorTop            = 1,
        msoAnchorTopBaseline    = 2,
        msoAnchorMiddle         = 3,
        msoAnchorBottom         = 4,
        msoAnchorBottomBaseLine = 5
    };

    enum MsoWizardActType {
        msoWizardActInactive    = 0,
        msoWizardActActive      = 1,
        msoWizardActSuspend     = 2,
        msoWizardActResume      = 3
    };

    enum MsoWizardMsgType {
        msoWizardMsgLocalStateOn= 1,
        msoWizardMsgLocalStateOff= 2,
        msoWizardMsgShowHelp    = 3,
        msoWizardMsgSuspending  = 4,
        msoWizardMsgResuming    = 5
    };

    enum MsoZOrderCmd {
        msoBringToFront         = 0,
        msoSendToBack           = 1,
        msoBringForward         = 2,
        msoSendBackward         = 3,
        msoBringInFrontOfText   = 4,
        msoSendBehindText       = 5
    };

// forward declarations
    enum MsoLineDashStyle;
    enum MsoLineStyle;
    enum MsoArrowheadStyle;
    enum MsoArrowheadWidth;
    enum MsoArrowheadLength;
    enum MsoFillType;
    enum MsoGradientStyle;
    enum MsoGradientColorType;
    enum MsoTextureType;
    enum MsoPresetTexture;
    enum MsoPatternType;
    enum MsoPresetGradientType;
    enum MsoShadowType;
    enum MsoPresetTextEffect;
    enum MsoPresetTextEffectShape;
    enum MsoTextEffectAlignment;
    enum MsoPresetLightingDirection;
    enum MsoPresetLightingSoftness;
    enum MsoPresetMaterial;
    enum MsoPresetExtrusionDirection;
    enum MsoPresetThreeDFormat;
    enum MsoExtrusionColorType;
    enum MsoAlignCmd;
    enum MsoDistributeCmd;
    enum MsoConnectorType;
    enum MsoHorizontalAnchor;
    enum MsoVerticalAnchor;
    enum MsoOrientation;
    enum MsoZOrderCmd;
    enum MsoSegmentType;
    enum MsoEditingType;
    enum MsoAutoShapeType;
    enum MsoShapeType;
    enum MsoFlipCmd;
    enum MsoTriState;
    enum MsoColorType;
    enum MsoPictureColorType;
    enum MsoCalloutAngleType;
    enum MsoCalloutDropType;
    enum MsoCalloutType;
    enum MsoBlackWhiteMode;
    enum MsoMixedType;
    enum MsoTextOrientation;
    enum MsoScaleFrom;
    enum MsoBarPosition;
    enum MsoBarProtection;
    enum MsoBarType;
    enum MsoControlType;
    enum MsoButtonState;
    enum MsoControlOLEUsage;
    enum MsoButtonStyleHidden;
    enum MsoButtonStyle;
    enum MsoComboStyle;
    enum MsoOLEMenuGroup;
    enum MsoMenuAnimation;
    enum MsoBarRow;
    enum MsoCommandBarButtonHyperlinkType;
    enum MsoHyperlinkType;
    enum MsoExtraInfoMethod;
    enum MsoAnimationType;
    enum MsoButtonSetType;
    enum MsoIconType;
    enum MsoBalloonType;
    enum MsoModeType;
    enum MsoBalloonErrorType;
    enum MsoWizardActType;
    enum MsoWizardMsgType;
    enum MsoBalloonButtonType;
    enum DocProperties;
    enum MsoDocProperties;
    enum MsoAppLanguageID;
    enum MsoFarEastLineBreakLanguageID;
    enum MsoFeatureInstall;
    enum MsoScriptLanguage;
    enum MsoScriptLocation;
    class DocumentProperty;
    class DocumentProperties;
    enum MsoFileFindOptions;
    enum MsoFileFindView;
    enum MsoFileFindSortBy;
    enum MsoFileFindListBy;
    enum MsoLastModified;
    enum MsoSortBy;
    enum MsoSortOrder;
    enum MsoConnector;
    enum MsoCondition;
    enum MsoFileType;
    enum MsoLanguageID;
    enum MsoScreenSize;
    enum MsoCharacterSet;
    enum MsoEncoding;
    enum MsoHTMLProjectOpen;
    enum MsoHTMLProjectState;
    enum MsoFileDialogType;
    enum MsoFileDialogView;
    enum MsoAutomationSecurity;
    enum MailFormat;
    enum MsoAlertButtonType;
    enum MsoAlertIconType;
    enum MsoAlertDefaultType;
    enum MsoAlertCancelType;
    enum MsoSearchIn;
    enum MsoTargetBrowser;
    enum MsoOrgChartOrientation;
    enum MsoOrgChartLayoutType;
    enum MsoRelativeNodePosition;
    enum MsoDiagramType;
    enum MsoDiagramNodeType;
    enum MsoMoveRow;
    enum MsoFilterComparison;
    enum MsoFilterConjunction;
    enum MsoFileNewSection;
    enum MsoFileNewAction;
    enum MsoLanguageIDHidden;
    enum MsoSharedWorkspaceTaskStatus;
    enum MsoSharedWorkspaceTaskPriority;
    enum MsoSyncVersionType;
    enum MsoSyncConflictResolutionType;
    enum MsoSyncCompareType;
    enum MsoSyncAvailableType;
    enum MsoSyncEventType;
    enum MsoSyncErrorType;
    enum MsoSyncStatusType;
    enum MsoPermission;
    enum MsoLineDashStyle;
    enum MsoLineStyle;
    enum MsoArrowheadStyle;
    enum MsoArrowheadWidth;
    enum MsoArrowheadLength;
    enum MsoFillType;
    enum MsoGradientStyle;
    enum MsoGradientColorType;
    enum MsoTextureType;
    enum MsoPresetTexture;
    enum MsoPatternType;
    enum MsoPresetGradientType;
    enum MsoShadowType;
    enum MsoPresetTextEffect;
    enum MsoPresetTextEffectShape;
    enum MsoTextEffectAlignment;
    enum MsoPresetLightingDirection;
    enum MsoPresetLightingSoftness;
    enum MsoPresetMaterial;
    enum MsoPresetExtrusionDirection;
    enum MsoPresetThreeDFormat;
    enum MsoExtrusionColorType;
    enum MsoAlignCmd;
    enum MsoDistributeCmd;
    enum MsoConnectorType;
    enum MsoHorizontalAnchor;
    enum MsoVerticalAnchor;
    enum MsoOrientation;
    enum MsoZOrderCmd;
    enum MsoSegmentType;
    enum MsoEditingType;
    enum MsoAutoShapeType;
    enum MsoShapeType;
    enum MsoFlipCmd;
    enum MsoTriState;
    enum MsoColorType;
    enum MsoPictureColorType;
    enum MsoCalloutAngleType;
    enum MsoCalloutDropType;
    enum MsoCalloutType;
    enum MsoBlackWhiteMode;
    enum MsoMixedType;
    enum MsoTextOrientation;
    enum MsoScaleFrom;
    enum MsoBarPosition;
    enum MsoBarProtection;
    enum MsoBarType;
    enum MsoControlType;
    enum MsoButtonState;
    enum MsoControlOLEUsage;
    enum MsoButtonStyleHidden;
    enum MsoButtonStyle;
    enum MsoComboStyle;
    enum MsoOLEMenuGroup;
    enum MsoMenuAnimation;
    enum MsoBarRow;
    enum MsoCommandBarButtonHyperlinkType;
    enum MsoHyperlinkType;
    enum MsoExtraInfoMethod;
    enum MsoAnimationType;
    enum MsoButtonSetType;
    enum MsoIconType;
    enum MsoBalloonType;
    enum MsoModeType;
    enum MsoBalloonErrorType;
    enum MsoWizardActType;
    enum MsoWizardMsgType;
    enum MsoBalloonButtonType;
    enum DocProperties;
    enum MsoDocProperties;
    enum MsoAppLanguageID;
    enum MsoFarEastLineBreakLanguageID;
    enum MsoFeatureInstall;
    class CommandBarControl;
    class CommandBar;
    class CommandBarControls;
    class Shape;
    class ColorFormat;
    class ShapeRange;
    class ShapeNode;
    enum MsoScriptLanguage;
    enum MsoScriptLocation;
    class Script;
    class Adjustments;
    class CalloutFormat;
    class ConnectorFormat;
    class FillFormat;
    class GroupShapes;
    class LineFormat;
    class ShapeNodes;
    class PictureFormat;
    class ShadowFormat;
    class TextEffectFormat;
    class TextFrame;
    class ThreeDFormat;
    class IMsoDiagram;
    class DiagramNode;
    class CanvasShapes;
    class FreeformBuilder;
    class AnswerWizardFiles;
    class Balloon;
    class DocumentProperty;
    class DocumentProperties;
    enum MsoFileFindOptions;
    enum MsoFileFindView;
    enum MsoFileFindSortBy;
    enum MsoFileFindListBy;
    class IFoundFiles;
    enum MsoLastModified;
    enum MsoSortBy;
    enum MsoSortOrder;
    enum MsoConnector;
    enum MsoCondition;
    enum MsoFileType;
    class PropertyTest;
    class FoundFiles;
    class PropertyTests;
    class SearchScopes;
    class SearchFolders;
    class FileTypes;
    class COMAddIn;
    enum MsoLanguageID;
    struct GUID;
    struct DISPPARAMS;
    struct EXCEPINFO;
    class CommandBarComboBox;
    class CommandBarButton;
    enum MsoScreenSize;
    enum MsoCharacterSet;
    enum MsoEncoding;
    class WebPageFont;
    enum MsoHTMLProjectOpen;
    enum MsoHTMLProjectState;
    class HTMLProjectItem;
    class HTMLProjectItems;
    enum MsoFileDialogType;
    enum MsoFileDialogView;
    class FileDialogFilter;
    class FileDialogFilters;
    class FileDialogSelectedItems;
    enum MsoAutomationSecurity;
    class Signature;
    enum MailFormat;
    enum MsoAlertButtonType;
    enum MsoAlertIconType;
    enum MsoAlertDefaultType;
    enum MsoAlertCancelType;
    enum MsoSearchIn;
    enum MsoTargetBrowser;
    class ScopeFolder;
    class ScopeFolders;
    class SearchScope;
    enum MsoOrgChartOrientation;
    enum MsoOrgChartLayoutType;
    enum MsoRelativeNodePosition;
    enum MsoDiagramType;
    enum MsoDiagramNodeType;
    class DiagramNodes;
    class DiagramNodeChildren;
    enum MsoMoveRow;
    enum MsoFilterComparison;
    enum MsoFilterConjunction;
    enum MsoFileNewSection;
    enum MsoFileNewAction;
    class WebComponent;
    enum MsoLanguageIDHidden;
    class SharedWorkspaceMember;
    enum MsoSharedWorkspaceTaskStatus;
    enum MsoSharedWorkspaceTaskPriority;
    class SharedWorkspaceTask;
    class SharedWorkspaceFile;
    class SharedWorkspaceFolder;
    class SharedWorkspaceLink;
    class SharedWorkspaceMembers;
    class SharedWorkspaceTasks;
    class SharedWorkspaceFiles;
    class SharedWorkspaceFolders;
    class SharedWorkspaceLinks;
    enum MsoSyncVersionType;
    enum MsoSyncConflictResolutionType;
    enum MsoSyncCompareType;
    enum MsoSyncAvailableType;
    enum MsoSyncEventType;
    enum MsoSyncErrorType;
    enum MsoSyncStatusType;
    class DocumentLibraryVersion;
    enum MsoPermission;
    class UserPermission;

class OFFICE_EXPORT IAccessible : public QAxObject
{
public:
    IAccessible(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property accChildCount

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accChildCount() const; //Returns the value of accChildCount

    /*
    Property accDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDefaultAction() const; //Returns the value of accDefaultAction

    /*
    Property accDescription

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDescription() const; //Returns the value of accDescription

    /*
    Property accFocus

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accFocus() const; //Returns the value of accFocus

    /*
    Property accHelp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accHelp() const; //Returns the value of accHelp

    /*
    Property accKeyboardShortcut

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accKeyboardShortcut() const; //Returns the value of accKeyboardShortcut

    /*
    Property accName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accName() const; //Returns the value of accName
    inline void setAccName(const QVariant& value); //Sets the value of the accName property

    /*
    Property accParent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accParent() const; //Returns the value of accParent

    /*
    Property accRole

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accRole() const; //Returns the value of accRole

    /*
    Property accSelection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accSelection() const; //Returns the value of accSelection

    /*
    Property accState

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accState() const; //Returns the value of accState

    /*
    Property accValue

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accValue() const; //Returns the value of accValue
    inline void setAccValue(const QVariant& value); //Sets the value of the accValue property

    /*
    Method accChild

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accChild(const QVariant& varChild);

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction();

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction(const QVariant& varChild);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile, const QVariant& varChild);

    /*
    Method accHitTest

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accHitTest(int xLeft, int yTop);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir, const QVariant& varStart);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect, const QVariant& varChild);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT _IMsoDispObj : public QAxObject
{
public:
    _IMsoDispObj(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT _IMsoOleAccDispObj : public QAxObject
{
public:
    _IMsoOleAccDispObj(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property accChildCount

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accChildCount() const; //Returns the value of accChildCount

    /*
    Property accDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDefaultAction() const; //Returns the value of accDefaultAction

    /*
    Property accDescription

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDescription() const; //Returns the value of accDescription

    /*
    Property accFocus

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accFocus() const; //Returns the value of accFocus

    /*
    Property accHelp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accHelp() const; //Returns the value of accHelp

    /*
    Property accKeyboardShortcut

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accKeyboardShortcut() const; //Returns the value of accKeyboardShortcut

    /*
    Property accName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accName() const; //Returns the value of accName
    inline void setAccName(const QVariant& value); //Sets the value of the accName property

    /*
    Property accParent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accParent() const; //Returns the value of accParent

    /*
    Property accRole

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accRole() const; //Returns the value of accRole

    /*
    Property accSelection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accSelection() const; //Returns the value of accSelection

    /*
    Property accState

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accState() const; //Returns the value of accState

    /*
    Property accValue

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accValue() const; //Returns the value of accValue
    inline void setAccValue(const QVariant& value); //Sets the value of the accValue property

    /*
    Method accChild

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accChild(const QVariant& varChild);

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction();

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction(const QVariant& varChild);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile, const QVariant& varChild);

    /*
    Method accHitTest

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accHitTest(int xLeft, int yTop);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir, const QVariant& varStart);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect, const QVariant& varChild);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT _CommandBars : public QAxObject
{
public:
    _CommandBars(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property ActionControl

    For more information, see help context 2001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* ActionControl() const; //Returns the value of ActionControl

    /*
    Property ActiveMenuBar

    For more information, see help context 2002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* ActiveMenuBar() const; //Returns the value of ActiveMenuBar

    /*
    Property AdaptiveMenus

    For more information, see help context 2013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool AdaptiveMenus() const; //Returns the value of AdaptiveMenus
    inline void SetAdaptiveMenus(bool value); //Sets the value of the AdaptiveMenus property

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 2004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property DisableAskAQuestionDropdown

    For more information, see help context 2017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool DisableAskAQuestionDropdown() const; //Returns the value of DisableAskAQuestionDropdown
    inline void SetDisableAskAQuestionDropdown(bool value); //Sets the value of the DisableAskAQuestionDropdown property

    /*
    Property DisableCustomize

    For more information, see help context 2016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool DisableCustomize() const; //Returns the value of DisableCustomize
    inline void SetDisableCustomize(bool value); //Sets the value of the DisableCustomize property

    /*
    Property DisplayFonts

    For more information, see help context 2015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool DisplayFonts() const; //Returns the value of DisplayFonts
    inline void SetDisplayFonts(bool value); //Sets the value of the DisplayFonts property

    /*
    Property DisplayKeysInTooltips

    For more information, see help context 2006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool DisplayKeysInTooltips() const; //Returns the value of DisplayKeysInTooltips
    inline void SetDisplayKeysInTooltips(bool value); //Sets the value of the DisplayKeysInTooltips property

    /*
    Property DisplayTooltips

    For more information, see help context 2005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool DisplayTooltips() const; //Returns the value of DisplayTooltips
    inline void SetDisplayTooltips(bool value); //Sets the value of the DisplayTooltips property

    /*
    Property LargeButtons

    For more information, see help context 2009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool LargeButtons() const; //Returns the value of LargeButtons
    inline void SetLargeButtons(bool value); //Sets the value of the LargeButtons property

    /*
    Property MenuAnimationStyle

    For more information, see help context 2010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoMenuAnimation MenuAnimationStyle() const; //Returns the value of MenuAnimationStyle
    inline void SetMenuAnimationStyle(Office::MsoMenuAnimation value); //Sets the value of the MenuAnimationStyle property

    /*
    Property Parent

    For more information, see help context 2011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 2003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Add();

    /*
    Method Add

    For more information, see help context 2003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Add(const QVariant& Name);

    /*
    Method Add

    For more information, see help context 2003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Add(const QVariant& Name, const QVariant& Position);

    /*
    Method Add

    For more information, see help context 2003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Add(const QVariant& Name, const QVariant& Position, const QVariant& MenuBar);

    /*
    Method Add

    For more information, see help context 2003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Add(const QVariant& Name, const QVariant& Position, const QVariant& MenuBar, const QVariant& Temporary);

    /*
    Method AddEx

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* AddEx();

    /*
    Method AddEx

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* AddEx(const QVariant& TbidOrName);

    /*
    Method AddEx

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* AddEx(const QVariant& TbidOrName, const QVariant& Position);

    /*
    Method AddEx

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* AddEx(const QVariant& TbidOrName, const QVariant& Position, const QVariant& MenuBar);

    /*
    Method AddEx

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* AddEx(const QVariant& TbidOrName, const QVariant& Position, const QVariant& MenuBar, const QVariant& Temporary);

    /*
    Method AddEx

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* AddEx(const QVariant& TbidOrName, const QVariant& Position, const QVariant& MenuBar, const QVariant& Temporary, const QVariant& TbtrProtection);

    /*
    Method FindControl

    For more information, see help context 2007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl();

    /*
    Method FindControl

    For more information, see help context 2007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl(const QVariant& Type);

    /*
    Method FindControl

    For more information, see help context 2007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl(const QVariant& Type, const QVariant& Id);

    /*
    Method FindControl

    For more information, see help context 2007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag);

    /*
    Method FindControl

    For more information, see help context 2007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag, const QVariant& Visible);

    /*
    Method FindControls

    For more information, see help context 2014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControls* FindControls();

    /*
    Method FindControls

    For more information, see help context 2014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControls* FindControls(const QVariant& Type);

    /*
    Method FindControls

    For more information, see help context 2014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControls* FindControls(const QVariant& Type, const QVariant& Id);

    /*
    Method FindControls

    For more information, see help context 2014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControls* FindControls(const QVariant& Type, const QVariant& Id, const QVariant& Tag);

    /*
    Method FindControls

    For more information, see help context 2014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControls* FindControls(const QVariant& Type, const QVariant& Id, const QVariant& Tag, const QVariant& Visible);

    /*
    Method IdsString

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int IdsString(int ids, QString& pbstrName);

    /*
    Method Item

    For more information, see help context 2008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Item(const QVariant& Index);

    /*
    Method ReleaseFocus

    For more information, see help context 2012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ReleaseFocus();

    /*
    Method TmcGetName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int TmcGetName(int tmc, QString& pbstrName);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT CommandBar : public QAxObject
{
public:
    CommandBar(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AdaptiveMenu

    For more information, see help context 3022 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool AdaptiveMenu() const; //Returns the value of AdaptiveMenu
    inline void SetAdaptiveMenu(bool value); //Sets the value of the AdaptiveMenu property

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property BuiltIn

    For more information, see help context 3001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BuiltIn() const; //Returns the value of BuiltIn

    /*
    Property Context

    For more information, see help context 3002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Context() const; //Returns the value of Context
    inline void SetContext(const QString& value); //Sets the value of the Context property

    /*
    Property Controls

    For more information, see help context 3003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControls* Controls() const; //Returns the value of Controls

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Enabled

    For more information, see help context 3005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Height

    For more information, see help context 3007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property Id

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Id() const; //Returns the value of Id

    /*
    Property Index

    For more information, see help context 3008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property InstanceId

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int InstanceId() const; //Returns the value of InstanceId

    /*
    Property Left

    For more information, see help context 3009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Left() const; //Returns the value of Left
    inline void SetLeft(int value); //Sets the value of the Left property

    /*
    Property Name

    For more information, see help context 3010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property NameLocal

    For more information, see help context 3011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString NameLocal() const; //Returns the value of NameLocal
    inline void SetNameLocal(const QString& value); //Sets the value of the NameLocal property

    /*
    Property Parent

    For more information, see help context 3012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 3013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoBarPosition Position() const; //Returns the value of Position
    inline void SetPosition(Office::MsoBarPosition value); //Sets the value of the Position property

    /*
    Property Protection

    For more information, see help context 3015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoBarProtection Protection() const; //Returns the value of Protection
    inline void SetProtection(Office::MsoBarProtection value); //Sets the value of the Protection property

    /*
    Property RowIndex

    For more information, see help context 3014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int RowIndex() const; //Returns the value of RowIndex
    inline void SetRowIndex(int value); //Sets the value of the RowIndex property

    /*
    Property Top

    For more information, see help context 3018 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Top() const; //Returns the value of Top
    inline void SetTop(int value); //Sets the value of the Top property

    /*
    Property Type

    For more information, see help context 3019 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoBarType Type() const; //Returns the value of Type

    /*
    Property Visible

    For more information, see help context 3020 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Property Width

    For more information, see help context 3021 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property accChildCount

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accChildCount() const; //Returns the value of accChildCount

    /*
    Property accDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDefaultAction() const; //Returns the value of accDefaultAction

    /*
    Property accDescription

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDescription() const; //Returns the value of accDescription

    /*
    Property accFocus

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accFocus() const; //Returns the value of accFocus

    /*
    Property accHelp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accHelp() const; //Returns the value of accHelp

    /*
    Property accKeyboardShortcut

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accKeyboardShortcut() const; //Returns the value of accKeyboardShortcut

    /*
    Property accName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accName() const; //Returns the value of accName
    inline void setAccName(const QVariant& value); //Sets the value of the accName property

    /*
    Property accParent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accParent() const; //Returns the value of accParent

    /*
    Property accRole

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accRole() const; //Returns the value of accRole

    /*
    Property accSelection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accSelection() const; //Returns the value of accSelection

    /*
    Property accState

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accState() const; //Returns the value of accState

    /*
    Property accValue

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accValue() const; //Returns the value of accValue
    inline void setAccValue(const QVariant& value); //Sets the value of the accValue property

    /*
    Method Delete

    For more information, see help context 3004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method FindControl

    For more information, see help context 3006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl();

    /*
    Method FindControl

    For more information, see help context 3006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl(const QVariant& Type);

    /*
    Method FindControl

    For more information, see help context 3006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl(const QVariant& Type, const QVariant& Id);

    /*
    Method FindControl

    For more information, see help context 3006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag);

    /*
    Method FindControl

    For more information, see help context 3006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag, const QVariant& Visible);

    /*
    Method FindControl

    For more information, see help context 3006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag, const QVariant& Visible, const QVariant& Recursive);

    /*
    Method Reset

    For more information, see help context 3016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reset();

    /*
    Method ShowPopup

    For more information, see help context 3017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ShowPopup();

    /*
    Method ShowPopup

    For more information, see help context 3017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ShowPopup(const QVariant& x);

    /*
    Method ShowPopup

    For more information, see help context 3017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ShowPopup(const QVariant& x, const QVariant& y);

    /*
    Method accChild

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accChild(const QVariant& varChild);

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction();

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction(const QVariant& varChild);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile, const QVariant& varChild);

    /*
    Method accHitTest

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accHitTest(int xLeft, int yTop);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir, const QVariant& varStart);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect, const QVariant& varChild);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT CommandBarControls : public QAxObject
{
public:
    CommandBarControls(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 4002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 4004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 4001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Add();

    /*
    Method Add

    For more information, see help context 4001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Add(const QVariant& Type);

    /*
    Method Add

    For more information, see help context 4001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Add(const QVariant& Type, const QVariant& Id);

    /*
    Method Add

    For more information, see help context 4001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Add(const QVariant& Type, const QVariant& Id, const QVariant& Parameter);

    /*
    Method Add

    For more information, see help context 4001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Add(const QVariant& Type, const QVariant& Id, const QVariant& Parameter, const QVariant& Before);

    /*
    Method Add

    For more information, see help context 4001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Add(const QVariant& Type, const QVariant& Id, const QVariant& Parameter, const QVariant& Before, const QVariant& Temporary);

    /*
    Method Item

    For more information, see help context 4003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT CommandBarControl : public QAxObject
{
public:
    CommandBarControl(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property BeginGroup

    For more information, see help context 5001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BeginGroup() const; //Returns the value of BeginGroup
    inline void SetBeginGroup(bool value); //Sets the value of the BeginGroup property

    /*
    Property BuiltIn

    For more information, see help context 5002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BuiltIn() const; //Returns the value of BuiltIn

    /*
    Property Caption

    For more information, see help context 5003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Control

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Control() const; //Returns the value of Control

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property DescriptionText

    For more information, see help context 5006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString DescriptionText() const; //Returns the value of DescriptionText
    inline void SetDescriptionText(const QString& value); //Sets the value of the DescriptionText property

    /*
    Property Enabled

    For more information, see help context 5007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Height

    For more information, see help context 5009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property HelpContextId

    For more information, see help context 5010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int HelpContextId() const; //Returns the value of HelpContextId
    inline void SetHelpContextId(int value); //Sets the value of the HelpContextId property

    /*
    Property HelpFile

    For more information, see help context 5011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString HelpFile() const; //Returns the value of HelpFile
    inline void SetHelpFile(const QString& value); //Sets the value of the HelpFile property

    /*
    Property Id

    For more information, see help context 5012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Id() const; //Returns the value of Id

    /*
    Property Index

    For more information, see help context 5013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property InstanceId

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int InstanceId() const; //Returns the value of InstanceId

    /*
    Property IsPriorityDropped

    For more information, see help context 5029 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool IsPriorityDropped() const; //Returns the value of IsPriorityDropped

    /*
    Property Left

    For more information, see help context 5015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Left() const; //Returns the value of Left

    /*
    Property OLEUsage

    For more information, see help context 5016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlOLEUsage OLEUsage() const; //Returns the value of OLEUsage
    inline void SetOLEUsage(Office::MsoControlOLEUsage value); //Sets the value of the OLEUsage property

    /*
    Property OnAction

    For more information, see help context 5017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString OnAction() const; //Returns the value of OnAction
    inline void SetOnAction(const QString& value); //Sets the value of the OnAction property

    /*
    Property Parameter

    For more information, see help context 5019 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Parameter() const; //Returns the value of Parameter
    inline void SetParameter(const QString& value); //Sets the value of the Parameter property

    /*
    Property Parent

    For more information, see help context 5018 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Parent() const; //Returns the value of Parent

    /*
    Property Priority

    For more information, see help context 5020 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Priority() const; //Returns the value of Priority
    inline void SetPriority(int value); //Sets the value of the Priority property

    /*
    Property Tag

    For more information, see help context 5023 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Tag() const; //Returns the value of Tag
    inline void SetTag(const QString& value); //Sets the value of the Tag property

    /*
    Property TooltipText

    For more information, see help context 5024 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString TooltipText() const; //Returns the value of TooltipText
    inline void SetTooltipText(const QString& value); //Sets the value of the TooltipText property

    /*
    Property Top

    For more information, see help context 5025 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Top() const; //Returns the value of Top

    /*
    Property Type

    For more information, see help context 5026 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlType Type() const; //Returns the value of Type

    /*
    Property Visible

    For more information, see help context 5027 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Property Width

    For more information, see help context 5028 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property accChildCount

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accChildCount() const; //Returns the value of accChildCount

    /*
    Property accDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDefaultAction() const; //Returns the value of accDefaultAction

    /*
    Property accDescription

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDescription() const; //Returns the value of accDescription

    /*
    Property accFocus

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accFocus() const; //Returns the value of accFocus

    /*
    Property accHelp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accHelp() const; //Returns the value of accHelp

    /*
    Property accKeyboardShortcut

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accKeyboardShortcut() const; //Returns the value of accKeyboardShortcut

    /*
    Property accName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accName() const; //Returns the value of accName
    inline void setAccName(const QVariant& value); //Sets the value of the accName property

    /*
    Property accParent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accParent() const; //Returns the value of accParent

    /*
    Property accRole

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accRole() const; //Returns the value of accRole

    /*
    Property accSelection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accSelection() const; //Returns the value of accSelection

    /*
    Property accState

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accState() const; //Returns the value of accState

    /*
    Property accValue

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accValue() const; //Returns the value of accValue
    inline void setAccValue(const QVariant& value); //Sets the value of the accValue property

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy();

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar);

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar, const QVariant& Before);

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(const QVariant& Temporary);

    /*
    Method Execute

    For more information, see help context 5008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Execute();

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move();

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar);

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar, const QVariant& Before);

    /*
    Method Reserved1

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved1();

    /*
    Method Reserved2

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved2();

    /*
    Method Reserved3

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved3();

    /*
    Method Reserved4

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved4();

    /*
    Method Reserved5

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved5();

    /*
    Method Reserved6

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved6();

    /*
    Method Reserved7

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved7();

    /*
    Method Reset

    For more information, see help context 5021 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reset();

    /*
    Method SetFocus

    For more information, see help context 5022 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetFocus();

    /*
    Method accChild

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accChild(const QVariant& varChild);

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction();

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction(const QVariant& varChild);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile, const QVariant& varChild);

    /*
    Method accHitTest

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accHitTest(int xLeft, int yTop);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir, const QVariant& varStart);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect, const QVariant& varChild);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT _CommandBarButton : public QAxObject
{
public:
    _CommandBarButton(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property BeginGroup

    For more information, see help context 5001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BeginGroup() const; //Returns the value of BeginGroup
    inline void SetBeginGroup(bool value); //Sets the value of the BeginGroup property

    /*
    Property BuiltIn

    For more information, see help context 5002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BuiltIn() const; //Returns the value of BuiltIn

    /*
    Property BuiltInFace

    For more information, see help context 6001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BuiltInFace() const; //Returns the value of BuiltInFace
    inline void SetBuiltInFace(bool value); //Sets the value of the BuiltInFace property

    /*
    Property Caption

    For more information, see help context 5003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Control

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Control() const; //Returns the value of Control

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property DescriptionText

    For more information, see help context 5006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString DescriptionText() const; //Returns the value of DescriptionText
    inline void SetDescriptionText(const QString& value); //Sets the value of the DescriptionText property

    /*
    Property Enabled

    For more information, see help context 5007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property FaceId

    For more information, see help context 6003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int FaceId() const; //Returns the value of FaceId
    inline void SetFaceId(int value); //Sets the value of the FaceId property

    /*
    Property Height

    For more information, see help context 5009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property HelpContextId

    For more information, see help context 5010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int HelpContextId() const; //Returns the value of HelpContextId
    inline void SetHelpContextId(int value); //Sets the value of the HelpContextId property

    /*
    Property HelpFile

    For more information, see help context 5011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString HelpFile() const; //Returns the value of HelpFile
    inline void SetHelpFile(const QString& value); //Sets the value of the HelpFile property

    /*
    Property HyperlinkType

    For more information, see help context 6008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoCommandBarButtonHyperlinkType HyperlinkType() const; //Returns the value of HyperlinkType
    inline void SetHyperlinkType(Office::MsoCommandBarButtonHyperlinkType value); //Sets the value of the HyperlinkType property

    /*
    Property Id

    For more information, see help context 5012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Id() const; //Returns the value of Id

    /*
    Property Index

    For more information, see help context 5013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property InstanceId

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int InstanceId() const; //Returns the value of InstanceId

    /*
    Property IsPriorityDropped

    For more information, see help context 5029 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool IsPriorityDropped() const; //Returns the value of IsPriorityDropped

    /*
    Property Left

    For more information, see help context 5015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Left() const; //Returns the value of Left

    /*
    Property Mask

    For more information, see help context 6010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QPixmap Mask() const; //Returns the value of Mask
    inline void SetMask(const QPixmap& value); //Sets the value of the Mask property

    /*
    Property OLEUsage

    For more information, see help context 5016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlOLEUsage OLEUsage() const; //Returns the value of OLEUsage
    inline void SetOLEUsage(Office::MsoControlOLEUsage value); //Sets the value of the OLEUsage property

    /*
    Property OnAction

    For more information, see help context 5017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString OnAction() const; //Returns the value of OnAction
    inline void SetOnAction(const QString& value); //Sets the value of the OnAction property

    /*
    Property Parameter

    For more information, see help context 5019 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Parameter() const; //Returns the value of Parameter
    inline void SetParameter(const QString& value); //Sets the value of the Parameter property

    /*
    Property Parent

    For more information, see help context 5018 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Parent() const; //Returns the value of Parent

    /*
    Property Picture

    For more information, see help context 6009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QPixmap Picture() const; //Returns the value of Picture
    inline void SetPicture(const QPixmap& value); //Sets the value of the Picture property

    /*
    Property Priority

    For more information, see help context 5020 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Priority() const; //Returns the value of Priority
    inline void SetPriority(int value); //Sets the value of the Priority property

    /*
    Property ShortcutText

    For more information, see help context 6005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ShortcutText() const; //Returns the value of ShortcutText
    inline void SetShortcutText(const QString& value); //Sets the value of the ShortcutText property

    /*
    Property State

    For more information, see help context 6006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoButtonState State() const; //Returns the value of State
    inline void SetState(Office::MsoButtonState value); //Sets the value of the State property

    /*
    Property Style

    For more information, see help context 6007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoButtonStyle Style() const; //Returns the value of Style
    inline void SetStyle(Office::MsoButtonStyle value); //Sets the value of the Style property

    /*
    Property Tag

    For more information, see help context 5023 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Tag() const; //Returns the value of Tag
    inline void SetTag(const QString& value); //Sets the value of the Tag property

    /*
    Property TooltipText

    For more information, see help context 5024 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString TooltipText() const; //Returns the value of TooltipText
    inline void SetTooltipText(const QString& value); //Sets the value of the TooltipText property

    /*
    Property Top

    For more information, see help context 5025 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Top() const; //Returns the value of Top

    /*
    Property Type

    For more information, see help context 5026 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlType Type() const; //Returns the value of Type

    /*
    Property Visible

    For more information, see help context 5027 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Property Width

    For more information, see help context 5028 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property accChildCount

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accChildCount() const; //Returns the value of accChildCount

    /*
    Property accDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDefaultAction() const; //Returns the value of accDefaultAction

    /*
    Property accDescription

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDescription() const; //Returns the value of accDescription

    /*
    Property accFocus

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accFocus() const; //Returns the value of accFocus

    /*
    Property accHelp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accHelp() const; //Returns the value of accHelp

    /*
    Property accKeyboardShortcut

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accKeyboardShortcut() const; //Returns the value of accKeyboardShortcut

    /*
    Property accName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accName() const; //Returns the value of accName
    inline void setAccName(const QVariant& value); //Sets the value of the accName property

    /*
    Property accParent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accParent() const; //Returns the value of accParent

    /*
    Property accRole

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accRole() const; //Returns the value of accRole

    /*
    Property accSelection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accSelection() const; //Returns the value of accSelection

    /*
    Property accState

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accState() const; //Returns the value of accState

    /*
    Property accValue

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accValue() const; //Returns the value of accValue
    inline void setAccValue(const QVariant& value); //Sets the value of the accValue property

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy();

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar);

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar, const QVariant& Before);

    /*
    Method CopyFace

    For more information, see help context 6002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CopyFace();

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(const QVariant& Temporary);

    /*
    Method Execute

    For more information, see help context 5008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Execute();

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move();

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar);

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar, const QVariant& Before);

    /*
    Method PasteFace

    For more information, see help context 6004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void PasteFace();

    /*
    Method Reserved1

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved1();

    /*
    Method Reserved2

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved2();

    /*
    Method Reserved3

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved3();

    /*
    Method Reserved4

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved4();

    /*
    Method Reserved5

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved5();

    /*
    Method Reserved6

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved6();

    /*
    Method Reserved7

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved7();

    /*
    Method Reset

    For more information, see help context 5021 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reset();

    /*
    Method SetFocus

    For more information, see help context 5022 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetFocus();

    /*
    Method accChild

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accChild(const QVariant& varChild);

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction();

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction(const QVariant& varChild);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile, const QVariant& varChild);

    /*
    Method accHitTest

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accHitTest(int xLeft, int yTop);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir, const QVariant& varStart);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect, const QVariant& varChild);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT CommandBarPopup : public QAxObject
{
public:
    CommandBarPopup(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property BeginGroup

    For more information, see help context 5001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BeginGroup() const; //Returns the value of BeginGroup
    inline void SetBeginGroup(bool value); //Sets the value of the BeginGroup property

    /*
    Property BuiltIn

    For more information, see help context 5002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BuiltIn() const; //Returns the value of BuiltIn

    /*
    Property Caption

    For more information, see help context 5003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property CommandBar

    For more information, see help context 7001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* CommandBar() const; //Returns the value of CommandBar

    /*
    Property Control

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Control() const; //Returns the value of Control

    /*
    Property Controls

    For more information, see help context 7002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControls* Controls() const; //Returns the value of Controls

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property DescriptionText

    For more information, see help context 5006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString DescriptionText() const; //Returns the value of DescriptionText
    inline void SetDescriptionText(const QString& value); //Sets the value of the DescriptionText property

    /*
    Property Enabled

    For more information, see help context 5007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Height

    For more information, see help context 5009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property HelpContextId

    For more information, see help context 5010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int HelpContextId() const; //Returns the value of HelpContextId
    inline void SetHelpContextId(int value); //Sets the value of the HelpContextId property

    /*
    Property HelpFile

    For more information, see help context 5011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString HelpFile() const; //Returns the value of HelpFile
    inline void SetHelpFile(const QString& value); //Sets the value of the HelpFile property

    /*
    Property Id

    For more information, see help context 5012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Id() const; //Returns the value of Id

    /*
    Property Index

    For more information, see help context 5013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property InstanceId

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int InstanceId() const; //Returns the value of InstanceId

    /*
    Property IsPriorityDropped

    For more information, see help context 5029 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool IsPriorityDropped() const; //Returns the value of IsPriorityDropped

    /*
    Property Left

    For more information, see help context 5015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Left() const; //Returns the value of Left

    /*
    Property OLEMenuGroup

    For more information, see help context 7003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoOLEMenuGroup OLEMenuGroup() const; //Returns the value of OLEMenuGroup
    inline void SetOLEMenuGroup(Office::MsoOLEMenuGroup value); //Sets the value of the OLEMenuGroup property

    /*
    Property OLEUsage

    For more information, see help context 5016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlOLEUsage OLEUsage() const; //Returns the value of OLEUsage
    inline void SetOLEUsage(Office::MsoControlOLEUsage value); //Sets the value of the OLEUsage property

    /*
    Property OnAction

    For more information, see help context 5017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString OnAction() const; //Returns the value of OnAction
    inline void SetOnAction(const QString& value); //Sets the value of the OnAction property

    /*
    Property Parameter

    For more information, see help context 5019 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Parameter() const; //Returns the value of Parameter
    inline void SetParameter(const QString& value); //Sets the value of the Parameter property

    /*
    Property Parent

    For more information, see help context 5018 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Parent() const; //Returns the value of Parent

    /*
    Property Priority

    For more information, see help context 5020 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Priority() const; //Returns the value of Priority
    inline void SetPriority(int value); //Sets the value of the Priority property

    /*
    Property Tag

    For more information, see help context 5023 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Tag() const; //Returns the value of Tag
    inline void SetTag(const QString& value); //Sets the value of the Tag property

    /*
    Property TooltipText

    For more information, see help context 5024 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString TooltipText() const; //Returns the value of TooltipText
    inline void SetTooltipText(const QString& value); //Sets the value of the TooltipText property

    /*
    Property Top

    For more information, see help context 5025 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Top() const; //Returns the value of Top

    /*
    Property Type

    For more information, see help context 5026 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlType Type() const; //Returns the value of Type

    /*
    Property Visible

    For more information, see help context 5027 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Property Width

    For more information, see help context 5028 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property accChildCount

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accChildCount() const; //Returns the value of accChildCount

    /*
    Property accDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDefaultAction() const; //Returns the value of accDefaultAction

    /*
    Property accDescription

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDescription() const; //Returns the value of accDescription

    /*
    Property accFocus

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accFocus() const; //Returns the value of accFocus

    /*
    Property accHelp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accHelp() const; //Returns the value of accHelp

    /*
    Property accKeyboardShortcut

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accKeyboardShortcut() const; //Returns the value of accKeyboardShortcut

    /*
    Property accName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accName() const; //Returns the value of accName
    inline void setAccName(const QVariant& value); //Sets the value of the accName property

    /*
    Property accParent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accParent() const; //Returns the value of accParent

    /*
    Property accRole

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accRole() const; //Returns the value of accRole

    /*
    Property accSelection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accSelection() const; //Returns the value of accSelection

    /*
    Property accState

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accState() const; //Returns the value of accState

    /*
    Property accValue

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accValue() const; //Returns the value of accValue
    inline void setAccValue(const QVariant& value); //Sets the value of the accValue property

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy();

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar);

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar, const QVariant& Before);

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(const QVariant& Temporary);

    /*
    Method Execute

    For more information, see help context 5008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Execute();

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move();

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar);

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar, const QVariant& Before);

    /*
    Method Reserved1

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved1();

    /*
    Method Reserved2

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved2();

    /*
    Method Reserved3

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved3();

    /*
    Method Reserved4

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved4();

    /*
    Method Reserved5

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved5();

    /*
    Method Reserved6

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved6();

    /*
    Method Reserved7

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved7();

    /*
    Method Reset

    For more information, see help context 5021 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reset();

    /*
    Method SetFocus

    For more information, see help context 5022 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetFocus();

    /*
    Method accChild

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accChild(const QVariant& varChild);

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction();

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction(const QVariant& varChild);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile, const QVariant& varChild);

    /*
    Method accHitTest

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accHitTest(int xLeft, int yTop);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir, const QVariant& varStart);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect, const QVariant& varChild);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT _CommandBarComboBox : public QAxObject
{
public:
    _CommandBarComboBox(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property BeginGroup

    For more information, see help context 5001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BeginGroup() const; //Returns the value of BeginGroup
    inline void SetBeginGroup(bool value); //Sets the value of the BeginGroup property

    /*
    Property BuiltIn

    For more information, see help context 5002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BuiltIn() const; //Returns the value of BuiltIn

    /*
    Property Caption

    For more information, see help context 5003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Control

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Control() const; //Returns the value of Control

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property DescriptionText

    For more information, see help context 5006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString DescriptionText() const; //Returns the value of DescriptionText
    inline void SetDescriptionText(const QString& value); //Sets the value of the DescriptionText property

    /*
    Property DropDownLines

    For more information, see help context 8003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int DropDownLines() const; //Returns the value of DropDownLines
    inline void SetDropDownLines(int value); //Sets the value of the DropDownLines property

    /*
    Property DropDownWidth

    For more information, see help context 8004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int DropDownWidth() const; //Returns the value of DropDownWidth
    inline void SetDropDownWidth(int value); //Sets the value of the DropDownWidth property

    /*
    Property Enabled

    For more information, see help context 5007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Height

    For more information, see help context 5009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property HelpContextId

    For more information, see help context 5010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int HelpContextId() const; //Returns the value of HelpContextId
    inline void SetHelpContextId(int value); //Sets the value of the HelpContextId property

    /*
    Property HelpFile

    For more information, see help context 5011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString HelpFile() const; //Returns the value of HelpFile
    inline void SetHelpFile(const QString& value); //Sets the value of the HelpFile property

    /*
    Property Id

    For more information, see help context 5012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Id() const; //Returns the value of Id

    /*
    Property Index

    For more information, see help context 5013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property InstanceId

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int InstanceId() const; //Returns the value of InstanceId

    /*
    Property IsPriorityDropped

    For more information, see help context 5029 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool IsPriorityDropped() const; //Returns the value of IsPriorityDropped

    /*
    Property Left

    For more information, see help context 5015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Left() const; //Returns the value of Left

    /*
    Property ListCount

    For more information, see help context 8006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int ListCount() const; //Returns the value of ListCount

    /*
    Property ListHeaderCount

    For more information, see help context 8007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int ListHeaderCount() const; //Returns the value of ListHeaderCount
    inline void SetListHeaderCount(int value); //Sets the value of the ListHeaderCount property

    /*
    Property ListIndex

    For more information, see help context 8008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int ListIndex() const; //Returns the value of ListIndex
    inline void SetListIndex(int value); //Sets the value of the ListIndex property

    /*
    Property OLEUsage

    For more information, see help context 5016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlOLEUsage OLEUsage() const; //Returns the value of OLEUsage
    inline void SetOLEUsage(Office::MsoControlOLEUsage value); //Sets the value of the OLEUsage property

    /*
    Property OnAction

    For more information, see help context 5017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString OnAction() const; //Returns the value of OnAction
    inline void SetOnAction(const QString& value); //Sets the value of the OnAction property

    /*
    Property Parameter

    For more information, see help context 5019 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Parameter() const; //Returns the value of Parameter
    inline void SetParameter(const QString& value); //Sets the value of the Parameter property

    /*
    Property Parent

    For more information, see help context 5018 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Parent() const; //Returns the value of Parent

    /*
    Property Priority

    For more information, see help context 5020 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Priority() const; //Returns the value of Priority
    inline void SetPriority(int value); //Sets the value of the Priority property

    /*
    Property Style

    For more information, see help context 8010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoComboStyle Style() const; //Returns the value of Style
    inline void SetStyle(Office::MsoComboStyle value); //Sets the value of the Style property

    /*
    Property Tag

    For more information, see help context 5023 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Tag() const; //Returns the value of Tag
    inline void SetTag(const QString& value); //Sets the value of the Tag property

    /*
    Property Text

    For more information, see help context 8011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property TooltipText

    For more information, see help context 5024 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString TooltipText() const; //Returns the value of TooltipText
    inline void SetTooltipText(const QString& value); //Sets the value of the TooltipText property

    /*
    Property Top

    For more information, see help context 5025 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Top() const; //Returns the value of Top

    /*
    Property Type

    For more information, see help context 5026 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlType Type() const; //Returns the value of Type

    /*
    Property Visible

    For more information, see help context 5027 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Property Width

    For more information, see help context 5028 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property accChildCount

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accChildCount() const; //Returns the value of accChildCount

    /*
    Property accDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDefaultAction() const; //Returns the value of accDefaultAction

    /*
    Property accDescription

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDescription() const; //Returns the value of accDescription

    /*
    Property accFocus

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accFocus() const; //Returns the value of accFocus

    /*
    Property accHelp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accHelp() const; //Returns the value of accHelp

    /*
    Property accKeyboardShortcut

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accKeyboardShortcut() const; //Returns the value of accKeyboardShortcut

    /*
    Property accName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accName() const; //Returns the value of accName
    inline void setAccName(const QVariant& value); //Sets the value of the accName property

    /*
    Property accParent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accParent() const; //Returns the value of accParent

    /*
    Property accRole

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accRole() const; //Returns the value of accRole

    /*
    Property accSelection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accSelection() const; //Returns the value of accSelection

    /*
    Property accState

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accState() const; //Returns the value of accState

    /*
    Property accValue

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accValue() const; //Returns the value of accValue
    inline void setAccValue(const QVariant& value); //Sets the value of the accValue property

    /*
    Method AddItem

    For more information, see help context 8001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AddItem(const QString& Text);

    /*
    Method AddItem

    For more information, see help context 8001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AddItem(const QString& Text, const QVariant& Index);

    /*
    Method Clear

    For more information, see help context 8002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Clear();

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy();

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar);

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar, const QVariant& Before);

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(const QVariant& Temporary);

    /*
    Method Execute

    For more information, see help context 5008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Execute();

    /*
    Method List

    For more information, see help context 8005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString List(int Index);

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move();

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar);

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar, const QVariant& Before);

    /*
    Method RemoveItem

    For more information, see help context 8009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void RemoveItem(int Index);

    /*
    Method Reserved1

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved1();

    /*
    Method Reserved2

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved2();

    /*
    Method Reserved3

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved3();

    /*
    Method Reserved4

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved4();

    /*
    Method Reserved5

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved5();

    /*
    Method Reserved6

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved6();

    /*
    Method Reserved7

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved7();

    /*
    Method Reset

    For more information, see help context 5021 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reset();

    /*
    Method SetFocus

    For more information, see help context 5022 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetFocus();

    /*
    Method SetList
    */
    inline int SetList(int Index, const QString& rhs);

    /*
    Method accChild

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accChild(const QVariant& varChild);

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction();

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction(const QVariant& varChild);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile, const QVariant& varChild);

    /*
    Method accHitTest

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accHitTest(int xLeft, int yTop);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir, const QVariant& varStart);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect, const QVariant& varChild);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT _CommandBarActiveX : public QAxObject
{
public:
    _CommandBarActiveX(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property BeginGroup

    For more information, see help context 5001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BeginGroup() const; //Returns the value of BeginGroup
    inline void SetBeginGroup(bool value); //Sets the value of the BeginGroup property

    /*
    Property BuiltIn

    For more information, see help context 5002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BuiltIn() const; //Returns the value of BuiltIn

    /*
    Property Caption

    For more information, see help context 5003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Control

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Control() const; //Returns the value of Control

    /*
    Property ControlCLSID

    For more information, see help context 9001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ControlCLSID() const; //Returns the value of ControlCLSID
    inline void SetControlCLSID(const QString& value); //Sets the value of the ControlCLSID property

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property DescriptionText

    For more information, see help context 5006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString DescriptionText() const; //Returns the value of DescriptionText
    inline void SetDescriptionText(const QString& value); //Sets the value of the DescriptionText property

    /*
    Property Enabled

    For more information, see help context 5007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Height

    For more information, see help context 5009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property HelpContextId

    For more information, see help context 5010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int HelpContextId() const; //Returns the value of HelpContextId
    inline void SetHelpContextId(int value); //Sets the value of the HelpContextId property

    /*
    Property HelpFile

    For more information, see help context 5011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString HelpFile() const; //Returns the value of HelpFile
    inline void SetHelpFile(const QString& value); //Sets the value of the HelpFile property

    /*
    Property Id

    For more information, see help context 5012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Id() const; //Returns the value of Id

    /*
    Property Index

    For more information, see help context 5013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property InitWith

    For more information, see help context 9005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* InitWith() const; //Returns the value of InitWith
    inline void SetInitWith(IUnknown* value); //Sets the value of the InitWith property

    /*
    Property InstanceId

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int InstanceId() const; //Returns the value of InstanceId

    /*
    Property IsPriorityDropped

    For more information, see help context 5029 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool IsPriorityDropped() const; //Returns the value of IsPriorityDropped

    /*
    Property Left

    For more information, see help context 5015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Left() const; //Returns the value of Left

    /*
    Property OLEUsage

    For more information, see help context 5016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlOLEUsage OLEUsage() const; //Returns the value of OLEUsage
    inline void SetOLEUsage(Office::MsoControlOLEUsage value); //Sets the value of the OLEUsage property

    /*
    Property OnAction

    For more information, see help context 5017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString OnAction() const; //Returns the value of OnAction
    inline void SetOnAction(const QString& value); //Sets the value of the OnAction property

    /*
    Property Parameter

    For more information, see help context 5019 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Parameter() const; //Returns the value of Parameter
    inline void SetParameter(const QString& value); //Sets the value of the Parameter property

    /*
    Property Parent

    For more information, see help context 5018 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Parent() const; //Returns the value of Parent

    /*
    Property Priority

    For more information, see help context 5020 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Priority() const; //Returns the value of Priority
    inline void SetPriority(int value); //Sets the value of the Priority property

    /*
    Property Tag

    For more information, see help context 5023 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Tag() const; //Returns the value of Tag
    inline void SetTag(const QString& value); //Sets the value of the Tag property

    /*
    Property TooltipText

    For more information, see help context 5024 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString TooltipText() const; //Returns the value of TooltipText
    inline void SetTooltipText(const QString& value); //Sets the value of the TooltipText property

    /*
    Property Top

    For more information, see help context 5025 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Top() const; //Returns the value of Top

    /*
    Property Type

    For more information, see help context 5026 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlType Type() const; //Returns the value of Type

    /*
    Property Visible

    For more information, see help context 5027 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Property Width

    For more information, see help context 5028 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property accChildCount

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accChildCount() const; //Returns the value of accChildCount

    /*
    Property accDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDefaultAction() const; //Returns the value of accDefaultAction

    /*
    Property accDescription

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDescription() const; //Returns the value of accDescription

    /*
    Property accFocus

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accFocus() const; //Returns the value of accFocus

    /*
    Property accHelp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accHelp() const; //Returns the value of accHelp

    /*
    Property accKeyboardShortcut

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accKeyboardShortcut() const; //Returns the value of accKeyboardShortcut

    /*
    Property accName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accName() const; //Returns the value of accName
    inline void setAccName(const QVariant& value); //Sets the value of the accName property

    /*
    Property accParent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accParent() const; //Returns the value of accParent

    /*
    Property accRole

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accRole() const; //Returns the value of accRole

    /*
    Property accSelection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accSelection() const; //Returns the value of accSelection

    /*
    Property accState

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accState() const; //Returns the value of accState

    /*
    Property accValue

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accValue() const; //Returns the value of accValue
    inline void setAccValue(const QVariant& value); //Sets the value of the accValue property

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy();

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar);

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar, const QVariant& Before);

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(const QVariant& Temporary);

    /*
    Method EnsureControl

    For more information, see help context 9004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void EnsureControl();

    /*
    Method Execute

    For more information, see help context 5008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Execute();

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move();

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar);

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar, const QVariant& Before);

    /*
    Method QueryControlInterface

    For more information, see help context 9002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* QueryControlInterface(const QString& bstrIid);

    /*
    Method Reserved1

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved1();

    /*
    Method Reserved2

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved2();

    /*
    Method Reserved3

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved3();

    /*
    Method Reserved4

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved4();

    /*
    Method Reserved5

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved5();

    /*
    Method Reserved6

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved6();

    /*
    Method Reserved7

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved7();

    /*
    Method Reset

    For more information, see help context 5021 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reset();

    /*
    Method SetFocus

    For more information, see help context 5022 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetFocus();

    /*
    Method SetInnerObjectFactory

    For more information, see help context 9003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetInnerObjectFactory(IUnknown* pUnk);

    /*
    Method accChild

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accChild(const QVariant& varChild);

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction();

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction(const QVariant& varChild);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile, const QVariant& varChild);

    /*
    Method accHitTest

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accHitTest(int xLeft, int yTop);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir, const QVariant& varStart);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect, const QVariant& varChild);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT Adjustments : public QAxObject
{
public:
    Adjustments(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Method Item

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Item(int Index);

    /*
    Method SetItem
    */
    inline int SetItem(int Index, double rhs);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT CalloutFormat : public QAxObject
{
public:
    CalloutFormat(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Accent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Accent() const; //Returns the value of Accent
    inline void SetAccent(Office::MsoTriState value); //Sets the value of the Accent property

    /*
    Property Angle

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoCalloutAngleType Angle() const; //Returns the value of Angle
    inline void SetAngle(Office::MsoCalloutAngleType value); //Sets the value of the Angle property

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property AutoAttach

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState AutoAttach() const; //Returns the value of AutoAttach
    inline void SetAutoAttach(Office::MsoTriState value); //Sets the value of the AutoAttach property

    /*
    Property AutoLength

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState AutoLength() const; //Returns the value of AutoLength

    /*
    Property Border

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Border() const; //Returns the value of Border
    inline void SetBorder(Office::MsoTriState value); //Sets the value of the Border property

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Drop

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Drop() const; //Returns the value of Drop

    /*
    Property DropType

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoCalloutDropType DropType() const; //Returns the value of DropType

    /*
    Property Gap

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Gap() const; //Returns the value of Gap
    inline void SetGap(double value); //Sets the value of the Gap property

    /*
    Property Length

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Length() const; //Returns the value of Length

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Type

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoCalloutType Type() const; //Returns the value of Type
    inline void SetType(Office::MsoCalloutType value); //Sets the value of the Type property

    /*
    Method AutomaticLength

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AutomaticLength();

    /*
    Method CustomDrop

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CustomDrop(double Drop);

    /*
    Method CustomLength

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CustomLength(double Length);

    /*
    Method PresetDrop

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void PresetDrop(Office::MsoCalloutDropType DropType);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ColorFormat : public QAxObject
{
public:
    ColorFormat(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RGB

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int RGB() const; //Returns the value of RGB
    inline void SetRGB(int value); //Sets the value of the RGB property

    /*
    Property SchemeColor

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int SchemeColor() const; //Returns the value of SchemeColor
    inline void SetSchemeColor(int value); //Sets the value of the SchemeColor property

    /*
    Property TintAndShade

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double TintAndShade() const; //Returns the value of TintAndShade
    inline void SetTintAndShade(double value); //Sets the value of the TintAndShade property

    /*
    Property Type

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoColorType Type() const; //Returns the value of Type

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ConnectorFormat : public QAxObject
{
public:
    ConnectorFormat(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property BeginConnected

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState BeginConnected() const; //Returns the value of BeginConnected

    /*
    Property BeginConnectedShape

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* BeginConnectedShape() const; //Returns the value of BeginConnectedShape

    /*
    Property BeginConnectionSite

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int BeginConnectionSite() const; //Returns the value of BeginConnectionSite

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property EndConnected

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState EndConnected() const; //Returns the value of EndConnected

    /*
    Property EndConnectedShape

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* EndConnectedShape() const; //Returns the value of EndConnectedShape

    /*
    Property EndConnectionSite

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int EndConnectionSite() const; //Returns the value of EndConnectionSite

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Type

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoConnectorType Type() const; //Returns the value of Type
    inline void SetType(Office::MsoConnectorType value); //Sets the value of the Type property

    /*
    Method BeginConnect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void BeginConnect(Office::Shape* ConnectedShape, int ConnectionSite);

    /*
    Method BeginDisconnect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void BeginDisconnect();

    /*
    Method EndConnect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void EndConnect(Office::Shape* ConnectedShape, int ConnectionSite);

    /*
    Method EndDisconnect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void EndDisconnect();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT FillFormat : public QAxObject
{
public:
    FillFormat(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property BackColor

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ColorFormat* BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(Office::ColorFormat* value); //Sets the value of the BackColor property

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property ForeColor

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ColorFormat* ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(Office::ColorFormat* value); //Sets the value of the ForeColor property

    /*
    Property GradientColorType

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoGradientColorType GradientColorType() const; //Returns the value of GradientColorType

    /*
    Property GradientDegree

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double GradientDegree() const; //Returns the value of GradientDegree

    /*
    Property GradientStyle

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoGradientStyle GradientStyle() const; //Returns the value of GradientStyle

    /*
    Property GradientVariant

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int GradientVariant() const; //Returns the value of GradientVariant

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Pattern

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoPatternType Pattern() const; //Returns the value of Pattern

    /*
    Property PresetGradientType

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoPresetGradientType PresetGradientType() const; //Returns the value of PresetGradientType

    /*
    Property PresetTexture

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoPresetTexture PresetTexture() const; //Returns the value of PresetTexture

    /*
    Property TextureName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString TextureName() const; //Returns the value of TextureName

    /*
    Property TextureType

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTextureType TextureType() const; //Returns the value of TextureType

    /*
    Property Transparency

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Transparency() const; //Returns the value of Transparency
    inline void SetTransparency(double value); //Sets the value of the Transparency property

    /*
    Property Type

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoFillType Type() const; //Returns the value of Type

    /*
    Property Visible

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Visible() const; //Returns the value of Visible
    inline void SetVisible(Office::MsoTriState value); //Sets the value of the Visible property

    /*
    Method Background

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Background();

    /*
    Method OneColorGradient

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void OneColorGradient(Office::MsoGradientStyle Style, int Variant, double Degree);

    /*
    Method Patterned

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Patterned(Office::MsoPatternType Pattern);

    /*
    Method PresetGradient

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void PresetGradient(Office::MsoGradientStyle Style, int Variant, Office::MsoPresetGradientType PresetGradientType);

    /*
    Method PresetTextured

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void PresetTextured(Office::MsoPresetTexture PresetTexture);

    /*
    Method Solid

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Solid();

    /*
    Method TwoColorGradient

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void TwoColorGradient(Office::MsoGradientStyle Style, int Variant);

    /*
    Method UserPicture

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void UserPicture(const QString& PictureFile);

    /*
    Method UserTextured

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void UserTextured(const QString& TextureFile);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT FreeformBuilder : public QAxObject
{
public:
    FreeformBuilder(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Method AddNodes

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AddNodes(Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1);

    /*
    Method AddNodes

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AddNodes(Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2);

    /*
    Method AddNodes

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AddNodes(Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2, double Y2);

    /*
    Method AddNodes

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AddNodes(Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2, double Y2, double X3);

    /*
    Method AddNodes

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AddNodes(Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2, double Y2, double X3, double Y3);

    /*
    Method ConvertToShape

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* ConvertToShape();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT GroupShapes : public QAxObject
{
public:
    GroupShapes(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Item

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* Item(const QVariant& Index);

    /*
    Method Range

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ShapeRange* Range(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT LineFormat : public QAxObject
{
public:
    LineFormat(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property BackColor

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ColorFormat* BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(Office::ColorFormat* value); //Sets the value of the BackColor property

    /*
    Property BeginArrowheadLength

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoArrowheadLength BeginArrowheadLength() const; //Returns the value of BeginArrowheadLength
    inline void SetBeginArrowheadLength(Office::MsoArrowheadLength value); //Sets the value of the BeginArrowheadLength property

    /*
    Property BeginArrowheadStyle

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoArrowheadStyle BeginArrowheadStyle() const; //Returns the value of BeginArrowheadStyle
    inline void SetBeginArrowheadStyle(Office::MsoArrowheadStyle value); //Sets the value of the BeginArrowheadStyle property

    /*
    Property BeginArrowheadWidth

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoArrowheadWidth BeginArrowheadWidth() const; //Returns the value of BeginArrowheadWidth
    inline void SetBeginArrowheadWidth(Office::MsoArrowheadWidth value); //Sets the value of the BeginArrowheadWidth property

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property DashStyle

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoLineDashStyle DashStyle() const; //Returns the value of DashStyle
    inline void SetDashStyle(Office::MsoLineDashStyle value); //Sets the value of the DashStyle property

    /*
    Property EndArrowheadLength

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoArrowheadLength EndArrowheadLength() const; //Returns the value of EndArrowheadLength
    inline void SetEndArrowheadLength(Office::MsoArrowheadLength value); //Sets the value of the EndArrowheadLength property

    /*
    Property EndArrowheadStyle

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoArrowheadStyle EndArrowheadStyle() const; //Returns the value of EndArrowheadStyle
    inline void SetEndArrowheadStyle(Office::MsoArrowheadStyle value); //Sets the value of the EndArrowheadStyle property

    /*
    Property EndArrowheadWidth

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoArrowheadWidth EndArrowheadWidth() const; //Returns the value of EndArrowheadWidth
    inline void SetEndArrowheadWidth(Office::MsoArrowheadWidth value); //Sets the value of the EndArrowheadWidth property

    /*
    Property ForeColor

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ColorFormat* ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(Office::ColorFormat* value); //Sets the value of the ForeColor property

    /*
    Property InsetPen

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState InsetPen() const; //Returns the value of InsetPen
    inline void SetInsetPen(Office::MsoTriState value); //Sets the value of the InsetPen property

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Pattern

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoPatternType Pattern() const; //Returns the value of Pattern
    inline void SetPattern(Office::MsoPatternType value); //Sets the value of the Pattern property

    /*
    Property Style

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoLineStyle Style() const; //Returns the value of Style
    inline void SetStyle(Office::MsoLineStyle value); //Sets the value of the Style property

    /*
    Property Transparency

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Transparency() const; //Returns the value of Transparency
    inline void SetTransparency(double value); //Sets the value of the Transparency property

    /*
    Property Visible

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Visible() const; //Returns the value of Visible
    inline void SetVisible(Office::MsoTriState value); //Sets the value of the Visible property

    /*
    Property Weight

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Weight() const; //Returns the value of Weight
    inline void SetWeight(double value); //Sets the value of the Weight property

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ShapeNode : public QAxObject
{
public:
    ShapeNode(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property EditingType

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoEditingType EditingType() const; //Returns the value of EditingType

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Points

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant Points() const; //Returns the value of Points

    /*
    Property SegmentType

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoSegmentType SegmentType() const; //Returns the value of SegmentType

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ShapeNodes : public QAxObject
{
public:
    ShapeNodes(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Delete

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(int Index);

    /*
    Method Insert

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Insert(int Index, Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1);

    /*
    Method Insert

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Insert(int Index, Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2);

    /*
    Method Insert

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Insert(int Index, Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2, double Y2);

    /*
    Method Insert

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Insert(int Index, Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2, double Y2, double X3);

    /*
    Method Insert

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Insert(int Index, Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2, double Y2, double X3, double Y3);

    /*
    Method Item

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ShapeNode* Item(const QVariant& Index);

    /*
    Method SetEditingType

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetEditingType(int Index, Office::MsoEditingType EditingType);

    /*
    Method SetPosition

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetPosition(int Index, double X1, double Y1);

    /*
    Method SetSegmentType

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetSegmentType(int Index, Office::MsoSegmentType SegmentType);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT PictureFormat : public QAxObject
{
public:
    PictureFormat(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Brightness

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Brightness() const; //Returns the value of Brightness
    inline void SetBrightness(double value); //Sets the value of the Brightness property

    /*
    Property ColorType

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoPictureColorType ColorType() const; //Returns the value of ColorType
    inline void SetColorType(Office::MsoPictureColorType value); //Sets the value of the ColorType property

    /*
    Property Contrast

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Contrast() const; //Returns the value of Contrast
    inline void SetContrast(double value); //Sets the value of the Contrast property

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property CropBottom

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double CropBottom() const; //Returns the value of CropBottom
    inline void SetCropBottom(double value); //Sets the value of the CropBottom property

    /*
    Property CropLeft

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double CropLeft() const; //Returns the value of CropLeft
    inline void SetCropLeft(double value); //Sets the value of the CropLeft property

    /*
    Property CropRight

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double CropRight() const; //Returns the value of CropRight
    inline void SetCropRight(double value); //Sets the value of the CropRight property

    /*
    Property CropTop

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double CropTop() const; //Returns the value of CropTop
    inline void SetCropTop(double value); //Sets the value of the CropTop property

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property TransparencyColor

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int TransparencyColor() const; //Returns the value of TransparencyColor
    inline void SetTransparencyColor(int value); //Sets the value of the TransparencyColor property

    /*
    Property TransparentBackground

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState TransparentBackground() const; //Returns the value of TransparentBackground
    inline void SetTransparentBackground(Office::MsoTriState value); //Sets the value of the TransparentBackground property

    /*
    Method IncrementBrightness

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void IncrementBrightness(double Increment);

    /*
    Method IncrementContrast

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void IncrementContrast(double Increment);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ShadowFormat : public QAxObject
{
public:
    ShadowFormat(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property ForeColor

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ColorFormat* ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(Office::ColorFormat* value); //Sets the value of the ForeColor property

    /*
    Property Obscured

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Obscured() const; //Returns the value of Obscured
    inline void SetObscured(Office::MsoTriState value); //Sets the value of the Obscured property

    /*
    Property OffsetX

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double OffsetX() const; //Returns the value of OffsetX
    inline void SetOffsetX(double value); //Sets the value of the OffsetX property

    /*
    Property OffsetY

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double OffsetY() const; //Returns the value of OffsetY
    inline void SetOffsetY(double value); //Sets the value of the OffsetY property

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Transparency

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Transparency() const; //Returns the value of Transparency
    inline void SetTransparency(double value); //Sets the value of the Transparency property

    /*
    Property Type

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoShadowType Type() const; //Returns the value of Type
    inline void SetType(Office::MsoShadowType value); //Sets the value of the Type property

    /*
    Property Visible

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Visible() const; //Returns the value of Visible
    inline void SetVisible(Office::MsoTriState value); //Sets the value of the Visible property

    /*
    Method IncrementOffsetX

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void IncrementOffsetX(double Increment);

    /*
    Method IncrementOffsetY

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void IncrementOffsetY(double Increment);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT Script : public QAxObject
{
public:
    Script(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Extended

    For more information, see help context 218002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Extended() const; //Returns the value of Extended
    inline void SetExtended(const QString& value); //Sets the value of the Extended property

    /*
    Property Id

    For more information, see help context 218004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Id() const; //Returns the value of Id
    inline void SetId(const QString& value); //Sets the value of the Id property

    /*
    Property Language

    For more information, see help context 218006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoScriptLanguage Language() const; //Returns the value of Language
    inline void SetLanguage(Office::MsoScriptLanguage value); //Sets the value of the Language property

    /*
    Property Location

    For more information, see help context 218008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoScriptLocation Location() const; //Returns the value of Location

    /*
    Property Parent

    For more information, see help context 218001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property ScriptText

    For more information, see help context 218011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ScriptText() const; //Returns the value of ScriptText
    inline void SetScriptText(const QString& value); //Sets the value of the ScriptText property

    /*
    Property Shape

    For more information, see help context 218010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Shape() const; //Returns the value of Shape

    /*
    Method Delete

    For more information, see help context 218009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT Scripts : public QAxObject
{
public:
    Scripts(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 217002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 217001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 217003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 217005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Script* Add();

    /*
    Method Add

    For more information, see help context 217005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Script* Add(IDispatch* Anchor);

    /*
    Method Add

    For more information, see help context 217005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Script* Add(IDispatch* Anchor, Office::MsoScriptLocation Location);

    /*
    Method Add

    For more information, see help context 217005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Script* Add(IDispatch* Anchor, Office::MsoScriptLocation Location, Office::MsoScriptLanguage Language);

    /*
    Method Add

    For more information, see help context 217005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Script* Add(IDispatch* Anchor, Office::MsoScriptLocation Location, Office::MsoScriptLanguage Language, const QString& Id);

    /*
    Method Add

    For more information, see help context 217005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Script* Add(IDispatch* Anchor, Office::MsoScriptLocation Location, Office::MsoScriptLanguage Language, const QString& Id, const QString& Extended);

    /*
    Method Add

    For more information, see help context 217005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Script* Add(IDispatch* Anchor, Office::MsoScriptLocation Location, Office::MsoScriptLanguage Language, const QString& Id, const QString& Extended, const QString& ScriptText);

    /*
    Method Delete

    For more information, see help context 217006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Item

    For more information, see help context 217004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Script* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT Shape : public QAxObject
{
public:
    Shape(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Adjustments

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Adjustments* Adjustments() const; //Returns the value of Adjustments

    /*
    Property AlternativeText

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString AlternativeText() const; //Returns the value of AlternativeText
    inline void SetAlternativeText(const QString& value); //Sets the value of the AlternativeText property

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property AutoShapeType

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoAutoShapeType AutoShapeType() const; //Returns the value of AutoShapeType
    inline void SetAutoShapeType(Office::MsoAutoShapeType value); //Sets the value of the AutoShapeType property

    /*
    Property BlackWhiteMode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoBlackWhiteMode BlackWhiteMode() const; //Returns the value of BlackWhiteMode
    inline void SetBlackWhiteMode(Office::MsoBlackWhiteMode value); //Sets the value of the BlackWhiteMode property

    /*
    Property Callout

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CalloutFormat* Callout() const; //Returns the value of Callout

    /*
    Property CanvasItems

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CanvasShapes* CanvasItems() const; //Returns the value of CanvasItems

    /*
    Property Child

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Child() const; //Returns the value of Child

    /*
    Property ConnectionSiteCount

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int ConnectionSiteCount() const; //Returns the value of ConnectionSiteCount

    /*
    Property Connector

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Connector() const; //Returns the value of Connector

    /*
    Property ConnectorFormat

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ConnectorFormat* ConnectorFormat() const; //Returns the value of ConnectorFormat

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Diagram

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::IMsoDiagram* Diagram() const; //Returns the value of Diagram

    /*
    Property DiagramNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* DiagramNode() const; //Returns the value of DiagramNode

    /*
    Property Fill

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::FillFormat* Fill() const; //Returns the value of Fill

    /*
    Property GroupItems

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::GroupShapes* GroupItems() const; //Returns the value of GroupItems

    /*
    Property HasDiagram

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState HasDiagram() const; //Returns the value of HasDiagram

    /*
    Property HasDiagramNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState HasDiagramNode() const; //Returns the value of HasDiagramNode

    /*
    Property Height

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Height() const; //Returns the value of Height
    inline void SetHeight(double value); //Sets the value of the Height property

    /*
    Property HorizontalFlip

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState HorizontalFlip() const; //Returns the value of HorizontalFlip

    /*
    Property Id

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Id() const; //Returns the value of Id

    /*
    Property Left

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Left() const; //Returns the value of Left
    inline void SetLeft(double value); //Sets the value of the Left property

    /*
    Property Line

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::LineFormat* Line() const; //Returns the value of Line

    /*
    Property LockAspectRatio

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState LockAspectRatio() const; //Returns the value of LockAspectRatio
    inline void SetLockAspectRatio(Office::MsoTriState value); //Sets the value of the LockAspectRatio property

    /*
    Property Name

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Nodes

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ShapeNodes* Nodes() const; //Returns the value of Nodes

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property ParentGroup

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* ParentGroup() const; //Returns the value of ParentGroup

    /*
    Property PictureFormat

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::PictureFormat* PictureFormat() const; //Returns the value of PictureFormat

    /*
    Property RTF

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString RTF() const; //Returns the value of RTF
    inline void SetRTF(const QString& value); //Sets the value of the RTF property

    /*
    Property Rotation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Rotation() const; //Returns the value of Rotation
    inline void SetRotation(double value); //Sets the value of the Rotation property

    /*
    Property Script

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Script* Script() const; //Returns the value of Script

    /*
    Property Shadow

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ShadowFormat* Shadow() const; //Returns the value of Shadow

    /*
    Property TextEffect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::TextEffectFormat* TextEffect() const; //Returns the value of TextEffect

    /*
    Property TextFrame

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::TextFrame* TextFrame() const; //Returns the value of TextFrame

    /*
    Property ThreeD

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ThreeDFormat* ThreeD() const; //Returns the value of ThreeD

    /*
    Property Top

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Top() const; //Returns the value of Top
    inline void SetTop(double value); //Sets the value of the Top property

    /*
    Property Type

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoShapeType Type() const; //Returns the value of Type

    /*
    Property VerticalFlip

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState VerticalFlip() const; //Returns the value of VerticalFlip

    /*
    Property Vertices

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant Vertices() const; //Returns the value of Vertices

    /*
    Property Visible

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Visible() const; //Returns the value of Visible
    inline void SetVisible(Office::MsoTriState value); //Sets the value of the Visible property

    /*
    Property Width

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Width() const; //Returns the value of Width
    inline void SetWidth(double value); //Sets the value of the Width property

    /*
    Property ZOrderPosition

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int ZOrderPosition() const; //Returns the value of ZOrderPosition

    /*
    Method Apply

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Apply();

    /*
    Method CanvasCropBottom

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CanvasCropBottom(double Increment);

    /*
    Method CanvasCropLeft

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CanvasCropLeft(double Increment);

    /*
    Method CanvasCropRight

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CanvasCropRight(double Increment);

    /*
    Method CanvasCropTop

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CanvasCropTop(double Increment);

    /*
    Method Delete

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Duplicate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* Duplicate();

    /*
    Method Flip

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Flip(Office::MsoFlipCmd FlipCmd);

    /*
    Method IncrementLeft

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void IncrementLeft(double Increment);

    /*
    Method IncrementRotation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void IncrementRotation(double Increment);

    /*
    Method IncrementTop

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void IncrementTop(double Increment);

    /*
    Method PickUp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void PickUp();

    /*
    Method RerouteConnections

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void RerouteConnections();

    /*
    Method ScaleHeight

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ScaleHeight(double Factor, Office::MsoTriState RelativeToOriginalSize);

    /*
    Method ScaleHeight

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ScaleHeight(double Factor, Office::MsoTriState RelativeToOriginalSize, Office::MsoScaleFrom fScale);

    /*
    Method ScaleWidth

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ScaleWidth(double Factor, Office::MsoTriState RelativeToOriginalSize);

    /*
    Method ScaleWidth

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ScaleWidth(double Factor, Office::MsoTriState RelativeToOriginalSize, Office::MsoScaleFrom fScale);

    /*
    Method Select

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Select();

    /*
    Method Select

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Select(const QVariant& Replace);

    /*
    Method SetShapesDefaultProperties

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetShapesDefaultProperties();

    /*
    Method Ungroup

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ShapeRange* Ungroup();

    /*
    Method ZOrder

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ZOrder(Office::MsoZOrderCmd ZOrderCmd);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ShapeRange : public QAxObject
{
public:
    ShapeRange(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Adjustments

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Adjustments* Adjustments() const; //Returns the value of Adjustments

    /*
    Property AlternativeText

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString AlternativeText() const; //Returns the value of AlternativeText
    inline void SetAlternativeText(const QString& value); //Sets the value of the AlternativeText property

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property AutoShapeType

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoAutoShapeType AutoShapeType() const; //Returns the value of AutoShapeType
    inline void SetAutoShapeType(Office::MsoAutoShapeType value); //Sets the value of the AutoShapeType property

    /*
    Property BlackWhiteMode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoBlackWhiteMode BlackWhiteMode() const; //Returns the value of BlackWhiteMode
    inline void SetBlackWhiteMode(Office::MsoBlackWhiteMode value); //Sets the value of the BlackWhiteMode property

    /*
    Property Callout

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CalloutFormat* Callout() const; //Returns the value of Callout

    /*
    Property CanvasItems

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CanvasShapes* CanvasItems() const; //Returns the value of CanvasItems

    /*
    Property Child

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Child() const; //Returns the value of Child

    /*
    Property ConnectionSiteCount

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int ConnectionSiteCount() const; //Returns the value of ConnectionSiteCount

    /*
    Property Connector

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Connector() const; //Returns the value of Connector

    /*
    Property ConnectorFormat

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ConnectorFormat* ConnectorFormat() const; //Returns the value of ConnectorFormat

    /*
    Property Count

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Diagram

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::IMsoDiagram* Diagram() const; //Returns the value of Diagram

    /*
    Property DiagramNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* DiagramNode() const; //Returns the value of DiagramNode

    /*
    Property Fill

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::FillFormat* Fill() const; //Returns the value of Fill

    /*
    Property GroupItems

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::GroupShapes* GroupItems() const; //Returns the value of GroupItems

    /*
    Property HasDiagram

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState HasDiagram() const; //Returns the value of HasDiagram

    /*
    Property HasDiagramNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState HasDiagramNode() const; //Returns the value of HasDiagramNode

    /*
    Property Height

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Height() const; //Returns the value of Height
    inline void SetHeight(double value); //Sets the value of the Height property

    /*
    Property HorizontalFlip

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState HorizontalFlip() const; //Returns the value of HorizontalFlip

    /*
    Property Id

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Id() const; //Returns the value of Id

    /*
    Property Left

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Left() const; //Returns the value of Left
    inline void SetLeft(double value); //Sets the value of the Left property

    /*
    Property Line

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::LineFormat* Line() const; //Returns the value of Line

    /*
    Property LockAspectRatio

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState LockAspectRatio() const; //Returns the value of LockAspectRatio
    inline void SetLockAspectRatio(Office::MsoTriState value); //Sets the value of the LockAspectRatio property

    /*
    Property Name

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Nodes

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ShapeNodes* Nodes() const; //Returns the value of Nodes

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property ParentGroup

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* ParentGroup() const; //Returns the value of ParentGroup

    /*
    Property PictureFormat

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::PictureFormat* PictureFormat() const; //Returns the value of PictureFormat

    /*
    Property RTF

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString RTF() const; //Returns the value of RTF
    inline void SetRTF(const QString& value); //Sets the value of the RTF property

    /*
    Property Rotation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Rotation() const; //Returns the value of Rotation
    inline void SetRotation(double value); //Sets the value of the Rotation property

    /*
    Property Script

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Script* Script() const; //Returns the value of Script

    /*
    Property Shadow

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ShadowFormat* Shadow() const; //Returns the value of Shadow

    /*
    Property TextEffect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::TextEffectFormat* TextEffect() const; //Returns the value of TextEffect

    /*
    Property TextFrame

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::TextFrame* TextFrame() const; //Returns the value of TextFrame

    /*
    Property ThreeD

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ThreeDFormat* ThreeD() const; //Returns the value of ThreeD

    /*
    Property Top

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Top() const; //Returns the value of Top
    inline void SetTop(double value); //Sets the value of the Top property

    /*
    Property Type

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoShapeType Type() const; //Returns the value of Type

    /*
    Property VerticalFlip

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState VerticalFlip() const; //Returns the value of VerticalFlip

    /*
    Property Vertices

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant Vertices() const; //Returns the value of Vertices

    /*
    Property Visible

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Visible() const; //Returns the value of Visible
    inline void SetVisible(Office::MsoTriState value); //Sets the value of the Visible property

    /*
    Property Width

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Width() const; //Returns the value of Width
    inline void SetWidth(double value); //Sets the value of the Width property

    /*
    Property ZOrderPosition

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int ZOrderPosition() const; //Returns the value of ZOrderPosition

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Align

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Align(Office::MsoAlignCmd AlignCmd, Office::MsoTriState RelativeTo);

    /*
    Method Apply

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Apply();

    /*
    Method CanvasCropBottom

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CanvasCropBottom(double Increment);

    /*
    Method CanvasCropLeft

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CanvasCropLeft(double Increment);

    /*
    Method CanvasCropRight

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CanvasCropRight(double Increment);

    /*
    Method CanvasCropTop

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CanvasCropTop(double Increment);

    /*
    Method Delete

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Distribute

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Distribute(Office::MsoDistributeCmd DistributeCmd, Office::MsoTriState RelativeTo);

    /*
    Method Duplicate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ShapeRange* Duplicate();

    /*
    Method Flip

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Flip(Office::MsoFlipCmd FlipCmd);

    /*
    Method Group

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* Group();

    /*
    Method IncrementLeft

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void IncrementLeft(double Increment);

    /*
    Method IncrementRotation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void IncrementRotation(double Increment);

    /*
    Method IncrementTop

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void IncrementTop(double Increment);

    /*
    Method Item

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* Item(const QVariant& Index);

    /*
    Method PickUp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void PickUp();

    /*
    Method Regroup

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* Regroup();

    /*
    Method RerouteConnections

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void RerouteConnections();

    /*
    Method ScaleHeight

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ScaleHeight(double Factor, Office::MsoTriState RelativeToOriginalSize);

    /*
    Method ScaleHeight

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ScaleHeight(double Factor, Office::MsoTriState RelativeToOriginalSize, Office::MsoScaleFrom fScale);

    /*
    Method ScaleWidth

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ScaleWidth(double Factor, Office::MsoTriState RelativeToOriginalSize);

    /*
    Method ScaleWidth

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ScaleWidth(double Factor, Office::MsoTriState RelativeToOriginalSize, Office::MsoScaleFrom fScale);

    /*
    Method Select

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Select();

    /*
    Method Select

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Select(const QVariant& Replace);

    /*
    Method SetShapesDefaultProperties

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetShapesDefaultProperties();

    /*
    Method Ungroup

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ShapeRange* Ungroup();

    /*
    Method ZOrder

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ZOrder(Office::MsoZOrderCmd ZOrderCmd);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT Shapes : public QAxObject
{
public:
    Shapes(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Background

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* Background() const; //Returns the value of Background

    /*
    Property Count

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Default

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* Default() const; //Returns the value of Default

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method AddCallout

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddCallout(Office::MsoCalloutType Type, double Left, double Top, double Width, double Height);

    /*
    Method AddCanvas

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddCanvas(double Left, double Top, double Width, double Height);

    /*
    Method AddConnector

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddConnector(Office::MsoConnectorType Type, double BeginX, double BeginY, double EndX, double EndY);

    /*
    Method AddCurve

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddCurve(const QVariant& SafeArrayOfPoints);

    /*
    Method AddDiagram

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddDiagram(Office::MsoDiagramType Type, double Left, double Top, double Width, double Height);

    /*
    Method AddLabel

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddLabel(Office::MsoTextOrientation Orientation, double Left, double Top, double Width, double Height);

    /*
    Method AddLine

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddLine(double BeginX, double BeginY, double EndX, double EndY);

    /*
    Method AddPicture

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddPicture(const QString& FileName, Office::MsoTriState LinkToFile, Office::MsoTriState SaveWithDocument, double Left, double Top);

    /*
    Method AddPicture

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddPicture(const QString& FileName, Office::MsoTriState LinkToFile, Office::MsoTriState SaveWithDocument, double Left, double Top, double Width);

    /*
    Method AddPicture

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddPicture(const QString& FileName, Office::MsoTriState LinkToFile, Office::MsoTriState SaveWithDocument, double Left, double Top, double Width, double Height);

    /*
    Method AddPolyline

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddPolyline(const QVariant& SafeArrayOfPoints);

    /*
    Method AddShape

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddShape(Office::MsoAutoShapeType Type, double Left, double Top, double Width, double Height);

    /*
    Method AddTextEffect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddTextEffect(Office::MsoPresetTextEffect PresetTextEffect, const QString& Text, const QString& FontName, double FontSize, Office::MsoTriState FontBold, Office::MsoTriState FontItalic, double Left, double Top);

    /*
    Method AddTextbox

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddTextbox(Office::MsoTextOrientation Orientation, double Left, double Top, double Width, double Height);

    /*
    Method BuildFreeform

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::FreeformBuilder* BuildFreeform(Office::MsoEditingType EditingType, double X1, double Y1);

    /*
    Method Item

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* Item(const QVariant& Index);

    /*
    Method Range

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ShapeRange* Range(const QVariant& Index);

    /*
    Method SelectAll

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SelectAll();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT TextEffectFormat : public QAxObject
{
public:
    TextEffectFormat(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Alignment

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTextEffectAlignment Alignment() const; //Returns the value of Alignment
    inline void SetAlignment(Office::MsoTextEffectAlignment value); //Sets the value of the Alignment property

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property FontBold

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState FontBold() const; //Returns the value of FontBold
    inline void SetFontBold(Office::MsoTriState value); //Sets the value of the FontBold property

    /*
    Property FontItalic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState FontItalic() const; //Returns the value of FontItalic
    inline void SetFontItalic(Office::MsoTriState value); //Sets the value of the FontItalic property

    /*
    Property FontName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString FontName() const; //Returns the value of FontName
    inline void SetFontName(const QString& value); //Sets the value of the FontName property

    /*
    Property FontSize

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double FontSize() const; //Returns the value of FontSize
    inline void SetFontSize(double value); //Sets the value of the FontSize property

    /*
    Property KernedPairs

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState KernedPairs() const; //Returns the value of KernedPairs
    inline void SetKernedPairs(Office::MsoTriState value); //Sets the value of the KernedPairs property

    /*
    Property NormalizedHeight

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState NormalizedHeight() const; //Returns the value of NormalizedHeight
    inline void SetNormalizedHeight(Office::MsoTriState value); //Sets the value of the NormalizedHeight property

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PresetShape

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoPresetTextEffectShape PresetShape() const; //Returns the value of PresetShape
    inline void SetPresetShape(Office::MsoPresetTextEffectShape value); //Sets the value of the PresetShape property

    /*
    Property PresetTextEffect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoPresetTextEffect PresetTextEffect() const; //Returns the value of PresetTextEffect
    inline void SetPresetTextEffect(Office::MsoPresetTextEffect value); //Sets the value of the PresetTextEffect property

    /*
    Property RotatedChars

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState RotatedChars() const; //Returns the value of RotatedChars
    inline void SetRotatedChars(Office::MsoTriState value); //Sets the value of the RotatedChars property

    /*
    Property Text

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property Tracking

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Tracking() const; //Returns the value of Tracking
    inline void SetTracking(double value); //Sets the value of the Tracking property

    /*
    Method ToggleVerticalText

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ToggleVerticalText();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT TextFrame : public QAxObject
{
public:
    TextFrame(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property MarginBottom

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double MarginBottom() const; //Returns the value of MarginBottom
    inline void SetMarginBottom(double value); //Sets the value of the MarginBottom property

    /*
    Property MarginLeft

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double MarginLeft() const; //Returns the value of MarginLeft
    inline void SetMarginLeft(double value); //Sets the value of the MarginLeft property

    /*
    Property MarginRight

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double MarginRight() const; //Returns the value of MarginRight
    inline void SetMarginRight(double value); //Sets the value of the MarginRight property

    /*
    Property MarginTop

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double MarginTop() const; //Returns the value of MarginTop
    inline void SetMarginTop(double value); //Sets the value of the MarginTop property

    /*
    Property Orientation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTextOrientation Orientation() const; //Returns the value of Orientation
    inline void SetOrientation(Office::MsoTextOrientation value); //Sets the value of the Orientation property

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ThreeDFormat : public QAxObject
{
public:
    ThreeDFormat(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Depth

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double Depth() const; //Returns the value of Depth
    inline void SetDepth(double value); //Sets the value of the Depth property

    /*
    Property ExtrusionColor

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ColorFormat* ExtrusionColor() const; //Returns the value of ExtrusionColor

    /*
    Property ExtrusionColorType

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoExtrusionColorType ExtrusionColorType() const; //Returns the value of ExtrusionColorType
    inline void SetExtrusionColorType(Office::MsoExtrusionColorType value); //Sets the value of the ExtrusionColorType property

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Perspective

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Perspective() const; //Returns the value of Perspective
    inline void SetPerspective(Office::MsoTriState value); //Sets the value of the Perspective property

    /*
    Property PresetExtrusionDirection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoPresetExtrusionDirection PresetExtrusionDirection() const; //Returns the value of PresetExtrusionDirection

    /*
    Property PresetLightingDirection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoPresetLightingDirection PresetLightingDirection() const; //Returns the value of PresetLightingDirection
    inline void SetPresetLightingDirection(Office::MsoPresetLightingDirection value); //Sets the value of the PresetLightingDirection property

    /*
    Property PresetLightingSoftness

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoPresetLightingSoftness PresetLightingSoftness() const; //Returns the value of PresetLightingSoftness
    inline void SetPresetLightingSoftness(Office::MsoPresetLightingSoftness value); //Sets the value of the PresetLightingSoftness property

    /*
    Property PresetMaterial

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoPresetMaterial PresetMaterial() const; //Returns the value of PresetMaterial
    inline void SetPresetMaterial(Office::MsoPresetMaterial value); //Sets the value of the PresetMaterial property

    /*
    Property PresetThreeDFormat

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoPresetThreeDFormat PresetThreeDFormat() const; //Returns the value of PresetThreeDFormat

    /*
    Property RotationX

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double RotationX() const; //Returns the value of RotationX
    inline void SetRotationX(double value); //Sets the value of the RotationX property

    /*
    Property RotationY

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double RotationY() const; //Returns the value of RotationY
    inline void SetRotationY(double value); //Sets the value of the RotationY property

    /*
    Property Visible

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Visible() const; //Returns the value of Visible
    inline void SetVisible(Office::MsoTriState value); //Sets the value of the Visible property

    /*
    Method IncrementRotationX

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void IncrementRotationX(double Increment);

    /*
    Method IncrementRotationY

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void IncrementRotationY(double Increment);

    /*
    Method ResetRotation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ResetRotation();

    /*
    Method SetExtrusionDirection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetExtrusionDirection(Office::MsoPresetExtrusionDirection PresetExtrusionDirection);

    /*
    Method SetThreeDFormat

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetThreeDFormat(Office::MsoPresetThreeDFormat PresetThreeDFormat);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT IMsoDispCagNotifySink : public QAxObject
{
public:
    IMsoDispCagNotifySink(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method InsertClip

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void InsertClip(IUnknown* pClipMoniker, IUnknown* pItemMoniker);

    /*
    Method WindowIsClosing

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void WindowIsClosing();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT Balloon : public QAxObject
{
public:
    Balloon(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Animation

    For more information, see help context 201009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoAnimationType Animation() const; //Returns the value of Animation
    inline void SetAnimation(Office::MsoAnimationType value); //Sets the value of the Animation property

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property BalloonType

    For more information, see help context 201004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoBalloonType BalloonType() const; //Returns the value of BalloonType
    inline void SetBalloonType(Office::MsoBalloonType value); //Sets the value of the BalloonType property

    /*
    Property Button

    For more information, see help context 201010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoButtonSetType Button() const; //Returns the value of Button
    inline void SetButton(Office::MsoButtonSetType value); //Sets the value of the Button property

    /*
    Property Callback

    For more information, see help context 201011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Callback() const; //Returns the value of Callback
    inline void SetCallback(const QString& value); //Sets the value of the Callback property

    /*
    Property Checkboxes

    For more information, see help context 201002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Checkboxes() const; //Returns the value of Checkboxes

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Heading

    For more information, see help context 201006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Heading() const; //Returns the value of Heading
    inline void SetHeading(const QString& value); //Sets the value of the Heading property

    /*
    Property Icon

    For more information, see help context 201005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoIconType Icon() const; //Returns the value of Icon
    inline void SetIcon(Office::MsoIconType value); //Sets the value of the Icon property

    /*
    Property Labels

    For more information, see help context 201003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Labels() const; //Returns the value of Labels

    /*
    Property Mode

    For more information, see help context 201008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoModeType Mode() const; //Returns the value of Mode
    inline void SetMode(Office::MsoModeType value); //Sets the value of the Mode property

    /*
    Property Name

    For more information, see help context 201014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 201001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Private

    For more information, see help context 201012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Private() const; //Returns the value of Private
    inline void SetPrivate(int value); //Sets the value of the Private property

    /*
    Property Text

    For more information, see help context 201007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Method Close

    For more information, see help context 201016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Close();

    /*
    Method SetAvoidRectangle

    For more information, see help context 201013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetAvoidRectangle(int Left, int Top, int Right, int Bottom);

    /*
    Method Show

    For more information, see help context 201015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline MsoBalloonButtonType Show();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT BalloonCheckboxes : public QAxObject
{
public:
    BalloonCheckboxes(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 202004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count
    inline void SetCount(int value); //Sets the value of the Count property

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Name

    For more information, see help context 202001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 202002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 202005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Item

    For more information, see help context 202003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT BalloonCheckbox : public QAxObject
{
public:
    BalloonCheckbox(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Checked

    For more information, see help context 203004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Checked() const; //Returns the value of Checked
    inline void SetChecked(bool value); //Sets the value of the Checked property

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Item

    For more information, see help context 203001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Item() const; //Returns the value of Item

    /*
    Property Name

    For more information, see help context 203002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 203003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Text

    For more information, see help context 203005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT BalloonLabels : public QAxObject
{
public:
    BalloonLabels(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 204004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count
    inline void SetCount(int value); //Sets the value of the Count property

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Name

    For more information, see help context 204001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 204002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 204005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Item

    For more information, see help context 204003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT BalloonLabel : public QAxObject
{
public:
    BalloonLabel(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Item

    For more information, see help context 205001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Item() const; //Returns the value of Item

    /*
    Property Name

    For more information, see help context 205002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 205003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Text

    For more information, see help context 205004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT AnswerWizardFiles : public QAxObject
{
public:
    AnswerWizardFiles(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 226003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 226001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Method Add

    For more information, see help context 226004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Add(const QString& FileName);

    /*
    Method Delete

    For more information, see help context 226005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(const QString& FileName);

    /*
    Method Item

    For more information, see help context 226002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT AnswerWizard : public QAxObject
{
public:
    AnswerWizard(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Files

    For more information, see help context 227002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::AnswerWizardFiles* Files() const; //Returns the value of Files

    /*
    Property Parent

    For more information, see help context 227001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Method ClearFileList

    For more information, see help context 227003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ClearFileList();

    /*
    Method ResetFileList

    For more information, see help context 227004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ResetFileList();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT Assistant : public QAxObject
{
public:
    Assistant(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Animation

    For more information, see help context 200013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoAnimationType Animation() const; //Returns the value of Animation
    inline void SetAnimation(Office::MsoAnimationType value); //Sets the value of the Animation property

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property AssistWithAlerts

    For more information, see help context 200017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool AssistWithAlerts() const; //Returns the value of AssistWithAlerts
    inline void SetAssistWithAlerts(bool value); //Sets the value of the AssistWithAlerts property

    /*
    Property AssistWithHelp

    For more information, see help context 200015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool AssistWithHelp() const; //Returns the value of AssistWithHelp
    inline void SetAssistWithHelp(bool value); //Sets the value of the AssistWithHelp property

    /*
    Property AssistWithWizards

    For more information, see help context 200016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool AssistWithWizards() const; //Returns the value of AssistWithWizards
    inline void SetAssistWithWizards(bool value); //Sets the value of the AssistWithWizards property

    /*
    Property BalloonError

    For more information, see help context 200011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoBalloonErrorType BalloonError() const; //Returns the value of BalloonError

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property FeatureTips

    For more information, see help context 200020 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool FeatureTips() const; //Returns the value of FeatureTips
    inline void SetFeatureTips(bool value); //Sets the value of the FeatureTips property

    /*
    Property FileName

    For more information, see help context 200028 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString FileName() const; //Returns the value of FileName
    inline void SetFileName(const QString& value); //Sets the value of the FileName property

    /*
    Property GuessHelp

    For more information, see help context 200025 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool GuessHelp() const; //Returns the value of GuessHelp
    inline void SetGuessHelp(bool value); //Sets the value of the GuessHelp property

    /*
    Property HighPriorityTips

    For more information, see help context 200023 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool HighPriorityTips() const; //Returns the value of HighPriorityTips
    inline void SetHighPriorityTips(bool value); //Sets the value of the HighPriorityTips property

    /*
    Property Item

    For more information, see help context 200027 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Item() const; //Returns the value of Item

    /*
    Property KeyboardShortcutTips

    For more information, see help context 200022 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool KeyboardShortcutTips() const; //Returns the value of KeyboardShortcutTips
    inline void SetKeyboardShortcutTips(bool value); //Sets the value of the KeyboardShortcutTips property

    /*
    Property Left

    For more information, see help context 200004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Left() const; //Returns the value of Left
    inline void SetLeft(int value); //Sets the value of the Left property

    /*
    Property MouseTips

    For more information, see help context 200021 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool MouseTips() const; //Returns the value of MouseTips
    inline void SetMouseTips(bool value); //Sets the value of the MouseTips property

    /*
    Property MoveWhenInTheWay

    For more information, see help context 200018 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool MoveWhenInTheWay() const; //Returns the value of MoveWhenInTheWay
    inline void SetMoveWhenInTheWay(bool value); //Sets the value of the MoveWhenInTheWay property

    /*
    Property Name

    For more information, see help context 200029 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NewBalloon

    For more information, see help context 200010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Balloon* NewBalloon() const; //Returns the value of NewBalloon

    /*
    Property On

    For more information, see help context 200030 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool On() const; //Returns the value of On
    inline void SetOn(bool value); //Sets the value of the On property

    /*
    Property Parent

    For more information, see help context 200001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Reduced

    For more information, see help context 200014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Reduced() const; //Returns the value of Reduced
    inline void SetReduced(bool value); //Sets the value of the Reduced property

    /*
    Property SearchWhenProgramming

    For more information, see help context 200026 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool SearchWhenProgramming() const; //Returns the value of SearchWhenProgramming
    inline void SetSearchWhenProgramming(bool value); //Sets the value of the SearchWhenProgramming property

    /*
    Property Sounds

    For more information, see help context 200019 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Sounds() const; //Returns the value of Sounds
    inline void SetSounds(bool value); //Sets the value of the Sounds property

    /*
    Property TipOfDay

    For more information, see help context 200024 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool TipOfDay() const; //Returns the value of TipOfDay
    inline void SetTipOfDay(bool value); //Sets the value of the TipOfDay property

    /*
    Property Top

    For more information, see help context 200003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Top() const; //Returns the value of Top
    inline void SetTop(int value); //Sets the value of the Top property

    /*
    Property Visible

    For more information, see help context 200012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Method ActivateWizard

    For more information, see help context 200008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ActivateWizard(int WizardID, Office::MsoWizardActType act);

    /*
    Method ActivateWizard

    For more information, see help context 200008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ActivateWizard(int WizardID, Office::MsoWizardActType act, const QVariant& Animation);

    /*
    Method DoAlert

    For more information, see help context 200031 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int DoAlert(const QString& bstrAlertTitle, const QString& bstrAlertText, Office::MsoAlertButtonType alb, Office::MsoAlertIconType alc, Office::MsoAlertDefaultType ald, Office::MsoAlertCancelType alq, bool varfSysAlert);

    /*
    Method EndWizard

    For more information, see help context 200007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void EndWizard(int WizardID, bool varfSuccess);

    /*
    Method EndWizard

    For more information, see help context 200007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void EndWizard(int WizardID, bool varfSuccess, const QVariant& Animation);

    /*
    Method Help

    For more information, see help context 200005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Help();

    /*
    Method Move

    For more information, see help context 200002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Move(int xLeft, int yTop);

    /*
    Method ResetTips

    For more information, see help context 200009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ResetTips();

    /*
    Method StartWizard

    For more information, see help context 200006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int StartWizard(bool On, const QString& Callback, int PrivateX);

    /*
    Method StartWizard

    For more information, see help context 200006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int StartWizard(bool On, const QString& Callback, int PrivateX, const QVariant& Animation);

    /*
    Method StartWizard

    For more information, see help context 200006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int StartWizard(bool On, const QString& Callback, int PrivateX, const QVariant& Animation, const QVariant& CustomTeaser);

    /*
    Method StartWizard

    For more information, see help context 200006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int StartWizard(bool On, const QString& Callback, int PrivateX, const QVariant& Animation, const QVariant& CustomTeaser, const QVariant& Top);

    /*
    Method StartWizard

    For more information, see help context 200006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int StartWizard(bool On, const QString& Callback, int PrivateX, const QVariant& Animation, const QVariant& CustomTeaser, const QVariant& Top, const QVariant& Left);

    /*
    Method StartWizard

    For more information, see help context 200006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int StartWizard(bool On, const QString& Callback, int PrivateX, const QVariant& Animation, const QVariant& CustomTeaser, const QVariant& Top, const QVariant& Left, const QVariant& Bottom);

    /*
    Method StartWizard

    For more information, see help context 200006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int StartWizard(bool On, const QString& Callback, int PrivateX, const QVariant& Animation, const QVariant& CustomTeaser, const QVariant& Top, const QVariant& Left, const QVariant& Bottom, const QVariant& Right);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// stub for vtable-only interface
class DocumentProperty : public QAxObject {};

// stub for vtable-only interface
class DocumentProperties : public QAxObject {};

class OFFICE_EXPORT IFoundFiles : public QAxObject
{
public:
    IFoundFiles(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Count

    For more information, see help context 211002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Item

    For more information, see help context 211001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT IFind : public QAxObject
{
public:
    IFind(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Author

    For more information, see help context 212005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Author() const; //Returns the value of Author
    inline void SetAuthor(const QString& value); //Sets the value of the Author property

    /*
    Property DateCreatedFrom

    For more information, see help context 212015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant DateCreatedFrom() const; //Returns the value of DateCreatedFrom
    inline void SetDateCreatedFrom(const QVariant& value); //Sets the value of the DateCreatedFrom property

    /*
    Property DateCreatedTo

    For more information, see help context 212016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant DateCreatedTo() const; //Returns the value of DateCreatedTo
    inline void SetDateCreatedTo(const QVariant& value); //Sets the value of the DateCreatedTo property

    /*
    Property DateSavedFrom

    For more information, see help context 212012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant DateSavedFrom() const; //Returns the value of DateSavedFrom
    inline void SetDateSavedFrom(const QVariant& value); //Sets the value of the DateSavedFrom property

    /*
    Property DateSavedTo

    For more information, see help context 212013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant DateSavedTo() const; //Returns the value of DateSavedTo
    inline void SetDateSavedTo(const QVariant& value); //Sets the value of the DateSavedTo property

    /*
    Property FileType

    For more information, see help context 212027 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int FileType() const; //Returns the value of FileType
    inline void SetFileType(int value); //Sets the value of the FileType property

    /*
    Property Keywords

    For more information, see help context 212006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Keywords() const; //Returns the value of Keywords
    inline void SetKeywords(const QString& value); //Sets the value of the Keywords property

    /*
    Property ListBy

    For more information, see help context 212019 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoFileFindListBy ListBy() const; //Returns the value of ListBy
    inline void SetListBy(Office::MsoFileFindListBy value); //Sets the value of the ListBy property

    /*
    Property MatchCase

    For more information, see help context 212009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool MatchCase() const; //Returns the value of MatchCase
    inline void SetMatchCase(bool value); //Sets the value of the MatchCase property

    /*
    Property Name

    For more information, see help context 212002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Options

    For more information, see help context 212008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoFileFindOptions Options() const; //Returns the value of Options
    inline void SetOptions(Office::MsoFileFindOptions value); //Sets the value of the Options property

    /*
    Property PatternMatch

    For more information, see help context 212011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool PatternMatch() const; //Returns the value of PatternMatch
    inline void SetPatternMatch(bool value); //Sets the value of the PatternMatch property

    /*
    Property Results

    For more information, see help context 212021 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::IFoundFiles* Results() const; //Returns the value of Results

    /*
    Property SavedBy

    For more information, see help context 212014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString SavedBy() const; //Returns the value of SavedBy
    inline void SetSavedBy(const QString& value); //Sets the value of the SavedBy property

    /*
    Property SearchPath

    For more information, see help context 212001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString SearchPath() const; //Returns the value of SearchPath
    inline void SetSearchPath(const QString& value); //Sets the value of the SearchPath property

    /*
    Property SelectedFile

    For more information, see help context 212020 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int SelectedFile() const; //Returns the value of SelectedFile
    inline void SetSelectedFile(int value); //Sets the value of the SelectedFile property

    /*
    Property SortBy

    For more information, see help context 212018 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoFileFindSortBy SortBy() const; //Returns the value of SortBy
    inline void SetSortBy(Office::MsoFileFindSortBy value); //Sets the value of the SortBy property

    /*
    Property SubDir

    For more information, see help context 212003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool SubDir() const; //Returns the value of SubDir
    inline void SetSubDir(bool value); //Sets the value of the SubDir property

    /*
    Property Subject

    For more information, see help context 212007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property Text

    For more information, see help context 212010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property Title

    For more information, see help context 212004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Title() const; //Returns the value of Title
    inline void SetTitle(const QString& value); //Sets the value of the Title property

    /*
    Property View

    For more information, see help context 212017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoFileFindView View() const; //Returns the value of View
    inline void SetView(Office::MsoFileFindView value); //Sets the value of the View property

    /*
    Method Delete

    For more information, see help context 212026 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(const QString& bstrQueryName);

    /*
    Method Execute

    For more information, see help context 212023 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Execute();

    /*
    Method Load

    For more information, see help context 212024 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Load(const QString& bstrQueryName);

    /*
    Method Save

    For more information, see help context 212025 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Save(const QString& bstrQueryName);

    /*
    Method Show

    For more information, see help context 212022 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Show();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT FoundFiles : public QAxObject
{
public:
    FoundFiles(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 213002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Item

    For more information, see help context 213001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT PropertyTest : public QAxObject
{
public:
    PropertyTest(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Condition

    For more information, see help context 214002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoCondition Condition() const; //Returns the value of Condition

    /*
    Property Connector

    For more information, see help context 214005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoConnector Connector() const; //Returns the value of Connector

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Name

    For more information, see help context 214001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property SecondValue

    For more information, see help context 214004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant SecondValue() const; //Returns the value of SecondValue

    /*
    Property Value

    For more information, see help context 214003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant Value() const; //Returns the value of Value

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT PropertyTests : public QAxObject
{
public:
    PropertyTests(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 215002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 215003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Add(const QString& Name, Office::MsoCondition Condition);

    /*
    Method Add

    For more information, see help context 215003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Add(const QString& Name, Office::MsoCondition Condition, const QVariant& Value);

    /*
    Method Add

    For more information, see help context 215003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Add(const QString& Name, Office::MsoCondition Condition, const QVariant& Value, const QVariant& SecondValue);

    /*
    Method Add

    For more information, see help context 215003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Add(const QString& Name, Office::MsoCondition Condition, const QVariant& Value, const QVariant& SecondValue, Office::MsoConnector Connector);

    /*
    Method Item

    For more information, see help context 215001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::PropertyTest* Item(int Index);

    /*
    Method Remove

    For more information, see help context 215004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Remove(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT FileSearch : public QAxObject
{
public:
    FileSearch(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property FileName

    For more information, see help context 216004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString FileName() const; //Returns the value of FileName
    inline void SetFileName(const QString& value); //Sets the value of the FileName property

    /*
    Property FileType

    For more information, see help context 216005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoFileType FileType() const; //Returns the value of FileType
    inline void SetFileType(Office::MsoFileType value); //Sets the value of the FileType property

    /*
    Property FileTypes

    For more information, see help context 216016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::FileTypes* FileTypes() const; //Returns the value of FileTypes

    /*
    Property FoundFiles

    For more information, see help context 216011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::FoundFiles* FoundFiles() const; //Returns the value of FoundFiles

    /*
    Property LastModified

    For more information, see help context 216006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoLastModified LastModified() const; //Returns the value of LastModified
    inline void SetLastModified(Office::MsoLastModified value); //Sets the value of the LastModified property

    /*
    Property LookIn

    For more information, see help context 216008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString LookIn() const; //Returns the value of LookIn
    inline void SetLookIn(const QString& value); //Sets the value of the LookIn property

    /*
    Property MatchAllWordForms

    For more information, see help context 216003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool MatchAllWordForms() const; //Returns the value of MatchAllWordForms
    inline void SetMatchAllWordForms(bool value); //Sets the value of the MatchAllWordForms property

    /*
    Property MatchTextExactly

    For more information, see help context 216002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool MatchTextExactly() const; //Returns the value of MatchTextExactly
    inline void SetMatchTextExactly(bool value); //Sets the value of the MatchTextExactly property

    /*
    Property PropertyTests

    For more information, see help context 216012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::PropertyTests* PropertyTests() const; //Returns the value of PropertyTests

    /*
    Property SearchFolders

    For more information, see help context 216014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SearchFolders* SearchFolders() const; //Returns the value of SearchFolders

    /*
    Property SearchScopes

    For more information, see help context 216013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SearchScopes* SearchScopes() const; //Returns the value of SearchScopes

    /*
    Property SearchSubFolders

    For more information, see help context 216001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool SearchSubFolders() const; //Returns the value of SearchSubFolders
    inline void SetSearchSubFolders(bool value); //Sets the value of the SearchSubFolders property

    /*
    Property TextOrProperty

    For more information, see help context 216007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString TextOrProperty() const; //Returns the value of TextOrProperty
    inline void SetTextOrProperty(const QString& value); //Sets the value of the TextOrProperty property

    /*
    Method Execute

    For more information, see help context 216009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Execute();

    /*
    Method Execute

    For more information, see help context 216009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Execute(Office::MsoSortBy SortBy);

    /*
    Method Execute

    For more information, see help context 216009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Execute(Office::MsoSortBy SortBy, Office::MsoSortOrder SortOrder);

    /*
    Method Execute

    For more information, see help context 216009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Execute(Office::MsoSortBy SortBy, Office::MsoSortOrder SortOrder, bool AlwaysAccurate);

    /*
    Method NewSearch

    For more information, see help context 216010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void NewSearch();

    /*
    Method RefreshScopes

    For more information, see help context 216017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void RefreshScopes();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT COMAddIn : public QAxObject
{
public:
    COMAddIn(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Connect

    For more information, see help context 219005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Connect() const; //Returns the value of Connect
    inline void SetConnect(bool value); //Sets the value of the Connect property

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Description

    For more information, see help context 219001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Description() const; //Returns the value of Description
    inline void SetDescription(const QString& value); //Sets the value of the Description property

    /*
    Property Guid

    For more information, see help context 219004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Guid() const; //Returns the value of Guid

    /*
    Property Object

    For more information, see help context 219007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Object() const; //Returns the value of Object
    inline void SetObject(IDispatch* value); //Sets the value of the Object property

    /*
    Property Parent

    For more information, see help context 219009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property ProgId

    For more information, see help context 219003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ProgId() const; //Returns the value of ProgId

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT COMAddIns : public QAxObject
{
public:
    COMAddIns(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 220002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 220005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 220003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Item

    For more information, see help context 220001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::COMAddIn* Item(QVariant& Index);

    /*
    Method SetAppModal

    For more information, see help context 220006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetAppModal(bool varfModal);

    /*
    Method Update

    For more information, see help context 220004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Update();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT LanguageSettings : public QAxObject
{
public:
    LanguageSettings(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 231003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Method LanguageID

    For more information, see help context 231001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int LanguageID(Office::MsoAppLanguageID Id);

    /*
    Method LanguagePreferredForEditing

    For more information, see help context 231002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool LanguagePreferredForEditing(Office::MsoLanguageID lid);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ICommandBarsEvents : public QAxObject
{
public:
    ICommandBarsEvents(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method OnUpdate

    For more information, see help context 228001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void OnUpdate();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// skipping event interface _CommandBarsEvents

class OFFICE_EXPORT ICommandBarComboBoxEvents : public QAxObject
{
public:
    ICommandBarComboBoxEvents(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method Change

    For more information, see help context 229001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Change(Office::CommandBarComboBox* Ctrl);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// skipping event interface _CommandBarComboBoxEvents

class OFFICE_EXPORT ICommandBarButtonEvents : public QAxObject
{
public:
    ICommandBarButtonEvents(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method Click

    For more information, see help context 230001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Click(Office::CommandBarButton* Ctrl, bool& CancelDefault);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// skipping event interface _CommandBarButtonEvents

class OFFICE_EXPORT WebPageFont : public QAxObject
{
public:
    WebPageFont(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property FixedWidthFont

    For more information, see help context 224003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString FixedWidthFont() const; //Returns the value of FixedWidthFont
    inline void SetFixedWidthFont(const QString& value); //Sets the value of the FixedWidthFont property

    /*
    Property FixedWidthFontSize

    For more information, see help context 224004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double FixedWidthFontSize() const; //Returns the value of FixedWidthFontSize
    inline void SetFixedWidthFontSize(double value); //Sets the value of the FixedWidthFontSize property

    /*
    Property ProportionalFont

    For more information, see help context 224001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ProportionalFont() const; //Returns the value of ProportionalFont
    inline void SetProportionalFont(const QString& value); //Sets the value of the ProportionalFont property

    /*
    Property ProportionalFontSize

    For more information, see help context 224002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline double ProportionalFontSize() const; //Returns the value of ProportionalFontSize
    inline void SetProportionalFontSize(double value); //Sets the value of the ProportionalFontSize property

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT WebPageFonts : public QAxObject
{
public:
    WebPageFonts(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 225001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Item

    For more information, see help context 225002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::WebPageFont* Item(Office::MsoCharacterSet Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT HTMLProjectItem : public QAxObject
{
public:
    HTMLProjectItem(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property IsOpen

    For more information, see help context 221002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool IsOpen() const; //Returns the value of IsOpen

    /*
    Property Name

    For more information, see help context 221001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 221008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Text

    For more information, see help context 221006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Method LoadFromFile

    For more information, see help context 221003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void LoadFromFile(const QString& FileName);

    /*
    Method Open

    For more information, see help context 221004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Open();

    /*
    Method Open

    For more information, see help context 221004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Open(Office::MsoHTMLProjectOpen OpenKind);

    /*
    Method SaveCopyAs

    For more information, see help context 221005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SaveCopyAs(const QString& FileName);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT HTMLProjectItems : public QAxObject
{
public:
    HTMLProjectItems(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 222002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 222004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 222003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Item

    For more information, see help context 222001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::HTMLProjectItem* Item(QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT HTMLProject : public QAxObject
{
public:
    HTMLProject(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property HTMLProjectItems

    For more information, see help context 223004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::HTMLProjectItems* HTMLProjectItems() const; //Returns the value of HTMLProjectItems

    /*
    Property Parent

    For more information, see help context 223005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property State

    For more information, see help context 223001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoHTMLProjectState State() const; //Returns the value of State

    /*
    Method Open

    For more information, see help context 223006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Open();

    /*
    Method Open

    For more information, see help context 223006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Open(Office::MsoHTMLProjectOpen OpenKind);

    /*
    Method RefreshDocument

    For more information, see help context 223003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void RefreshDocument();

    /*
    Method RefreshDocument

    For more information, see help context 223003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void RefreshDocument(bool Refresh);

    /*
    Method RefreshProject

    For more information, see help context 223002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void RefreshProject();

    /*
    Method RefreshProject

    For more information, see help context 223002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void RefreshProject(bool Refresh);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT MsoDebugOptions : public QAxObject
{
public:
    MsoDebugOptions(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property FeatureReports

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int FeatureReports() const; //Returns the value of FeatureReports
    inline void SetFeatureReports(int value); //Sets the value of the FeatureReports property

    /*
    Property OutputToDebugger

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool OutputToDebugger() const; //Returns the value of OutputToDebugger
    inline void SetOutputToDebugger(bool value); //Sets the value of the OutputToDebugger property

    /*
    Property OutputToFile

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool OutputToFile() const; //Returns the value of OutputToFile
    inline void SetOutputToFile(bool value); //Sets the value of the OutputToFile property

    /*
    Property OutputToMessageBox

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool OutputToMessageBox() const; //Returns the value of OutputToMessageBox
    inline void SetOutputToMessageBox(bool value); //Sets the value of the OutputToMessageBox property

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT FileDialogSelectedItems : public QAxObject
{
public:
    FileDialogSelectedItems(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 253002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 253001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Item

    For more information, see help context 253003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT FileDialogFilter : public QAxObject
{
public:
    FileDialogFilter(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Description

    For more information, see help context 254003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Description() const; //Returns the value of Description

    /*
    Property Extensions

    For more information, see help context 254002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Extensions() const; //Returns the value of Extensions

    /*
    Property Parent

    For more information, see help context 254001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT FileDialogFilters : public QAxObject
{
public:
    FileDialogFilters(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 255002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 255001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 255006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::FileDialogFilter* Add(const QString& Description, const QString& Extensions);

    /*
    Method Add

    For more information, see help context 255006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::FileDialogFilter* Add(const QString& Description, const QString& Extensions, const QVariant& Position);

    /*
    Method Clear

    For more information, see help context 255005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Clear();

    /*
    Method Delete

    For more information, see help context 255004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Delete

    For more information, see help context 255004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(const QVariant& filter);

    /*
    Method Item

    For more information, see help context 255003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::FileDialogFilter* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT FileDialog : public QAxObject
{
public:
    FileDialog(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AllowMultiSelect

    For more information, see help context 256006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool AllowMultiSelect() const; //Returns the value of AllowMultiSelect
    inline void SetAllowMultiSelect(bool value); //Sets the value of the AllowMultiSelect property

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property ButtonName

    For more information, see help context 256005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ButtonName() const; //Returns the value of ButtonName
    inline void SetButtonName(const QString& value); //Sets the value of the ButtonName property

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property DialogType

    For more information, see help context 256010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoFileDialogType DialogType() const; //Returns the value of DialogType

    /*
    Property FilterIndex

    For more information, see help context 256003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int FilterIndex() const; //Returns the value of FilterIndex
    inline void SetFilterIndex(int value); //Sets the value of the FilterIndex property

    /*
    Property Filters

    For more information, see help context 256002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::FileDialogFilters* Filters() const; //Returns the value of Filters

    /*
    Property InitialFileName

    For more information, see help context 256008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString InitialFileName() const; //Returns the value of InitialFileName
    inline void SetInitialFileName(const QString& value); //Sets the value of the InitialFileName property

    /*
    Property InitialView

    For more information, see help context 256007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoFileDialogView InitialView() const; //Returns the value of InitialView
    inline void SetInitialView(Office::MsoFileDialogView value); //Sets the value of the InitialView property

    /*
    Property Item

    For more information, see help context 256011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Item() const; //Returns the value of Item

    /*
    Property Parent

    For more information, see help context 256001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SelectedItems

    For more information, see help context 256009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::FileDialogSelectedItems* SelectedItems() const; //Returns the value of SelectedItems

    /*
    Property Title

    For more information, see help context 256004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Title() const; //Returns the value of Title
    inline void SetTitle(const QString& value); //Sets the value of the Title property

    /*
    Method Execute

    For more information, see help context 256013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Execute();

    /*
    Method Show

    For more information, see help context 256012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Show();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SignatureSet : public QAxObject
{
public:
    SignatureSet(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 247001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 247005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 247003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Signature* Add();

    /*
    Method Commit

    For more information, see help context 247004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Commit();

    /*
    Method Item

    For more information, see help context 247002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Signature* Item(int iSig);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT Signature : public QAxObject
{
public:
    Signature(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property AttachCertificate

    For more information, see help context 248005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool AttachCertificate() const; //Returns the value of AttachCertificate
    inline void SetAttachCertificate(bool value); //Sets the value of the AttachCertificate property

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property ExpireDate

    For more information, see help context 248003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant ExpireDate() const; //Returns the value of ExpireDate

    /*
    Property IsCertificateExpired

    For more information, see help context 248008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool IsCertificateExpired() const; //Returns the value of IsCertificateExpired

    /*
    Property IsCertificateRevoked

    For more information, see help context 248009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool IsCertificateRevoked() const; //Returns the value of IsCertificateRevoked

    /*
    Property IsValid

    For more information, see help context 248004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool IsValid() const; //Returns the value of IsValid

    /*
    Property Issuer

    For more information, see help context 248002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Issuer() const; //Returns the value of Issuer

    /*
    Property Parent

    For more information, see help context 248007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SignDate

    For more information, see help context 248010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant SignDate() const; //Returns the value of SignDate

    /*
    Property Signer

    For more information, see help context 248001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Signer() const; //Returns the value of Signer

    /*
    Method Delete

    For more information, see help context 248006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT IMsoEnvelopeVB : public QAxObject
{
public:
    IMsoEnvelopeVB(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property CommandBars

    For more information, see help context 11005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* CommandBars() const; //Returns the value of CommandBars

    /*
    Property Introduction

    For more information, see help context 11001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Introduction() const; //Returns the value of Introduction
    inline void SetIntroduction(const QString& value); //Sets the value of the Introduction property

    /*
    Property Item

    For more information, see help context 11003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Item() const; //Returns the value of Item

    /*
    Property Parent

    For more information, see help context 11004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// skipping event interface IMsoEnvelopeVBEvents

class OFFICE_EXPORT FileTypes : public QAxObject
{
public:
    FileTypes(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 257002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 257003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Add(Office::MsoFileType FileType);

    /*
    Method Item

    For more information, see help context 257001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline MsoFileType Item(int Index);

    /*
    Method Remove

    For more information, see help context 257004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Remove(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SearchFolders : public QAxObject
{
public:
    SearchFolders(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 258002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 258003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Add(Office::ScopeFolder* ScopeFolder);

    /*
    Method Item

    For more information, see help context 258001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ScopeFolder* Item(int Index);

    /*
    Method Remove

    For more information, see help context 258004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Remove(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ScopeFolders : public QAxObject
{
public:
    ScopeFolders(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 249002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Item

    For more information, see help context 249001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ScopeFolder* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ScopeFolder : public QAxObject
{
public:
    ScopeFolder(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Name

    For more information, see help context 259001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Path

    For more information, see help context 259002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Path() const; //Returns the value of Path

    /*
    Property ScopeFolders

    For more information, see help context 259003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ScopeFolders* ScopeFolders() const; //Returns the value of ScopeFolders

    /*
    Method AddToSearchFolders

    For more information, see help context 259004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AddToSearchFolders();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SearchScope : public QAxObject
{
public:
    SearchScope(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property ScopeFolder

    For more information, see help context 251002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ScopeFolder* ScopeFolder() const; //Returns the value of ScopeFolder

    /*
    Property Type

    For more information, see help context 251001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoSearchIn Type() const; //Returns the value of Type

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SearchScopes : public QAxObject
{
public:
    SearchScopes(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 252002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Item

    For more information, see help context 252001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SearchScope* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT IMsoDiagram : public QAxObject
{
public:
    IMsoDiagram(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property AutoFormat

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState AutoFormat() const; //Returns the value of AutoFormat
    inline void SetAutoFormat(Office::MsoTriState value); //Sets the value of the AutoFormat property

    /*
    Property AutoLayout

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState AutoLayout() const; //Returns the value of AutoLayout
    inline void SetAutoLayout(Office::MsoTriState value); //Sets the value of the AutoLayout property

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Nodes

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNodes* Nodes() const; //Returns the value of Nodes

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Reverse

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoTriState Reverse() const; //Returns the value of Reverse
    inline void SetReverse(Office::MsoTriState value); //Sets the value of the Reverse property

    /*
    Property Type

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoDiagramType Type() const; //Returns the value of Type

    /*
    Method Convert

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Convert(Office::MsoDiagramType Type);

    /*
    Method FitText

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void FitText();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT DiagramNodes : public QAxObject
{
public:
    DiagramNodes(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Item

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* Item(const QVariant& Index);

    /*
    Method SelectAll

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SelectAll();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT DiagramNodeChildren : public QAxObject
{
public:
    DiagramNodeChildren(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property FirstChild

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* FirstChild() const; //Returns the value of FirstChild

    /*
    Property LastChild

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* LastChild() const; //Returns the value of LastChild

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method AddNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* AddNode();

    /*
    Method AddNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* AddNode(const QVariant& Index);

    /*
    Method AddNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* AddNode(const QVariant& Index, Office::MsoDiagramNodeType NodeType);

    /*
    Method Item

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* Item(const QVariant& Index);

    /*
    Method SelectAll

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SelectAll();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT DiagramNode : public QAxObject
{
public:
    DiagramNode(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Children

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNodeChildren* Children() const; //Returns the value of Children

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Diagram

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::IMsoDiagram* Diagram() const; //Returns the value of Diagram

    /*
    Property Layout

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoOrgChartLayoutType Layout() const; //Returns the value of Layout
    inline void SetLayout(Office::MsoOrgChartLayoutType value); //Sets the value of the Layout property

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Root

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* Root() const; //Returns the value of Root

    /*
    Property Shape

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* Shape() const; //Returns the value of Shape

    /*
    Property TextShape

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* TextShape() const; //Returns the value of TextShape

    /*
    Method AddNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* AddNode();

    /*
    Method AddNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* AddNode(Office::MsoRelativeNodePosition Pos);

    /*
    Method AddNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* AddNode(Office::MsoRelativeNodePosition Pos, Office::MsoDiagramNodeType NodeType);

    /*
    Method CloneNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* CloneNode(bool CopyChildren, Office::DiagramNode* TargetNode);

    /*
    Method CloneNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* CloneNode(bool CopyChildren, Office::DiagramNode* TargetNode, Office::MsoRelativeNodePosition Pos);

    /*
    Method Delete

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method MoveNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void MoveNode(Office::DiagramNode* TargetNode, Office::MsoRelativeNodePosition Pos);

    /*
    Method NextNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* NextNode();

    /*
    Method PrevNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DiagramNode* PrevNode();

    /*
    Method ReplaceNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ReplaceNode(Office::DiagramNode* TargetNode);

    /*
    Method SwapNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SwapNode(Office::DiagramNode* TargetNode);

    /*
    Method SwapNode

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SwapNode(Office::DiagramNode* TargetNode, bool SwapChildren);

    /*
    Method TransferChildren

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void TransferChildren(Office::DiagramNode* ReceivingNode);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT CanvasShapes : public QAxObject
{
public:
    CanvasShapes(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Background

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* Background() const; //Returns the value of Background

    /*
    Property Count

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method AddCallout

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddCallout(Office::MsoCalloutType Type, double Left, double Top, double Width, double Height);

    /*
    Method AddConnector

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddConnector(Office::MsoConnectorType Type, double BeginX, double BeginY, double EndX, double EndY);

    /*
    Method AddCurve

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddCurve(const QVariant& SafeArrayOfPoints);

    /*
    Method AddLabel

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddLabel(Office::MsoTextOrientation Orientation, double Left, double Top, double Width, double Height);

    /*
    Method AddLine

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddLine(double BeginX, double BeginY, double EndX, double EndY);

    /*
    Method AddPicture

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddPicture(const QString& FileName, Office::MsoTriState LinkToFile, Office::MsoTriState SaveWithDocument, double Left, double Top);

    /*
    Method AddPicture

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddPicture(const QString& FileName, Office::MsoTriState LinkToFile, Office::MsoTriState SaveWithDocument, double Left, double Top, double Width);

    /*
    Method AddPicture

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddPicture(const QString& FileName, Office::MsoTriState LinkToFile, Office::MsoTriState SaveWithDocument, double Left, double Top, double Width, double Height);

    /*
    Method AddPolyline

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddPolyline(const QVariant& SafeArrayOfPoints);

    /*
    Method AddShape

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddShape(Office::MsoAutoShapeType Type, double Left, double Top, double Width, double Height);

    /*
    Method AddTextEffect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddTextEffect(Office::MsoPresetTextEffect PresetTextEffect, const QString& Text, const QString& FontName, double FontSize, Office::MsoTriState FontBold, Office::MsoTriState FontItalic, double Left, double Top);

    /*
    Method AddTextbox

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* AddTextbox(Office::MsoTextOrientation Orientation, double Left, double Top, double Width, double Height);

    /*
    Method BuildFreeform

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::FreeformBuilder* BuildFreeform(Office::MsoEditingType EditingType, double X1, double Y1);

    /*
    Method Item

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::Shape* Item(const QVariant& Index);

    /*
    Method Range

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::ShapeRange* Range(const QVariant& Index);

    /*
    Method SelectAll

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SelectAll();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT OfficeDataSourceObject : public QAxObject
{
public:
    OfficeDataSourceObject(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Columns

    For more information, see help context 232004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Columns() const; //Returns the value of Columns

    /*
    Property ConnectString

    For more information, see help context 232001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ConnectString() const; //Returns the value of ConnectString
    inline void SetConnectString(const QString& value); //Sets the value of the ConnectString property

    /*
    Property DataSource

    For more information, see help context 232003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString DataSource() const; //Returns the value of DataSource
    inline void SetDataSource(const QString& value); //Sets the value of the DataSource property

    /*
    Property Filters

    For more information, see help context 232010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Filters() const; //Returns the value of Filters

    /*
    Property RowCount

    For more information, see help context 232005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int RowCount() const; //Returns the value of RowCount

    /*
    Property Table

    For more information, see help context 232002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Table() const; //Returns the value of Table
    inline void SetTable(const QString& value); //Sets the value of the Table property

    /*
    Method ApplyFilter

    For more information, see help context 232009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ApplyFilter();

    /*
    Method Move

    For more information, see help context 232006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Move(Office::MsoMoveRow MsoMoveRow);

    /*
    Method Move

    For more information, see help context 232006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Move(Office::MsoMoveRow MsoMoveRow, int RowNbr);

    /*
    Method Open

    For more information, see help context 232007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Open();

    /*
    Method Open

    For more information, see help context 232007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Open(const QString& bstrSrc);

    /*
    Method Open

    For more information, see help context 232007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Open(const QString& bstrSrc, const QString& bstrConnect);

    /*
    Method Open

    For more information, see help context 232007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Open(const QString& bstrSrc, const QString& bstrConnect, const QString& bstrTable);

    /*
    Method Open

    For more information, see help context 232007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Open(const QString& bstrSrc, const QString& bstrConnect, const QString& bstrTable, int fOpenExclusive);

    /*
    Method Open

    For more information, see help context 232007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Open(const QString& bstrSrc, const QString& bstrConnect, const QString& bstrTable, int fOpenExclusive, int fNeverPrompt);

    /*
    Method SetSortOrder

    For more information, see help context 232008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetSortOrder(const QString& SortField1);

    /*
    Method SetSortOrder

    For more information, see help context 232008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetSortOrder(const QString& SortField1, bool SortAscending1);

    /*
    Method SetSortOrder

    For more information, see help context 232008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetSortOrder(const QString& SortField1, bool SortAscending1, const QString& SortField2);

    /*
    Method SetSortOrder

    For more information, see help context 232008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetSortOrder(const QString& SortField1, bool SortAscending1, const QString& SortField2, bool SortAscending2);

    /*
    Method SetSortOrder

    For more information, see help context 232008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetSortOrder(const QString& SortField1, bool SortAscending1, const QString& SortField2, bool SortAscending2, const QString& SortField3);

    /*
    Method SetSortOrder

    For more information, see help context 232008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetSortOrder(const QString& SortField1, bool SortAscending1, const QString& SortField2, bool SortAscending2, const QString& SortField3, bool SortAscending3);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ODSOColumn : public QAxObject
{
public:
    ODSOColumn(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Index

    For more information, see help context 233001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property Name

    For more information, see help context 233002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 233003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Value

    For more information, see help context 233004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Value() const; //Returns the value of Value

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ODSOColumns : public QAxObject
{
public:
    ODSOColumns(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 234001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 234002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Method Item

    For more information, see help context 234003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Item(const QVariant& varIndex);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ODSOFilter : public QAxObject
{
public:
    ODSOFilter(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Column

    For more information, see help context 240003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Column() const; //Returns the value of Column
    inline void SetColumn(const QString& value); //Sets the value of the Column property

    /*
    Property CompareTo

    For more information, see help context 240005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString CompareTo() const; //Returns the value of CompareTo
    inline void SetCompareTo(const QString& value); //Sets the value of the CompareTo property

    /*
    Property Comparison

    For more information, see help context 240004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoFilterComparison Comparison() const; //Returns the value of Comparison
    inline void SetComparison(Office::MsoFilterComparison value); //Sets the value of the Comparison property

    /*
    Property Conjunction

    For more information, see help context 240006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoFilterConjunction Conjunction() const; //Returns the value of Conjunction
    inline void SetConjunction(Office::MsoFilterConjunction value); //Sets the value of the Conjunction property

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Index

    For more information, see help context 240001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property Parent

    For more information, see help context 240002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ODSOFilters : public QAxObject
{
public:
    ODSOFilters(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 241001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Parent

    For more information, see help context 241002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Method Add

    For more information, see help context 241004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Add(const QString& Column, Office::MsoFilterComparison Comparison, Office::MsoFilterConjunction Conjunction);

    /*
    Method Add

    For more information, see help context 241004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Add(const QString& Column, Office::MsoFilterComparison Comparison, Office::MsoFilterConjunction Conjunction, const QString& bstrCompareTo);

    /*
    Method Add

    For more information, see help context 241004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Add(const QString& Column, Office::MsoFilterComparison Comparison, Office::MsoFilterConjunction Conjunction, const QString& bstrCompareTo, bool DeferUpdate);

    /*
    Method Delete

    For more information, see help context 241005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(int Index);

    /*
    Method Delete

    For more information, see help context 241005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(int Index, bool DeferUpdate);

    /*
    Method Item

    For more information, see help context 241003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT NewFile : public QAxObject
{
public:
    NewFile(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Method Add

    For more information, see help context 235001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Add(const QString& FileName);

    /*
    Method Add

    For more information, see help context 235001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Add(const QString& FileName, const QVariant& Section);

    /*
    Method Add

    For more information, see help context 235001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Add(const QString& FileName, const QVariant& Section, const QVariant& DisplayName);

    /*
    Method Add

    For more information, see help context 235001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Add(const QString& FileName, const QVariant& Section, const QVariant& DisplayName, const QVariant& Action);

    /*
    Method Remove

    For more information, see help context 235002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Remove(const QString& FileName);

    /*
    Method Remove

    For more information, see help context 235002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Remove(const QString& FileName, const QVariant& Section);

    /*
    Method Remove

    For more information, see help context 235002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Remove(const QString& FileName, const QVariant& Section, const QVariant& DisplayName);

    /*
    Method Remove

    For more information, see help context 235002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Remove(const QString& FileName, const QVariant& Section, const QVariant& DisplayName, const QVariant& Action);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT WebComponent : public QAxObject
{
public:
    WebComponent(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property HTML

    For more information, see help context 236004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString HTML() const; //Returns the value of HTML
    inline void SetHTML(const QString& value); //Sets the value of the HTML property

    /*
    Property Height

    For more information, see help context 236010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property Name

    For more information, see help context 236006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Shape

    For more information, see help context 236001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Shape() const; //Returns the value of Shape

    /*
    Property URL

    For more information, see help context 236002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString URL() const; //Returns the value of URL
    inline void SetURL(const QString& value); //Sets the value of the URL property

    /*
    Property Width

    For more information, see help context 236008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Method Commit

    For more information, see help context 236014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Commit();

    /*
    Method Revert

    For more information, see help context 236015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Revert();

    /*
    Method SetPlaceHolderGraphic

    For more information, see help context 236012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetPlaceHolderGraphic(const QString& PlaceHolderGraphic);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT WebComponentWindowExternal : public QAxObject
{
public:
    WebComponentWindowExternal(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 237004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property ApplicationName

    For more information, see help context 237002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ApplicationName() const; //Returns the value of ApplicationName

    /*
    Property ApplicationVersion

    For more information, see help context 237003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int ApplicationVersion() const; //Returns the value of ApplicationVersion

    /*
    Property InterfaceVersion

    For more information, see help context 237001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int InterfaceVersion() const; //Returns the value of InterfaceVersion

    /*
    Property WebComponent

    For more information, see help context 237006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::WebComponent* WebComponent() const; //Returns the value of WebComponent

    /*
    Method CloseWindow

    For more information, see help context 237005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CloseWindow();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT WebComponentFormat : public QAxObject
{
public:
    WebComponentFormat(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 237001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property HTML

    For more information, see help context 237005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString HTML() const; //Returns the value of HTML
    inline void SetHTML(const QString& value); //Sets the value of the HTML property

    /*
    Property Height

    For more information, see help context 237011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property Name

    For more information, see help context 237007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 237002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PreviewGraphic

    For more information, see help context 237013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString PreviewGraphic() const; //Returns the value of PreviewGraphic
    inline void SetPreviewGraphic(const QString& value); //Sets the value of the PreviewGraphic property

    /*
    Property URL

    For more information, see help context 237003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString URL() const; //Returns the value of URL
    inline void SetURL(const QString& value); //Sets the value of the URL property

    /*
    Property Width

    For more information, see help context 237009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Method LaunchPropertiesWindow

    For more information, see help context 237015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void LaunchPropertiesWindow();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ILicWizExternal : public QAxObject
{
public:
    ILicWizExternal(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AnimationEnabled

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int AnimationEnabled() const; //Returns the value of AnimationEnabled

    /*
    Property Context

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Context() const; //Returns the value of Context

    /*
    Property CountryInfo

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString CountryInfo() const; //Returns the value of CountryInfo

    /*
    Property CurrentHelpId

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int CurrentHelpId() const; //Returns the value of CurrentHelpId
    inline void SetCurrentHelpId(int value); //Sets the value of the CurrentHelpId property

    /*
    Property LicAgent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* LicAgent() const; //Returns the value of LicAgent

    /*
    Property OfficeOnTheWebUrl

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString OfficeOnTheWebUrl() const; //Returns the value of OfficeOnTheWebUrl

    /*
    Property Validator

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Validator() const; //Returns the value of Validator

    /*
    Property WizardTitle

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString WizardTitle() const; //Returns the value of WizardTitle
    inline void SetWizardTitle(const QString& value); //Sets the value of the WizardTitle property

    /*
    Property WizardVisible

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int WizardVisible() const; //Returns the value of WizardVisible
    inline void SetWizardVisible(int value); //Sets the value of the WizardVisible property

    /*
    Method DepositPidKey

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int DepositPidKey(const QString& bstrKey, int fMORW);

    /*
    Method DisableVORWReminder

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void DisableVORWReminder(int BPC);

    /*
    Method FormatDate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString FormatDate(const QDateTime& date);

    /*
    Method FormatDate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString FormatDate(const QDateTime& date, const QString& pFormat);

    /*
    Method GetConnectedState

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int GetConnectedState();

    /*
    Method InternetDisconnect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void InternetDisconnect();

    /*
    Method InvokeDateTimeApplet

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void InvokeDateTimeApplet();

    /*
    Method MsoAlert

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int MsoAlert(const QString& bstrText, const QString& bstrButtons, const QString& bstrIcon);

    /*
    Method OpenInDefaultBrowser

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void OpenInDefaultBrowser(const QString& bstrUrl);

    /*
    Method PrintHtmlDocument

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void PrintHtmlDocument(IUnknown* punkHtmlDoc);

    /*
    Method ResetPID

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ResetPID();

    /*
    Method ResignDpc

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ResignDpc(const QString& bstrProductCode);

    /*
    Method SaveReceipt

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString SaveReceipt(const QString& bstrReceipt);

    /*
    Method SetDialogSize

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetDialogSize(int dx, int dy);

    /*
    Method ShowHelp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ShowHelp();

    /*
    Method ShowHelp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ShowHelp(QVariant& pvarId);

    /*
    Method SortSelectOptions

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SortSelectOptions(IDispatch* pdispSelect);

    /*
    Method Terminate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Terminate();

    /*
    Method VerifyClock

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int VerifyClock(int lMode);

    /*
    Method WriteLog

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void WriteLog(const QString& bstrMessage);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ILicValidator : public QAxObject
{
public:
    ILicValidator(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Products

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant Products() const; //Returns the value of Products

    /*
    Property Selection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Selection() const; //Returns the value of Selection
    inline void SetSelection(int value); //Sets the value of the Selection property

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT ILicAgent : public QAxObject
{
public:
    ILicAgent(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method AsyncProcessCCRenewalLicenseRequest

    method AsyncProcessCCRenewalLicenseRequest
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AsyncProcessCCRenewalLicenseRequest();

    /*
    Method AsyncProcessCCRenewalPriceRequest

    method AsyncProcessCCRenewalPriceRequest
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AsyncProcessCCRenewalPriceRequest();

    /*
    Method AsyncProcessDroppedLicenseRequest

    method AsyncProcessDroppedLicenseRequest
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AsyncProcessDroppedLicenseRequest();

    /*
    Method AsyncProcessHandshakeRequest

    method AsyncProcessHandshakeRequest
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AsyncProcessHandshakeRequest(int bReviseCustInfo);

    /*
    Method AsyncProcessNewLicenseRequest

    method AsyncProcessNewLicenseRequest
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AsyncProcessNewLicenseRequest();

    /*
    Method AsyncProcessReissueLicenseRequest

    method AsyncProcessReissueLicenseRequest
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AsyncProcessReissueLicenseRequest();

    /*
    Method AsyncProcessRetailRenewalLicenseRequest

    method AsyncProcessRetailRenewalLicenseRequest
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AsyncProcessRetailRenewalLicenseRequest();

    /*
    Method AsyncProcessReviseCustInfoRequest

    method AsyncProcessReviseCustInfoRequest
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AsyncProcessReviseCustInfoRequest();

    /*
    Method CancelAsyncProcessRequest

    method CancelAsyncProcessRequest
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CancelAsyncProcessRequest(int bIsLicenseRequest);

    /*
    Method CheckSystemClock

    method CheckSystemClock
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline uint CheckSystemClock();

    /*
    Method DepositConfirmationId

    method DepositConfirmationId
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline uint DepositConfirmationId(const QString& bstrVal);

    /*
    Method DisplaySSLCert

    method DisplaySSLCert
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline uint DisplaySSLCert();

    /*
    Method GenerateInstallationId

    method GenerateInstallationId
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GenerateInstallationId();

    /*
    Method GetAddress1

    method GetAddress1
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetAddress1();

    /*
    Method GetAddress2

    method GetAddress2
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetAddress2();

    /*
    Method GetAsyncProcessReturnCode

    method GetAsyncProcessReturnCode
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline uint GetAsyncProcessReturnCode();

    /*
    Method GetBackendErrorMsg

    method GetBackendErrorMsg
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetBackendErrorMsg();

    /*
    Method GetBillingAddress1

    method GetBillingAddress1
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetBillingAddress1();

    /*
    Method GetBillingAddress2

    method GetBillingAddress2
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetBillingAddress2();

    /*
    Method GetBillingCity

    method GetBillingCity
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetBillingCity();

    /*
    Method GetBillingCountryCode

    method GetBillingCountryCode
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetBillingCountryCode();

    /*
    Method GetBillingFirstName

    method GetBillingFirstName
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetBillingFirstName();

    /*
    Method GetBillingLastName

    method GetBillingLastName
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetBillingLastName();

    /*
    Method GetBillingPhone

    method GetBillingPhone
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetBillingPhone();

    /*
    Method GetBillingState

    method GetBillingState
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetBillingState();

    /*
    Method GetBillingZip

    method GetBillingZip
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetBillingZip();

    /*
    Method GetCCRenewalExpiryDate

    method GetCCRenewalExpiryDate
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QDateTime GetCCRenewalExpiryDate();

    /*
    Method GetCity

    method GetCity
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetCity();

    /*
    Method GetCountryCode

    method GetCountryCode
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetCountryCode();

    /*
    Method GetCountryDesc

    method GetCountryDesc
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetCountryDesc();

    /*
    Method GetCreditCardCode

    method GetCreditCardCode
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetCreditCardCode(uint dwIndex);

    /*
    Method GetCreditCardCount

    method GetCreditCardCount
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline uint GetCreditCardCount();

    /*
    Method GetCreditCardExpiryMonth

    method GetCreditCardExpiryMonth
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline uint GetCreditCardExpiryMonth();

    /*
    Method GetCreditCardExpiryYear

    method GetCreditCardExpiryYear
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline uint GetCreditCardExpiryYear();

    /*
    Method GetCreditCardName

    method GetCreditCardName
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetCreditCardName(uint dwIndex);

    /*
    Method GetCreditCardNumber

    method GetCreditCardNumber
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetCreditCardNumber();

    /*
    Method GetCreditCardType

    method GetCreditCardType
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetCreditCardType();

    /*
    Method GetCurrencyDescription

    method GetCurrencyDescription
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetCurrencyDescription(uint dwCurrencyIndex);

    /*
    Method GetCurrencyOption

    method GetCurrencyOption
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline uint GetCurrencyOption();

    /*
    Method GetCurrentExpiryDate

    method GetCurrentExpiryDate
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QDateTime GetCurrentExpiryDate();

    /*
    Method GetDisconnectOption

    method GetDisconnectOption
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int GetDisconnectOption();

    /*
    Method GetEmail

    method GetEmail
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetEmail();

    /*
    Method GetEndOfLifeHtmlText

    method GetEndOfLifeHtmlText
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetEndOfLifeHtmlText();

    /*
    Method GetExistingExpiryDate

    method GetExistingExpiryDate
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QDateTime GetExistingExpiryDate();

    /*
    Method GetFirstName

    method GetFirstName
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetFirstName();

    /*
    Method GetInvoiceText

    method GetInvoiceText
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetInvoiceText();

    /*
    Method GetIsoLanguage

    method GetIsoLanguage
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline uint GetIsoLanguage();

    /*
    Method GetLastName

    method GetLastName
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetLastName();

    /*
    Method GetMSOffer

    method GetMSOffer
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetMSOffer();

    /*
    Method GetMSUpdate

    method GetMSUpdate
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetMSUpdate();

    /*
    Method GetNewExpiryDate

    method GetNewExpiryDate
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QDateTime GetNewExpiryDate();

    /*
    Method GetOrgName

    method GetOrgName
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetOrgName();

    /*
    Method GetOtherOffer

    method GetOtherOffer
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetOtherOffer();

    /*
    Method GetPhone

    method GetPhone
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetPhone();

    /*
    Method GetPriceItemCount

    method GetPriceItemCount
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline uint GetPriceItemCount();

    /*
    Method GetPriceItemLabel

    method GetPriceItemLabel
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetPriceItemLabel(uint dwIndex);

    /*
    Method GetPriceItemValue

    method GetPriceItemValue
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetPriceItemValue(uint dwCurrencyIndex, uint dwIndex);

    /*
    Method GetState

    method GetState
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetState();

    /*
    Method GetVATLabel

    method GetVATLabel
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetVATLabel(const QString& bstrCountryCode);

    /*
    Method GetVATNumber

    method GetVATNumber
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetVATNumber();

    /*
    Method GetZip

    method GetZip
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString GetZip();

    /*
    Method Initialize

    method Initialize
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline uint Initialize(uint dwBPC, uint dwMode, const QString& bstrLicSource);

    /*
    Method IsCCRenewalCountry

    method IsCCRenewalCountry
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int IsCCRenewalCountry(const QString& bstrCountryCode);

    /*
    Method IsUpgradeAvailable

    method IsUpgradeAvailable
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int IsUpgradeAvailable();

    /*
    Method SaveBillingInfo

    method SaveBillingInfo
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline uint SaveBillingInfo(int bSave);

    /*
    Method SetAddress1

    method SetAddress1
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetAddress1(const QString& bstrNewVal);

    /*
    Method SetAddress2

    method SetAddress2
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetAddress2(const QString& bstrNewVal);

    /*
    Method SetBillingAddress1

    method SetBillingAddress1
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetBillingAddress1(const QString& bstrNewVal);

    /*
    Method SetBillingAddress2

    method SetBillingAddress2
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetBillingAddress2(const QString& bstrNewVal);

    /*
    Method SetBillingCity

    method SetBillingCity
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetBillingCity(const QString& bstrNewVal);

    /*
    Method SetBillingCountryCode

    method SetBillingCountryCode
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetBillingCountryCode(const QString& bstrNewVal);

    /*
    Method SetBillingFirstName

    method SetBillingFirstName
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetBillingFirstName(const QString& bstrNewVal);

    /*
    Method SetBillingLastName

    method SetBillingLastName
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetBillingLastName(const QString& bstrNewVal);

    /*
    Method SetBillingPhone

    method SetBillingPhone
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetBillingPhone(const QString& bstrNewVal);

    /*
    Method SetBillingState

    method SetBillingState
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetBillingState(const QString& bstrNewVal);

    /*
    Method SetBillingZip

    method SetBillingZip
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetBillingZip(const QString& bstrNewVal);

    /*
    Method SetCity

    method SetCity
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetCity(const QString& bstrNewVal);

    /*
    Method SetCountryCode

    method SetCountryCode
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetCountryCode(const QString& bstrNewVal);

    /*
    Method SetCountryDesc

    method SetCountryDesc
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetCountryDesc(const QString& bstrNewVal);

    /*
    Method SetCreditCardExpiryMonth

    method SetCreditCardExpiryMonth
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetCreditCardExpiryMonth(uint dwCCMonth);

    /*
    Method SetCreditCardExpiryYear

    method SetCreditCardExpiryYear
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetCreditCardExpiryYear(uint dwCCYear);

    /*
    Method SetCreditCardNumber

    method SetCreditCardNumber
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetCreditCardNumber(const QString& bstrCCNumber);

    /*
    Method SetCreditCardType

    method SetCreditCardType
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetCreditCardType(const QString& bstrCCCode);

    /*
    Method SetCurrencyOption

    method SetCurrencyOption
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetCurrencyOption(uint dwCurrencyOption);

    /*
    Method SetDisconnectOption

    method SetDisconnectOption
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetDisconnectOption(int bNewVal);

    /*
    Method SetEmail

    method SetEmail
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetEmail(const QString& bstrNewVal);

    /*
    Method SetFirstName

    method SetFirstName
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetFirstName(const QString& bstrNewVal);

    /*
    Method SetIsoLanguage

    method SetIsoLanguage
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetIsoLanguage(uint dwNewVal);

    /*
    Method SetLastName

    method SetLastName
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetLastName(const QString& bstrNewVal);

    /*
    Method SetMSOffer

    method SetMSOffer
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetMSOffer(const QString& bstrNewVal);

    /*
    Method SetMSUpdate

    method SetMSUpdate
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetMSUpdate(const QString& bstrNewVal);

    /*
    Method SetOrgName

    method SetOrgName
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetOrgName(const QString& bstrNewVal);

    /*
    Method SetOtherOffer

    method SetOtherOffer
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetOtherOffer(const QString& bstrNewVal);

    /*
    Method SetPhone

    method SetPhone
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetPhone(const QString& bstrNewVal);

    /*
    Method SetState

    method SetState
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetState(const QString& bstrNewVal);

    /*
    Method SetVATNumber

    method SetVATNumber
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetVATNumber(const QString& bstrVATNumber);

    /*
    Method SetZip

    method SetZip
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetZip(const QString& bstrNewVal);

    /*
    Method VerifyCheckDigits

    method VerifyCheckDigits
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int VerifyCheckDigits(const QString& bstrCIDIID);

    /*
    Method WantUpgrade

    method WantUpgrade
For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void WantUpgrade(int bWantUpgrade);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT IMsoEServicesDialog : public QAxObject
{
public:
    IMsoEServicesDialog(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property ApplicationName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ApplicationName() const; //Returns the value of ApplicationName

    /*
    Property ClipArt

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* ClipArt() const; //Returns the value of ClipArt

    /*
    Property WebComponent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* WebComponent() const; //Returns the value of WebComponent

    /*
    Method AddTrustedDomain

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AddTrustedDomain(const QString& Domain);

    /*
    Method Close

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Close();

    /*
    Method Close

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Close(bool ApplyWebComponentChanges);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT WebComponentProperties : public QAxObject
{
public:
    WebComponentProperties(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property HTML

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString HTML() const; //Returns the value of HTML
    inline void SetHTML(const QString& value); //Sets the value of the HTML property

    /*
    Property Height

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property Name

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property PreviewGraphic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString PreviewGraphic() const; //Returns the value of PreviewGraphic
    inline void SetPreviewGraphic(const QString& value); //Sets the value of the PreviewGraphic property

    /*
    Property PreviewHTML

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString PreviewHTML() const; //Returns the value of PreviewHTML
    inline void SetPreviewHTML(const QString& value); //Sets the value of the PreviewHTML property

    /*
    Property Shape

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Shape() const; //Returns the value of Shape

    /*
    Property Tag

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Tag() const; //Returns the value of Tag
    inline void SetTag(const QString& value); //Sets the value of the Tag property

    /*
    Property URL

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString URL() const; //Returns the value of URL
    inline void SetURL(const QString& value); //Sets the value of the URL property

    /*
    Property Width

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SmartDocument : public QAxObject
{
public:
    SmartDocument(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property SolutionID

    For more information, see help context 262001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString SolutionID() const; //Returns the value of SolutionID
    inline void SetSolutionID(const QString& value); //Sets the value of the SolutionID property

    /*
    Property SolutionURL

    For more information, see help context 262002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString SolutionURL() const; //Returns the value of SolutionURL
    inline void SetSolutionURL(const QString& value); //Sets the value of the SolutionURL property

    /*
    Method PickSolution

    For more information, see help context 262003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void PickSolution();

    /*
    Method PickSolution

    For more information, see help context 262003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void PickSolution(bool ConsiderAllSchemas);

    /*
    Method RefreshPane

    For more information, see help context 262004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void RefreshPane();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SharedWorkspaceMember : public QAxObject
{
public:
    SharedWorkspaceMember(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property DomainName

    For more information, see help context 272001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString DomainName() const; //Returns the value of DomainName

    /*
    Property Email

    For more information, see help context 272003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Email() const; //Returns the value of Email

    /*
    Property Id

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Id() const; //Returns the value of Id

    /*
    Property Name

    For more information, see help context 272002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 272005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Method Delete

    For more information, see help context 272004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SharedWorkspaceMembers : public QAxObject
{
public:
    SharedWorkspaceMembers(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 273002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property ItemCountExceeded

    For more information, see help context 273005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool ItemCountExceeded() const; //Returns the value of ItemCountExceeded

    /*
    Property Parent

    For more information, see help context 273004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 273003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceMember* Add(const QString& Email, const QString& DomainName, const QString& DisplayName);

    /*
    Method Add

    For more information, see help context 273003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceMember* Add(const QString& Email, const QString& DomainName, const QString& DisplayName, const QVariant& Role);

    /*
    Method Item

    For more information, see help context 273001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceMember* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SharedWorkspaceTask : public QAxObject
{
public:
    SharedWorkspaceTask(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property AssignedTo

    For more information, see help context 264002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString AssignedTo() const; //Returns the value of AssignedTo
    inline void SetAssignedTo(const QString& value); //Sets the value of the AssignedTo property

    /*
    Property CreatedBy

    For more information, see help context 264007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString CreatedBy() const; //Returns the value of CreatedBy

    /*
    Property CreatedDate

    For more information, see help context 264008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant CreatedDate() const; //Returns the value of CreatedDate

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Description

    For more information, see help context 264005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Description() const; //Returns the value of Description
    inline void SetDescription(const QString& value); //Sets the value of the Description property

    /*
    Property DueDate

    For more information, see help context 264006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant DueDate() const; //Returns the value of DueDate
    inline void SetDueDate(const QVariant& value); //Sets the value of the DueDate property

    /*
    Property ModifiedBy

    For more information, see help context 264009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ModifiedBy() const; //Returns the value of ModifiedBy

    /*
    Property ModifiedDate

    For more information, see help context 264010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant ModifiedDate() const; //Returns the value of ModifiedDate

    /*
    Property Parent

    For more information, see help context 263013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Priority

    For more information, see help context 264004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoSharedWorkspaceTaskPriority Priority() const; //Returns the value of Priority
    inline void SetPriority(Office::MsoSharedWorkspaceTaskPriority value); //Sets the value of the Priority property

    /*
    Property Status

    For more information, see help context 264003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoSharedWorkspaceTaskStatus Status() const; //Returns the value of Status
    inline void SetStatus(Office::MsoSharedWorkspaceTaskStatus value); //Sets the value of the Status property

    /*
    Property Title

    For more information, see help context 264001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Title() const; //Returns the value of Title
    inline void SetTitle(const QString& value); //Sets the value of the Title property

    /*
    Method Delete

    For more information, see help context 263012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Save

    For more information, see help context 2640011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SharedWorkspaceTasks : public QAxObject
{
public:
    SharedWorkspaceTasks(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 265002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property ItemCountExceeded

    For more information, see help context 265005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool ItemCountExceeded() const; //Returns the value of ItemCountExceeded

    /*
    Property Parent

    For more information, see help context 265004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 265003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceTask* Add(const QString& Title);

    /*
    Method Add

    For more information, see help context 265003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceTask* Add(const QString& Title, const QVariant& Status);

    /*
    Method Add

    For more information, see help context 265003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceTask* Add(const QString& Title, const QVariant& Status, const QVariant& Priority);

    /*
    Method Add

    For more information, see help context 265003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceTask* Add(const QString& Title, const QVariant& Status, const QVariant& Priority, const QVariant& Assignee);

    /*
    Method Add

    For more information, see help context 265003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceTask* Add(const QString& Title, const QVariant& Status, const QVariant& Priority, const QVariant& Assignee, const QVariant& Description);

    /*
    Method Add

    For more information, see help context 265003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceTask* Add(const QString& Title, const QVariant& Status, const QVariant& Priority, const QVariant& Assignee, const QVariant& Description, const QVariant& DueDate);

    /*
    Method Item

    For more information, see help context 265001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceTask* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SharedWorkspaceFile : public QAxObject
{
public:
    SharedWorkspaceFile(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property CreatedBy

    For more information, see help context 266002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString CreatedBy() const; //Returns the value of CreatedBy

    /*
    Property CreatedDate

    For more information, see help context 266003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant CreatedDate() const; //Returns the value of CreatedDate

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property ModifiedBy

    For more information, see help context 266004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ModifiedBy() const; //Returns the value of ModifiedBy

    /*
    Property ModifiedDate

    For more information, see help context 266005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant ModifiedDate() const; //Returns the value of ModifiedDate

    /*
    Property Parent

    For more information, see help context 266007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property URL

    For more information, see help context 266001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString URL() const; //Returns the value of URL

    /*
    Method Delete

    For more information, see help context 266006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SharedWorkspaceFiles : public QAxObject
{
public:
    SharedWorkspaceFiles(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 267002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property ItemCountExceeded

    For more information, see help context 267005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool ItemCountExceeded() const; //Returns the value of ItemCountExceeded

    /*
    Property Parent

    For more information, see help context 267004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 267003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceFile* Add(const QString& FileName);

    /*
    Method Add

    For more information, see help context 267003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceFile* Add(const QString& FileName, const QVariant& ParentFolder);

    /*
    Method Add

    For more information, see help context 267003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceFile* Add(const QString& FileName, const QVariant& ParentFolder, const QVariant& OverwriteIfFileAlreadyExists);

    /*
    Method Add

    For more information, see help context 267003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceFile* Add(const QString& FileName, const QVariant& ParentFolder, const QVariant& OverwriteIfFileAlreadyExists, const QVariant& KeepInSync);

    /*
    Method Item

    For more information, see help context 267001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceFile* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SharedWorkspaceFolder : public QAxObject
{
public:
    SharedWorkspaceFolder(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property FolderName

    For more information, see help context 268001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString FolderName() const; //Returns the value of FolderName

    /*
    Property Parent

    For more information, see help context 268007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Method Delete

    For more information, see help context 268006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Delete

    For more information, see help context 268006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(const QVariant& DeleteEventIfFolderContainsFiles);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SharedWorkspaceFolders : public QAxObject
{
public:
    SharedWorkspaceFolders(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 269002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property ItemCountExceeded

    For more information, see help context 269005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool ItemCountExceeded() const; //Returns the value of ItemCountExceeded

    /*
    Property Parent

    For more information, see help context 269004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 269003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceFolder* Add(const QString& FolderName);

    /*
    Method Add

    For more information, see help context 269003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceFolder* Add(const QString& FolderName, const QVariant& ParentFolder);

    /*
    Method Item

    For more information, see help context 269001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceFolder* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SharedWorkspaceLink : public QAxObject
{
public:
    SharedWorkspaceLink(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property CreatedBy

    For more information, see help context 270004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString CreatedBy() const; //Returns the value of CreatedBy

    /*
    Property CreatedDate

    For more information, see help context 270005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant CreatedDate() const; //Returns the value of CreatedDate

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Description

    For more information, see help context 270002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Description() const; //Returns the value of Description
    inline void SetDescription(const QString& value); //Sets the value of the Description property

    /*
    Property ModifiedBy

    For more information, see help context 270006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ModifiedBy() const; //Returns the value of ModifiedBy

    /*
    Property ModifiedDate

    For more information, see help context 270007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant ModifiedDate() const; //Returns the value of ModifiedDate

    /*
    Property Notes

    For more information, see help context 270003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Notes() const; //Returns the value of Notes
    inline void SetNotes(const QString& value); //Sets the value of the Notes property

    /*
    Property Parent

    For more information, see help context 270010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property URL

    For more information, see help context 270001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString URL() const; //Returns the value of URL
    inline void SetURL(const QString& value); //Sets the value of the URL property

    /*
    Method Delete

    For more information, see help context 270009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Save

    For more information, see help context 270008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SharedWorkspaceLinks : public QAxObject
{
public:
    SharedWorkspaceLinks(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 271002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property ItemCountExceeded

    For more information, see help context 271005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool ItemCountExceeded() const; //Returns the value of ItemCountExceeded

    /*
    Property Parent

    For more information, see help context 271004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 271003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceLink* Add(const QString& URL);

    /*
    Method Add

    For more information, see help context 271003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceLink* Add(const QString& URL, const QVariant& Description);

    /*
    Method Add

    For more information, see help context 271003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceLink* Add(const QString& URL, const QVariant& Description, const QVariant& Notes);

    /*
    Method Item

    For more information, see help context 271001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceLink* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT SharedWorkspace : public QAxObject
{
public:
    SharedWorkspace(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Connected

    For more information, see help context 276012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Connected() const; //Returns the value of Connected

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Files

    For more information, see help context 276004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceFiles* Files() const; //Returns the value of Files

    /*
    Property Folders

    For more information, see help context 276005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceFolders* Folders() const; //Returns the value of Folders

    /*
    Property LastRefreshed

    For more information, see help context 276013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant LastRefreshed() const; //Returns the value of LastRefreshed

    /*
    Property Links

    For more information, see help context 276006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceLinks* Links() const; //Returns the value of Links

    /*
    Property Members

    For more information, see help context 276002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceMembers* Members() const; //Returns the value of Members

    /*
    Property Name

    For more information, see help context 276001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 276010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SourceURL

    For more information, see help context 276014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString SourceURL() const; //Returns the value of SourceURL
    inline void SetSourceURL(const QString& value); //Sets the value of the SourceURL property

    /*
    Property Tasks

    For more information, see help context 276003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::SharedWorkspaceTasks* Tasks() const; //Returns the value of Tasks

    /*
    Property URL

    For more information, see help context 276011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString URL() const; //Returns the value of URL

    /*
    Method CreateNew

    For more information, see help context 276008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CreateNew();

    /*
    Method CreateNew

    For more information, see help context 276008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CreateNew(const QVariant& URL);

    /*
    Method CreateNew

    For more information, see help context 276008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CreateNew(const QVariant& URL, const QVariant& Name);

    /*
    Method Delete

    For more information, see help context 276009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Disconnect

    For more information, see help context 276016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Disconnect();

    /*
    Method Refresh

    For more information, see help context 276007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Refresh();

    /*
    Method RemoveDocument

    For more information, see help context 276015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void RemoveDocument();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT Sync : public QAxObject
{
public:
    Sync(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property ErrorType

    For more information, see help context 277005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoSyncErrorType ErrorType() const; //Returns the value of ErrorType

    /*
    Property LastSyncTime

    For more information, see help context 277003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant LastSyncTime() const; //Returns the value of LastSyncTime

    /*
    Property Parent

    For more information, see help context 277015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Status

    For more information, see help context 277001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoSyncStatusType Status() const; //Returns the value of Status

    /*
    Property WorkspaceLastChangedBy

    For more information, see help context 277002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString WorkspaceLastChangedBy() const; //Returns the value of WorkspaceLastChangedBy

    /*
    Method GetUpdate

    For more information, see help context 277007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void GetUpdate();

    /*
    Method OpenVersion

    For more information, see help context 277009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void OpenVersion(Office::MsoSyncVersionType SyncVersionType);

    /*
    Method PutUpdate

    For more information, see help context 277008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void PutUpdate();

    /*
    Method ResolveConflict

    For more information, see help context 277010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ResolveConflict(Office::MsoSyncConflictResolutionType SyncConflictResolution);

    /*
    Method Unsuspend

    For more information, see help context 277011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Unsuspend();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT DocumentLibraryVersion : public QAxObject
{
public:
    DocumentLibraryVersion(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Comments

    For more information, see help context 277021 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Comments() const; //Returns the value of Comments

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property Index

    For more information, see help context 277018 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property Modified

    For more information, see help context 277017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant Modified() const; //Returns the value of Modified

    /*
    Property ModifiedBy

    For more information, see help context 277020 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ModifiedBy() const; //Returns the value of ModifiedBy

    /*
    Property Parent

    For more information, see help context 277019 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Method Delete

    For more information, see help context 277022 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Open

    For more information, see help context 277023 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Open();

    /*
    Method Restore

    For more information, see help context 277024 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Restore();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT DocumentLibraryVersions : public QAxObject
{
public:
    DocumentLibraryVersions(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 277028 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property IsVersioningEnabled

    For more information, see help context 277030 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool IsVersioningEnabled() const; //Returns the value of IsVersioningEnabled

    /*
    Property Parent

    For more information, see help context 277029 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Item

    For more information, see help context 277027 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::DocumentLibraryVersion* Item(int lIndex);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT UserPermission : public QAxObject
{
public:
    UserPermission(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property ExpirationDate

    For more information, see help context 260003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant ExpirationDate() const; //Returns the value of ExpirationDate
    inline void SetExpirationDate(const QVariant& value); //Sets the value of the ExpirationDate property

    /*
    Property Parent

    For more information, see help context 260004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Permission

    For more information, see help context 260002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Permission() const; //Returns the value of Permission
    inline void SetPermission(int value); //Sets the value of the Permission property

    /*
    Property UserId

    For more information, see help context 260001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString UserId() const; //Returns the value of UserId

    /*
    Method Remove

    For more information, see help context 260005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Remove();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT Permission : public QAxObject
{
public:
    Permission(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 261002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property DocumentAuthor

    For more information, see help context 261013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString DocumentAuthor() const; //Returns the value of DocumentAuthor
    inline void SetDocumentAuthor(const QString& value); //Sets the value of the DocumentAuthor property

    /*
    Property EnableTrustedBrowser

    For more information, see help context 261003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool EnableTrustedBrowser() const; //Returns the value of EnableTrustedBrowser
    inline void SetEnableTrustedBrowser(bool value); //Sets the value of the EnableTrustedBrowser property

    /*
    Property Enabled

    For more information, see help context 261008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 261006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PermissionFromPolicy

    For more information, see help context 261014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool PermissionFromPolicy() const; //Returns the value of PermissionFromPolicy

    /*
    Property PolicyDescription

    For more information, see help context 261011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString PolicyDescription() const; //Returns the value of PolicyDescription

    /*
    Property PolicyName

    For more information, see help context 261010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString PolicyName() const; //Returns the value of PolicyName

    /*
    Property RequestPermissionURL

    For more information, see help context 261009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString RequestPermissionURL() const; //Returns the value of RequestPermissionURL
    inline void SetRequestPermissionURL(const QString& value); //Sets the value of the RequestPermissionURL property

    /*
    Property StoreLicenses

    For more information, see help context 261012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool StoreLicenses() const; //Returns the value of StoreLicenses
    inline void SetStoreLicenses(bool value); //Sets the value of the StoreLicenses property

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 261004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::UserPermission* Add(const QString& UserId);

    /*
    Method Add

    For more information, see help context 261004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::UserPermission* Add(const QString& UserId, const QVariant& Permission);

    /*
    Method Add

    For more information, see help context 261004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::UserPermission* Add(const QString& UserId, const QVariant& Permission, const QVariant& ExpirationDate);

    /*
    Method ApplyPolicy

    For more information, see help context 261005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ApplyPolicy(const QString& FileName);

    /*
    Method Item

    For more information, see help context 261001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::UserPermission* Item(const QVariant& Index);

    /*
    Method RemoveAll

    For more information, see help context 261007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void RemoveAll();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class OFFICE_EXPORT CommandBars : public QAxObject
{
public:
    CommandBars(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    CommandBars(_CommandBars *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ActionControl

    For more information, see help context 2001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* ActionControl() const; //Returns the value of ActionControl

    /*
    Property ActiveMenuBar

    For more information, see help context 2002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* ActiveMenuBar() const; //Returns the value of ActiveMenuBar

    /*
    Property AdaptiveMenus

    For more information, see help context 2013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool AdaptiveMenus() const; //Returns the value of AdaptiveMenus
    inline void SetAdaptiveMenus(bool value); //Sets the value of the AdaptiveMenus property

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property Count

    For more information, see help context 2004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property DisableAskAQuestionDropdown

    For more information, see help context 2017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool DisableAskAQuestionDropdown() const; //Returns the value of DisableAskAQuestionDropdown
    inline void SetDisableAskAQuestionDropdown(bool value); //Sets the value of the DisableAskAQuestionDropdown property

    /*
    Property DisableCustomize

    For more information, see help context 2016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool DisableCustomize() const; //Returns the value of DisableCustomize
    inline void SetDisableCustomize(bool value); //Sets the value of the DisableCustomize property

    /*
    Property DisplayFonts

    For more information, see help context 2015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool DisplayFonts() const; //Returns the value of DisplayFonts
    inline void SetDisplayFonts(bool value); //Sets the value of the DisplayFonts property

    /*
    Property DisplayKeysInTooltips

    For more information, see help context 2006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool DisplayKeysInTooltips() const; //Returns the value of DisplayKeysInTooltips
    inline void SetDisplayKeysInTooltips(bool value); //Sets the value of the DisplayKeysInTooltips property

    /*
    Property DisplayTooltips

    For more information, see help context 2005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool DisplayTooltips() const; //Returns the value of DisplayTooltips
    inline void SetDisplayTooltips(bool value); //Sets the value of the DisplayTooltips property

    /*
    Property LargeButtons

    For more information, see help context 2009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool LargeButtons() const; //Returns the value of LargeButtons
    inline void SetLargeButtons(bool value); //Sets the value of the LargeButtons property

    /*
    Property MenuAnimationStyle

    For more information, see help context 2010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoMenuAnimation MenuAnimationStyle() const; //Returns the value of MenuAnimationStyle
    inline void SetMenuAnimationStyle(Office::MsoMenuAnimation value); //Sets the value of the MenuAnimationStyle property

    /*
    Property Parent

    For more information, see help context 2011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property _NewEnum

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IUnknown* _NewEnum() const; //Returns the value of _NewEnum

    /*
    Method Add

    For more information, see help context 2003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Add();

    /*
    Method Add

    For more information, see help context 2003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Add(const QVariant& Name);

    /*
    Method Add

    For more information, see help context 2003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Add(const QVariant& Name, const QVariant& Position);

    /*
    Method Add

    For more information, see help context 2003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Add(const QVariant& Name, const QVariant& Position, const QVariant& MenuBar);

    /*
    Method Add

    For more information, see help context 2003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Add(const QVariant& Name, const QVariant& Position, const QVariant& MenuBar, const QVariant& Temporary);

    /*
    Method AddEx

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* AddEx();

    /*
    Method AddEx

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* AddEx(const QVariant& TbidOrName);

    /*
    Method AddEx

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* AddEx(const QVariant& TbidOrName, const QVariant& Position);

    /*
    Method AddEx

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* AddEx(const QVariant& TbidOrName, const QVariant& Position, const QVariant& MenuBar);

    /*
    Method AddEx

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* AddEx(const QVariant& TbidOrName, const QVariant& Position, const QVariant& MenuBar, const QVariant& Temporary);

    /*
    Method AddEx

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* AddEx(const QVariant& TbidOrName, const QVariant& Position, const QVariant& MenuBar, const QVariant& Temporary, const QVariant& TbtrProtection);

    /*
    Method FindControl

    For more information, see help context 2007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl();

    /*
    Method FindControl

    For more information, see help context 2007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl(const QVariant& Type);

    /*
    Method FindControl

    For more information, see help context 2007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl(const QVariant& Type, const QVariant& Id);

    /*
    Method FindControl

    For more information, see help context 2007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag);

    /*
    Method FindControl

    For more information, see help context 2007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag, const QVariant& Visible);

    /*
    Method FindControls

    For more information, see help context 2014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControls* FindControls();

    /*
    Method FindControls

    For more information, see help context 2014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControls* FindControls(const QVariant& Type);

    /*
    Method FindControls

    For more information, see help context 2014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControls* FindControls(const QVariant& Type, const QVariant& Id);

    /*
    Method FindControls

    For more information, see help context 2014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControls* FindControls(const QVariant& Type, const QVariant& Id, const QVariant& Tag);

    /*
    Method FindControls

    For more information, see help context 2014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControls* FindControls(const QVariant& Type, const QVariant& Id, const QVariant& Tag, const QVariant& Visible);

    /*
    Method IdsString

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int IdsString(int ids, QString& pbstrName);

    /*
    Method Item

    For more information, see help context 2008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Item(const QVariant& Index);

    /*
    Method ReleaseFocus

    For more information, see help context 2012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void ReleaseFocus();

    /*
    Method TmcGetName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int TmcGetName(int tmc, QString& pbstrName);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT CommandBarComboBox : public QAxObject
{
public:
    CommandBarComboBox(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    CommandBarComboBox(_CommandBarComboBox *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property BeginGroup

    For more information, see help context 5001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BeginGroup() const; //Returns the value of BeginGroup
    inline void SetBeginGroup(bool value); //Sets the value of the BeginGroup property

    /*
    Property BuiltIn

    For more information, see help context 5002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BuiltIn() const; //Returns the value of BuiltIn

    /*
    Property Caption

    For more information, see help context 5003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Control

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Control() const; //Returns the value of Control

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property DescriptionText

    For more information, see help context 5006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString DescriptionText() const; //Returns the value of DescriptionText
    inline void SetDescriptionText(const QString& value); //Sets the value of the DescriptionText property

    /*
    Property DropDownLines

    For more information, see help context 8003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int DropDownLines() const; //Returns the value of DropDownLines
    inline void SetDropDownLines(int value); //Sets the value of the DropDownLines property

    /*
    Property DropDownWidth

    For more information, see help context 8004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int DropDownWidth() const; //Returns the value of DropDownWidth
    inline void SetDropDownWidth(int value); //Sets the value of the DropDownWidth property

    /*
    Property Enabled

    For more information, see help context 5007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Height

    For more information, see help context 5009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property HelpContextId

    For more information, see help context 5010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int HelpContextId() const; //Returns the value of HelpContextId
    inline void SetHelpContextId(int value); //Sets the value of the HelpContextId property

    /*
    Property HelpFile

    For more information, see help context 5011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString HelpFile() const; //Returns the value of HelpFile
    inline void SetHelpFile(const QString& value); //Sets the value of the HelpFile property

    /*
    Property Id

    For more information, see help context 5012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Id() const; //Returns the value of Id

    /*
    Property Index

    For more information, see help context 5013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property InstanceId

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int InstanceId() const; //Returns the value of InstanceId

    /*
    Property IsPriorityDropped

    For more information, see help context 5029 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool IsPriorityDropped() const; //Returns the value of IsPriorityDropped

    /*
    Property Left

    For more information, see help context 5015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Left() const; //Returns the value of Left

    /*
    Property ListCount

    For more information, see help context 8006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int ListCount() const; //Returns the value of ListCount

    /*
    Property ListHeaderCount

    For more information, see help context 8007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int ListHeaderCount() const; //Returns the value of ListHeaderCount
    inline void SetListHeaderCount(int value); //Sets the value of the ListHeaderCount property

    /*
    Property ListIndex

    For more information, see help context 8008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int ListIndex() const; //Returns the value of ListIndex
    inline void SetListIndex(int value); //Sets the value of the ListIndex property

    /*
    Property OLEUsage

    For more information, see help context 5016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlOLEUsage OLEUsage() const; //Returns the value of OLEUsage
    inline void SetOLEUsage(Office::MsoControlOLEUsage value); //Sets the value of the OLEUsage property

    /*
    Property OnAction

    For more information, see help context 5017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString OnAction() const; //Returns the value of OnAction
    inline void SetOnAction(const QString& value); //Sets the value of the OnAction property

    /*
    Property Parameter

    For more information, see help context 5019 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Parameter() const; //Returns the value of Parameter
    inline void SetParameter(const QString& value); //Sets the value of the Parameter property

    /*
    Property Parent

    For more information, see help context 5018 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Parent() const; //Returns the value of Parent

    /*
    Property Priority

    For more information, see help context 5020 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Priority() const; //Returns the value of Priority
    inline void SetPriority(int value); //Sets the value of the Priority property

    /*
    Property Style

    For more information, see help context 8010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoComboStyle Style() const; //Returns the value of Style
    inline void SetStyle(Office::MsoComboStyle value); //Sets the value of the Style property

    /*
    Property Tag

    For more information, see help context 5023 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Tag() const; //Returns the value of Tag
    inline void SetTag(const QString& value); //Sets the value of the Tag property

    /*
    Property Text

    For more information, see help context 8011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property TooltipText

    For more information, see help context 5024 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString TooltipText() const; //Returns the value of TooltipText
    inline void SetTooltipText(const QString& value); //Sets the value of the TooltipText property

    /*
    Property Top

    For more information, see help context 5025 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Top() const; //Returns the value of Top

    /*
    Property Type

    For more information, see help context 5026 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlType Type() const; //Returns the value of Type

    /*
    Property Visible

    For more information, see help context 5027 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Property Width

    For more information, see help context 5028 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property accChildCount

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accChildCount() const; //Returns the value of accChildCount

    /*
    Property accDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDefaultAction() const; //Returns the value of accDefaultAction

    /*
    Property accDescription

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDescription() const; //Returns the value of accDescription

    /*
    Property accFocus

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accFocus() const; //Returns the value of accFocus

    /*
    Property accHelp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accHelp() const; //Returns the value of accHelp

    /*
    Property accKeyboardShortcut

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accKeyboardShortcut() const; //Returns the value of accKeyboardShortcut

    /*
    Property accName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accName() const; //Returns the value of accName
    inline void setAccName(const QVariant& value); //Sets the value of the accName property

    /*
    Property accParent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accParent() const; //Returns the value of accParent

    /*
    Property accRole

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accRole() const; //Returns the value of accRole

    /*
    Property accSelection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accSelection() const; //Returns the value of accSelection

    /*
    Property accState

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accState() const; //Returns the value of accState

    /*
    Property accValue

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accValue() const; //Returns the value of accValue
    inline void setAccValue(const QVariant& value); //Sets the value of the accValue property

    /*
    Method AddItem

    For more information, see help context 8001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AddItem(const QString& Text);

    /*
    Method AddItem

    For more information, see help context 8001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void AddItem(const QString& Text, const QVariant& Index);

    /*
    Method Clear

    For more information, see help context 8002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Clear();

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy();

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar);

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar, const QVariant& Before);

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(const QVariant& Temporary);

    /*
    Method Execute

    For more information, see help context 5008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Execute();

    /*
    Method List

    For more information, see help context 8005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString List(int Index);

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move();

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar);

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar, const QVariant& Before);

    /*
    Method RemoveItem

    For more information, see help context 8009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void RemoveItem(int Index);

    /*
    Method Reserved1

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved1();

    /*
    Method Reserved2

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved2();

    /*
    Method Reserved3

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved3();

    /*
    Method Reserved4

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved4();

    /*
    Method Reserved5

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved5();

    /*
    Method Reserved6

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved6();

    /*
    Method Reserved7

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved7();

    /*
    Method Reset

    For more information, see help context 5021 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reset();

    /*
    Method SetFocus

    For more information, see help context 5022 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetFocus();

    /*
    Method SetList
    */
    inline int SetList(int Index, const QString& rhs);

    /*
    Method accChild

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accChild(const QVariant& varChild);

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction();

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction(const QVariant& varChild);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile, const QVariant& varChild);

    /*
    Method accHitTest

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accHitTest(int xLeft, int yTop);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir, const QVariant& varStart);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect, const QVariant& varChild);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT CommandBarButton : public QAxObject
{
public:
    CommandBarButton(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Application

    For more information, see help context 1001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Application() const; //Returns the value of Application

    /*
    Property BeginGroup

    For more information, see help context 5001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BeginGroup() const; //Returns the value of BeginGroup
    inline void SetBeginGroup(bool value); //Sets the value of the BeginGroup property

    /*
    Property BuiltIn

    For more information, see help context 5002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BuiltIn() const; //Returns the value of BuiltIn

    /*
    Property BuiltInFace

    For more information, see help context 6001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool BuiltInFace() const; //Returns the value of BuiltInFace
    inline void SetBuiltInFace(bool value); //Sets the value of the BuiltInFace property

    /*
    Property Caption

    For more information, see help context 5003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Control

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Control() const; //Returns the value of Control

    /*
    Property Creator

    For more information, see help context 1002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Creator() const; //Returns the value of Creator

    /*
    Property DescriptionText

    For more information, see help context 5006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString DescriptionText() const; //Returns the value of DescriptionText
    inline void SetDescriptionText(const QString& value); //Sets the value of the DescriptionText property

    /*
    Property Enabled

    For more information, see help context 5007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property FaceId

    For more information, see help context 6003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int FaceId() const; //Returns the value of FaceId
    inline void SetFaceId(int value); //Sets the value of the FaceId property

    /*
    Property Height

    For more information, see help context 5009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property HelpContextId

    For more information, see help context 5010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int HelpContextId() const; //Returns the value of HelpContextId
    inline void SetHelpContextId(int value); //Sets the value of the HelpContextId property

    /*
    Property HelpFile

    For more information, see help context 5011 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString HelpFile() const; //Returns the value of HelpFile
    inline void SetHelpFile(const QString& value); //Sets the value of the HelpFile property

    /*
    Property HyperlinkType

    For more information, see help context 6008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoCommandBarButtonHyperlinkType HyperlinkType() const; //Returns the value of HyperlinkType
    inline void SetHyperlinkType(Office::MsoCommandBarButtonHyperlinkType value); //Sets the value of the HyperlinkType property

    /*
    Property Id

    For more information, see help context 5012 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Id() const; //Returns the value of Id

    /*
    Property Index

    For more information, see help context 5013 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property InstanceId

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int InstanceId() const; //Returns the value of InstanceId

    /*
    Property IsPriorityDropped

    For more information, see help context 5029 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool IsPriorityDropped() const; //Returns the value of IsPriorityDropped

    /*
    Property Left

    For more information, see help context 5015 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Left() const; //Returns the value of Left

    /*
    Property Mask

    For more information, see help context 6010 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QPixmap Mask() const; //Returns the value of Mask
    inline void SetMask(const QPixmap& value); //Sets the value of the Mask property

    /*
    Property OLEUsage

    For more information, see help context 5016 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlOLEUsage OLEUsage() const; //Returns the value of OLEUsage
    inline void SetOLEUsage(Office::MsoControlOLEUsage value); //Sets the value of the OLEUsage property

    /*
    Property OnAction

    For more information, see help context 5017 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString OnAction() const; //Returns the value of OnAction
    inline void SetOnAction(const QString& value); //Sets the value of the OnAction property

    /*
    Property Parameter

    For more information, see help context 5019 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Parameter() const; //Returns the value of Parameter
    inline void SetParameter(const QString& value); //Sets the value of the Parameter property

    /*
    Property Parent

    For more information, see help context 5018 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBar* Parent() const; //Returns the value of Parent

    /*
    Property Picture

    For more information, see help context 6009 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QPixmap Picture() const; //Returns the value of Picture
    inline void SetPicture(const QPixmap& value); //Sets the value of the Picture property

    /*
    Property Priority

    For more information, see help context 5020 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Priority() const; //Returns the value of Priority
    inline void SetPriority(int value); //Sets the value of the Priority property

    /*
    Property ShortcutText

    For more information, see help context 6005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString ShortcutText() const; //Returns the value of ShortcutText
    inline void SetShortcutText(const QString& value); //Sets the value of the ShortcutText property

    /*
    Property State

    For more information, see help context 6006 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoButtonState State() const; //Returns the value of State
    inline void SetState(Office::MsoButtonState value); //Sets the value of the State property

    /*
    Property Style

    For more information, see help context 6007 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoButtonStyle Style() const; //Returns the value of Style
    inline void SetStyle(Office::MsoButtonStyle value); //Sets the value of the Style property

    /*
    Property Tag

    For more information, see help context 5023 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Tag() const; //Returns the value of Tag
    inline void SetTag(const QString& value); //Sets the value of the Tag property

    /*
    Property TooltipText

    For more information, see help context 5024 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString TooltipText() const; //Returns the value of TooltipText
    inline void SetTooltipText(const QString& value); //Sets the value of the TooltipText property

    /*
    Property Top

    For more information, see help context 5025 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Top() const; //Returns the value of Top

    /*
    Property Type

    For more information, see help context 5026 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::MsoControlType Type() const; //Returns the value of Type

    /*
    Property Visible

    For more information, see help context 5027 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Property Width

    For more information, see help context 5028 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property accChildCount

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accChildCount() const; //Returns the value of accChildCount

    /*
    Property accDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDefaultAction() const; //Returns the value of accDefaultAction

    /*
    Property accDescription

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accDescription() const; //Returns the value of accDescription

    /*
    Property accFocus

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accFocus() const; //Returns the value of accFocus

    /*
    Property accHelp

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accHelp() const; //Returns the value of accHelp

    /*
    Property accKeyboardShortcut

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString accKeyboardShortcut() const; //Returns the value of accKeyboardShortcut

    /*
    Property accName

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accName() const; //Returns the value of accName
    inline void setAccName(const QVariant& value); //Sets the value of the accName property

    /*
    Property accParent

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accParent() const; //Returns the value of accParent

    /*
    Property accRole

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accRole() const; //Returns the value of accRole

    /*
    Property accSelection

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accSelection() const; //Returns the value of accSelection

    /*
    Property accState

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accState() const; //Returns the value of accState

    /*
    Property accValue

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accValue() const; //Returns the value of accValue
    inline void setAccValue(const QVariant& value); //Sets the value of the accValue property

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy();

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar);

    /*
    Method Copy

    For more information, see help context 5004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Copy(const QVariant& Bar, const QVariant& Before);

    /*
    Method CopyFace

    For more information, see help context 6002 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void CopyFace();

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete();

    /*
    Method Delete

    For more information, see help context 5005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Delete(const QVariant& Temporary);

    /*
    Method Execute

    For more information, see help context 5008 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Execute();

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move();

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar);

    /*
    Method Move

    For more information, see help context 5014 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline Office::CommandBarControl* Move(const QVariant& Bar, const QVariant& Before);

    /*
    Method PasteFace

    For more information, see help context 6004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void PasteFace();

    /*
    Method Reserved1

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved1();

    /*
    Method Reserved2

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved2();

    /*
    Method Reserved3

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved3();

    /*
    Method Reserved4

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved4();

    /*
    Method Reserved5

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved5();

    /*
    Method Reserved6

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved6();

    /*
    Method Reserved7

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reserved7();

    /*
    Method Reset

    For more information, see help context 5021 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void Reset();

    /*
    Method SetFocus

    For more information, see help context 5022 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void SetFocus();

    /*
    Method accChild

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* accChild(const QVariant& varChild);

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction();

    /*
    Method accDoDefaultAction

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accDoDefaultAction(const QVariant& varChild);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile);

    /*
    Method accHelpTopic

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline int accHelpTopic(QString& pszHelpFile, const QVariant& varChild);

    /*
    Method accHitTest

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accHitTest(int xLeft, int yTop);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight);

    /*
    Method accLocation

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir);

    /*
    Method accNavigate

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QVariant accNavigate(int navDir, const QVariant& varStart);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect);

    /*
    Method accSelect

    For more information, see help context 0 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline void accSelect(int flagsSelect, const QVariant& varChild);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OFFICE_EXPORT MsoEnvelope : public QAxObject
{
public:
    MsoEnvelope(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property CommandBars

    For more information, see help context 11005 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* CommandBars() const; //Returns the value of CommandBars

    /*
    Property Introduction

    For more information, see help context 11001 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline QString Introduction() const; //Returns the value of Introduction
    inline void SetIntroduction(const QString& value); //Sets the value of the Introduction property

    /*
    Property Item

    For more information, see help context 11003 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Item() const; //Returns the value of Item

    /*
    Property Parent

    For more information, see help context 11004 in c:\Program Files\Common Files\Microsoft Shared\OFFICE11\vbaof11.chm.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_OFFICE_NOINLINES
inline int IAccessible::accChildCount() const
{
    QVariant qax_result = property("accChildCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IAccessible::accDefaultAction() const
{
    QVariant qax_result = property("accDefaultAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IAccessible::accDescription() const
{
    QVariant qax_result = property("accDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant IAccessible::accFocus() const
{
    QVariant qax_result = property("accFocus");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString IAccessible::accHelp() const
{
    QVariant qax_result = property("accHelp");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IAccessible::accKeyboardShortcut() const
{
    QVariant qax_result = property("accKeyboardShortcut");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant IAccessible::accName() const
{
    QVariant qax_result = property("accName");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IAccessible::setAccName(const QVariant& value){ setProperty("accName", QVariant(value)); }

inline IDispatch* IAccessible::accParent() const
{
    QVariant qax_result = property("accParent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QVariant IAccessible::accRole() const
{
    QVariant qax_result = property("accRole");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant IAccessible::accSelection() const
{
    QVariant qax_result = property("accSelection");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant IAccessible::accState() const
{
    QVariant qax_result = property("accState");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant IAccessible::accValue() const
{
    QVariant qax_result = property("accValue");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IAccessible::setAccValue(const QVariant& value){ setProperty("accValue", QVariant(value)); }

inline IDispatch* IAccessible::accChild(const QVariant& varChild)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline void IAccessible::accDoDefaultAction()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void IAccessible::accDoDefaultAction(const QVariant& varChild)
{
    void *_a[] = {0, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline int IAccessible::accHelpTopic(QString& pszHelpFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IAccessible::accHelpTopic(QString& pszHelpFile, const QVariant& varChild)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline QVariant IAccessible::accHitTest(int xLeft, int yTop)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&xLeft, (void*)&yTop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline void IAccessible::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void IAccessible::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline QVariant IAccessible::accNavigate(int navDir)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline QVariant IAccessible::accNavigate(int navDir, const QVariant& varStart)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir, (void*)&varStart};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline void IAccessible::accSelect(int flagsSelect)
{
    void *_a[] = {0, (void*)&flagsSelect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void IAccessible::accSelect(int flagsSelect, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&flagsSelect, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}


inline IDispatch* _IMsoDispObj::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _IMsoDispObj::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}


inline IDispatch* _IMsoOleAccDispObj::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _IMsoOleAccDispObj::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _IMsoOleAccDispObj::accChildCount() const
{
    QVariant qax_result = property("accChildCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _IMsoOleAccDispObj::accDefaultAction() const
{
    QVariant qax_result = property("accDefaultAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _IMsoOleAccDispObj::accDescription() const
{
    QVariant qax_result = property("accDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant _IMsoOleAccDispObj::accFocus() const
{
    QVariant qax_result = property("accFocus");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString _IMsoOleAccDispObj::accHelp() const
{
    QVariant qax_result = property("accHelp");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _IMsoOleAccDispObj::accKeyboardShortcut() const
{
    QVariant qax_result = property("accKeyboardShortcut");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant _IMsoOleAccDispObj::accName() const
{
    QVariant qax_result = property("accName");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _IMsoOleAccDispObj::setAccName(const QVariant& value){ setProperty("accName", QVariant(value)); }

inline IDispatch* _IMsoOleAccDispObj::accParent() const
{
    QVariant qax_result = property("accParent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QVariant _IMsoOleAccDispObj::accRole() const
{
    QVariant qax_result = property("accRole");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant _IMsoOleAccDispObj::accSelection() const
{
    QVariant qax_result = property("accSelection");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant _IMsoOleAccDispObj::accState() const
{
    QVariant qax_result = property("accState");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant _IMsoOleAccDispObj::accValue() const
{
    QVariant qax_result = property("accValue");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _IMsoOleAccDispObj::setAccValue(const QVariant& value){ setProperty("accValue", QVariant(value)); }

inline IDispatch* _IMsoOleAccDispObj::accChild(const QVariant& varChild)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline void _IMsoOleAccDispObj::accDoDefaultAction()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _IMsoOleAccDispObj::accDoDefaultAction(const QVariant& varChild)
{
    void *_a[] = {0, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline int _IMsoOleAccDispObj::accHelpTopic(QString& pszHelpFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int _IMsoOleAccDispObj::accHelpTopic(QString& pszHelpFile, const QVariant& varChild)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline QVariant _IMsoOleAccDispObj::accHitTest(int xLeft, int yTop)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&xLeft, (void*)&yTop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline void _IMsoOleAccDispObj::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _IMsoOleAccDispObj::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline QVariant _IMsoOleAccDispObj::accNavigate(int navDir)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline QVariant _IMsoOleAccDispObj::accNavigate(int navDir, const QVariant& varStart)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir, (void*)&varStart};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline void _IMsoOleAccDispObj::accSelect(int flagsSelect)
{
    void *_a[] = {0, (void*)&flagsSelect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void _IMsoOleAccDispObj::accSelect(int flagsSelect, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&flagsSelect, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}


inline Office::CommandBarControl* _CommandBars::ActionControl() const
{
    Office::CommandBarControl* qax_pointer = 0;
    qRegisterMetaType("CommandBarControl*", &qax_pointer);
    qRegisterMetaType("CommandBarControl", qax_pointer);
    QVariant qax_result = property("ActionControl");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBarControl**)qax_result.constData();
}

inline Office::CommandBar* _CommandBars::ActiveMenuBar() const
{
    Office::CommandBar* qax_pointer = 0;
    qRegisterMetaType("CommandBar*", &qax_pointer);
    qRegisterMetaType("CommandBar", qax_pointer);
    QVariant qax_result = property("ActiveMenuBar");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBar**)qax_result.constData();
}

inline bool _CommandBars::AdaptiveMenus() const
{
    QVariant qax_result = property("AdaptiveMenus");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBars::SetAdaptiveMenus(bool value){ setProperty("AdaptiveMenus", QVariant(value)); }

inline IDispatch* _CommandBars::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _CommandBars::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CommandBars::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool _CommandBars::DisableAskAQuestionDropdown() const
{
    QVariant qax_result = property("DisableAskAQuestionDropdown");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBars::SetDisableAskAQuestionDropdown(bool value){ setProperty("DisableAskAQuestionDropdown", QVariant(value)); }

inline bool _CommandBars::DisableCustomize() const
{
    QVariant qax_result = property("DisableCustomize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBars::SetDisableCustomize(bool value){ setProperty("DisableCustomize", QVariant(value)); }

inline bool _CommandBars::DisplayFonts() const
{
    QVariant qax_result = property("DisplayFonts");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBars::SetDisplayFonts(bool value){ setProperty("DisplayFonts", QVariant(value)); }

inline bool _CommandBars::DisplayKeysInTooltips() const
{
    QVariant qax_result = property("DisplayKeysInTooltips");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBars::SetDisplayKeysInTooltips(bool value){ setProperty("DisplayKeysInTooltips", QVariant(value)); }

inline bool _CommandBars::DisplayTooltips() const
{
    QVariant qax_result = property("DisplayTooltips");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBars::SetDisplayTooltips(bool value){ setProperty("DisplayTooltips", QVariant(value)); }

inline bool _CommandBars::LargeButtons() const
{
    QVariant qax_result = property("LargeButtons");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBars::SetLargeButtons(bool value){ setProperty("LargeButtons", QVariant(value)); }

inline Office::MsoMenuAnimation _CommandBars::MenuAnimationStyle() const
{
    QVariant qax_result = property("MenuAnimationStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoMenuAnimation*)qax_result.constData();
}
inline void _CommandBars::SetMenuAnimationStyle(Office::MsoMenuAnimation value){ setProperty("MenuAnimationStyle", QVariant(value)); }

inline IDispatch* _CommandBars::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* _CommandBars::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::CommandBar* _CommandBars::Add()
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::CommandBar* _CommandBars::Add(const QVariant& Name)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::CommandBar* _CommandBars::Add(const QVariant& Name, const QVariant& Position)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Position};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Office::CommandBar* _CommandBars::Add(const QVariant& Name, const QVariant& Position, const QVariant& MenuBar)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Position, (void*)&MenuBar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Office::CommandBar* _CommandBars::Add(const QVariant& Name, const QVariant& Position, const QVariant& MenuBar, const QVariant& Temporary)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Position, (void*)&MenuBar, (void*)&Temporary};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Office::CommandBar* _CommandBars::AddEx()
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Office::CommandBar* _CommandBars::AddEx(const QVariant& TbidOrName)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&TbidOrName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Office::CommandBar* _CommandBars::AddEx(const QVariant& TbidOrName, const QVariant& Position)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&TbidOrName, (void*)&Position};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Office::CommandBar* _CommandBars::AddEx(const QVariant& TbidOrName, const QVariant& Position, const QVariant& MenuBar)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&TbidOrName, (void*)&Position, (void*)&MenuBar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline Office::CommandBar* _CommandBars::AddEx(const QVariant& TbidOrName, const QVariant& Position, const QVariant& MenuBar, const QVariant& Temporary)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&TbidOrName, (void*)&Position, (void*)&MenuBar, (void*)&Temporary};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Office::CommandBar* _CommandBars::AddEx(const QVariant& TbidOrName, const QVariant& Position, const QVariant& MenuBar, const QVariant& Temporary, const QVariant& TbtrProtection)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&TbidOrName, (void*)&Position, (void*)&MenuBar, (void*)&Temporary, (void*)&TbtrProtection};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBars::FindControl()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBars::FindControl(const QVariant& Type)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBars::FindControl(const QVariant& Type, const QVariant& Id)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBars::FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Tag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBars::FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag, const QVariant& Visible)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Tag, (void*)&Visible};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline Office::CommandBarControls* _CommandBars::FindControls()
{
    Office::CommandBarControls* qax_result = 0;
    qRegisterMetaType("CommandBarControls*", &qax_result);
    qRegisterMetaType("CommandBarControls", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline Office::CommandBarControls* _CommandBars::FindControls(const QVariant& Type)
{
    Office::CommandBarControls* qax_result = 0;
    qRegisterMetaType("CommandBarControls*", &qax_result);
    qRegisterMetaType("CommandBarControls", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline Office::CommandBarControls* _CommandBars::FindControls(const QVariant& Type, const QVariant& Id)
{
    Office::CommandBarControls* qax_result = 0;
    qRegisterMetaType("CommandBarControls*", &qax_result);
    qRegisterMetaType("CommandBarControls", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline Office::CommandBarControls* _CommandBars::FindControls(const QVariant& Type, const QVariant& Id, const QVariant& Tag)
{
    Office::CommandBarControls* qax_result = 0;
    qRegisterMetaType("CommandBarControls*", &qax_result);
    qRegisterMetaType("CommandBarControls", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Tag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline Office::CommandBarControls* _CommandBars::FindControls(const QVariant& Type, const QVariant& Id, const QVariant& Tag, const QVariant& Visible)
{
    Office::CommandBarControls* qax_result = 0;
    qRegisterMetaType("CommandBarControls*", &qax_result);
    qRegisterMetaType("CommandBarControls", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Tag, (void*)&Visible};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int _CommandBars::IdsString(int ids, QString& pbstrName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&ids, (void*)&pbstrName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline Office::CommandBar* _CommandBars::Item(const QVariant& Index)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline void _CommandBars::ReleaseFocus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline int _CommandBars::TmcGetName(int tmc, QString& pbstrName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&tmc, (void*)&pbstrName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}


inline bool CommandBar::AdaptiveMenu() const
{
    QVariant qax_result = property("AdaptiveMenu");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBar::SetAdaptiveMenu(bool value){ setProperty("AdaptiveMenu", QVariant(value)); }

inline IDispatch* CommandBar::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool CommandBar::BuiltIn() const
{
    QVariant qax_result = property("BuiltIn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString CommandBar::Context() const
{
    QVariant qax_result = property("Context");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBar::SetContext(const QString& value){ setProperty("Context", QVariant(value)); }

inline Office::CommandBarControls* CommandBar::Controls() const
{
    Office::CommandBarControls* qax_pointer = 0;
    qRegisterMetaType("CommandBarControls*", &qax_pointer);
    qRegisterMetaType("CommandBarControls", qax_pointer);
    QVariant qax_result = property("Controls");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBarControls**)qax_result.constData();
}

inline int CommandBar::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool CommandBar::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBar::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline int CommandBar::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBar::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int CommandBar::Id() const
{
    QVariant qax_result = property("Id");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBar::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBar::InstanceId() const
{
    QVariant qax_result = property("InstanceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBar::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBar::SetLeft(int value){ setProperty("Left", QVariant(value)); }

inline QString CommandBar::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBar::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline QString CommandBar::NameLocal() const
{
    QVariant qax_result = property("NameLocal");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBar::SetNameLocal(const QString& value){ setProperty("NameLocal", QVariant(value)); }

inline IDispatch* CommandBar::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoBarPosition CommandBar::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoBarPosition*)qax_result.constData();
}
inline void CommandBar::SetPosition(Office::MsoBarPosition value){ setProperty("Position", QVariant(value)); }

inline Office::MsoBarProtection CommandBar::Protection() const
{
    QVariant qax_result = property("Protection");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoBarProtection*)qax_result.constData();
}
inline void CommandBar::SetProtection(Office::MsoBarProtection value){ setProperty("Protection", QVariant(value)); }

inline int CommandBar::RowIndex() const
{
    QVariant qax_result = property("RowIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBar::SetRowIndex(int value){ setProperty("RowIndex", QVariant(value)); }

inline int CommandBar::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBar::SetTop(int value){ setProperty("Top", QVariant(value)); }

inline Office::MsoBarType CommandBar::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoBarType*)qax_result.constData();
}

inline bool CommandBar::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBar::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline int CommandBar::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBar::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline int CommandBar::accChildCount() const
{
    QVariant qax_result = property("accChildCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CommandBar::accDefaultAction() const
{
    QVariant qax_result = property("accDefaultAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CommandBar::accDescription() const
{
    QVariant qax_result = property("accDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant CommandBar::accFocus() const
{
    QVariant qax_result = property("accFocus");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString CommandBar::accHelp() const
{
    QVariant qax_result = property("accHelp");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CommandBar::accKeyboardShortcut() const
{
    QVariant qax_result = property("accKeyboardShortcut");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant CommandBar::accName() const
{
    QVariant qax_result = property("accName");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void CommandBar::setAccName(const QVariant& value){ setProperty("accName", QVariant(value)); }

inline IDispatch* CommandBar::accParent() const
{
    QVariant qax_result = property("accParent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QVariant CommandBar::accRole() const
{
    QVariant qax_result = property("accRole");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBar::accSelection() const
{
    QVariant qax_result = property("accSelection");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBar::accState() const
{
    QVariant qax_result = property("accState");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBar::accValue() const
{
    QVariant qax_result = property("accValue");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void CommandBar::setAccValue(const QVariant& value){ setProperty("accValue", QVariant(value)); }

inline void CommandBar::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline Office::CommandBarControl* CommandBar::FindControl()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBar::FindControl(const QVariant& Type)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBar::FindControl(const QVariant& Type, const QVariant& Id)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBar::FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Tag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBar::FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag, const QVariant& Visible)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Tag, (void*)&Visible};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBar::FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag, const QVariant& Visible, const QVariant& Recursive)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Tag, (void*)&Visible, (void*)&Recursive};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void CommandBar::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void CommandBar::ShowPopup()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void CommandBar::ShowPopup(const QVariant& x)
{
    void *_a[] = {0, (void*)&x};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void CommandBar::ShowPopup(const QVariant& x, const QVariant& y)
{
    void *_a[] = {0, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline IDispatch* CommandBar::accChild(const QVariant& varChild)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline void CommandBar::accDoDefaultAction()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void CommandBar::accDoDefaultAction(const QVariant& varChild)
{
    void *_a[] = {0, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline int CommandBar::accHelpTopic(QString& pszHelpFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline int CommandBar::accHelpTopic(QString& pszHelpFile, const QVariant& varChild)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline QVariant CommandBar::accHitTest(int xLeft, int yTop)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&xLeft, (void*)&yTop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline void CommandBar::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline void CommandBar::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline QVariant CommandBar::accNavigate(int navDir)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline QVariant CommandBar::accNavigate(int navDir, const QVariant& varStart)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir, (void*)&varStart};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline void CommandBar::accSelect(int flagsSelect)
{
    void *_a[] = {0, (void*)&flagsSelect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}

inline void CommandBar::accSelect(int flagsSelect, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&flagsSelect, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
}


inline IDispatch* CommandBarControls::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int CommandBarControls::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBarControls::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::CommandBar* CommandBarControls::Parent() const
{
    Office::CommandBar* qax_pointer = 0;
    qRegisterMetaType("CommandBar*", &qax_pointer);
    qRegisterMetaType("CommandBar", qax_pointer);
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBar**)qax_result.constData();
}

inline IUnknown* CommandBarControls::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::CommandBarControl* CommandBarControls::Add()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarControls::Add(const QVariant& Type)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarControls::Add(const QVariant& Type, const QVariant& Id)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarControls::Add(const QVariant& Type, const QVariant& Id, const QVariant& Parameter)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Parameter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarControls::Add(const QVariant& Type, const QVariant& Id, const QVariant& Parameter, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Parameter, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarControls::Add(const QVariant& Type, const QVariant& Id, const QVariant& Parameter, const QVariant& Before, const QVariant& Temporary)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Parameter, (void*)&Before, (void*)&Temporary};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarControls::Item(const QVariant& Index)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}


inline IDispatch* CommandBarControl::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool CommandBarControl::BeginGroup() const
{
    QVariant qax_result = property("BeginGroup");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBarControl::SetBeginGroup(bool value){ setProperty("BeginGroup", QVariant(value)); }

inline bool CommandBarControl::BuiltIn() const
{
    QVariant qax_result = property("BuiltIn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString CommandBarControl::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarControl::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline IDispatch* CommandBarControl::Control() const
{
    QVariant qax_result = property("Control");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int CommandBarControl::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CommandBarControl::DescriptionText() const
{
    QVariant qax_result = property("DescriptionText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarControl::SetDescriptionText(const QString& value){ setProperty("DescriptionText", QVariant(value)); }

inline bool CommandBarControl::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBarControl::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline int CommandBarControl::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarControl::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int CommandBarControl::HelpContextId() const
{
    QVariant qax_result = property("HelpContextId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarControl::SetHelpContextId(int value){ setProperty("HelpContextId", QVariant(value)); }

inline QString CommandBarControl::HelpFile() const
{
    QVariant qax_result = property("HelpFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarControl::SetHelpFile(const QString& value){ setProperty("HelpFile", QVariant(value)); }

inline int CommandBarControl::Id() const
{
    QVariant qax_result = property("Id");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBarControl::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBarControl::InstanceId() const
{
    QVariant qax_result = property("InstanceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool CommandBarControl::IsPriorityDropped() const
{
    QVariant qax_result = property("IsPriorityDropped");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int CommandBarControl::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoControlOLEUsage CommandBarControl::OLEUsage() const
{
    QVariant qax_result = property("OLEUsage");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlOLEUsage*)qax_result.constData();
}
inline void CommandBarControl::SetOLEUsage(Office::MsoControlOLEUsage value){ setProperty("OLEUsage", QVariant(value)); }

inline QString CommandBarControl::OnAction() const
{
    QVariant qax_result = property("OnAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarControl::SetOnAction(const QString& value){ setProperty("OnAction", QVariant(value)); }

inline QString CommandBarControl::Parameter() const
{
    QVariant qax_result = property("Parameter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarControl::SetParameter(const QString& value){ setProperty("Parameter", QVariant(value)); }

inline Office::CommandBar* CommandBarControl::Parent() const
{
    Office::CommandBar* qax_pointer = 0;
    qRegisterMetaType("CommandBar*", &qax_pointer);
    qRegisterMetaType("CommandBar", qax_pointer);
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBar**)qax_result.constData();
}

inline int CommandBarControl::Priority() const
{
    QVariant qax_result = property("Priority");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarControl::SetPriority(int value){ setProperty("Priority", QVariant(value)); }

inline QString CommandBarControl::Tag() const
{
    QVariant qax_result = property("Tag");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarControl::SetTag(const QString& value){ setProperty("Tag", QVariant(value)); }

inline QString CommandBarControl::TooltipText() const
{
    QVariant qax_result = property("TooltipText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarControl::SetTooltipText(const QString& value){ setProperty("TooltipText", QVariant(value)); }

inline int CommandBarControl::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoControlType CommandBarControl::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlType*)qax_result.constData();
}

inline bool CommandBarControl::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBarControl::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline int CommandBarControl::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarControl::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline int CommandBarControl::accChildCount() const
{
    QVariant qax_result = property("accChildCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CommandBarControl::accDefaultAction() const
{
    QVariant qax_result = property("accDefaultAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CommandBarControl::accDescription() const
{
    QVariant qax_result = property("accDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant CommandBarControl::accFocus() const
{
    QVariant qax_result = property("accFocus");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString CommandBarControl::accHelp() const
{
    QVariant qax_result = property("accHelp");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CommandBarControl::accKeyboardShortcut() const
{
    QVariant qax_result = property("accKeyboardShortcut");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant CommandBarControl::accName() const
{
    QVariant qax_result = property("accName");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void CommandBarControl::setAccName(const QVariant& value){ setProperty("accName", QVariant(value)); }

inline IDispatch* CommandBarControl::accParent() const
{
    QVariant qax_result = property("accParent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QVariant CommandBarControl::accRole() const
{
    QVariant qax_result = property("accRole");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBarControl::accSelection() const
{
    QVariant qax_result = property("accSelection");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBarControl::accState() const
{
    QVariant qax_result = property("accState");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBarControl::accValue() const
{
    QVariant qax_result = property("accValue");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void CommandBarControl::setAccValue(const QVariant& value){ setProperty("accValue", QVariant(value)); }

inline Office::CommandBarControl* CommandBarControl::Copy()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarControl::Copy(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarControl::Copy(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void CommandBarControl::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void CommandBarControl::Delete(const QVariant& Temporary)
{
    void *_a[] = {0, (void*)&Temporary};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void CommandBarControl::Execute()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Office::CommandBarControl* CommandBarControl::Move()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarControl::Move(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarControl::Move(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void CommandBarControl::Reserved1()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void CommandBarControl::Reserved2()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void CommandBarControl::Reserved3()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void CommandBarControl::Reserved4()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void CommandBarControl::Reserved5()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void CommandBarControl::Reserved6()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void CommandBarControl::Reserved7()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void CommandBarControl::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void CommandBarControl::SetFocus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline IDispatch* CommandBarControl::accChild(const QVariant& varChild)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline void CommandBarControl::accDoDefaultAction()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline void CommandBarControl::accDoDefaultAction(const QVariant& varChild)
{
    void *_a[] = {0, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline int CommandBarControl::accHelpTopic(QString& pszHelpFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline int CommandBarControl::accHelpTopic(QString& pszHelpFile, const QVariant& varChild)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline QVariant CommandBarControl::accHitTest(int xLeft, int yTop)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&xLeft, (void*)&yTop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline void CommandBarControl::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
}

inline void CommandBarControl::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
}

inline QVariant CommandBarControl::accNavigate(int navDir)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline QVariant CommandBarControl::accNavigate(int navDir, const QVariant& varStart)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir, (void*)&varStart};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline void CommandBarControl::accSelect(int flagsSelect)
{
    void *_a[] = {0, (void*)&flagsSelect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
}

inline void CommandBarControl::accSelect(int flagsSelect, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&flagsSelect, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
}


inline IDispatch* _CommandBarButton::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool _CommandBarButton::BeginGroup() const
{
    QVariant qax_result = property("BeginGroup");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBarButton::SetBeginGroup(bool value){ setProperty("BeginGroup", QVariant(value)); }

inline bool _CommandBarButton::BuiltIn() const
{
    QVariant qax_result = property("BuiltIn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _CommandBarButton::BuiltInFace() const
{
    QVariant qax_result = property("BuiltInFace");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBarButton::SetBuiltInFace(bool value){ setProperty("BuiltInFace", QVariant(value)); }

inline QString _CommandBarButton::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarButton::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline IDispatch* _CommandBarButton::Control() const
{
    QVariant qax_result = property("Control");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _CommandBarButton::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _CommandBarButton::DescriptionText() const
{
    QVariant qax_result = property("DescriptionText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarButton::SetDescriptionText(const QString& value){ setProperty("DescriptionText", QVariant(value)); }

inline bool _CommandBarButton::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBarButton::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline int _CommandBarButton::FaceId() const
{
    QVariant qax_result = property("FaceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarButton::SetFaceId(int value){ setProperty("FaceId", QVariant(value)); }

inline int _CommandBarButton::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarButton::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int _CommandBarButton::HelpContextId() const
{
    QVariant qax_result = property("HelpContextId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarButton::SetHelpContextId(int value){ setProperty("HelpContextId", QVariant(value)); }

inline QString _CommandBarButton::HelpFile() const
{
    QVariant qax_result = property("HelpFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarButton::SetHelpFile(const QString& value){ setProperty("HelpFile", QVariant(value)); }

inline Office::MsoCommandBarButtonHyperlinkType _CommandBarButton::HyperlinkType() const
{
    QVariant qax_result = property("HyperlinkType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoCommandBarButtonHyperlinkType*)qax_result.constData();
}
inline void _CommandBarButton::SetHyperlinkType(Office::MsoCommandBarButtonHyperlinkType value){ setProperty("HyperlinkType", QVariant(value)); }

inline int _CommandBarButton::Id() const
{
    QVariant qax_result = property("Id");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CommandBarButton::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CommandBarButton::InstanceId() const
{
    QVariant qax_result = property("InstanceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool _CommandBarButton::IsPriorityDropped() const
{
    QVariant qax_result = property("IsPriorityDropped");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int _CommandBarButton::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QPixmap _CommandBarButton::Mask() const
{
    QVariant qax_result = property("Mask");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _CommandBarButton::SetMask(const QPixmap& value){ setProperty("Mask", QVariant(value)); }

inline Office::MsoControlOLEUsage _CommandBarButton::OLEUsage() const
{
    QVariant qax_result = property("OLEUsage");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlOLEUsage*)qax_result.constData();
}
inline void _CommandBarButton::SetOLEUsage(Office::MsoControlOLEUsage value){ setProperty("OLEUsage", QVariant(value)); }

inline QString _CommandBarButton::OnAction() const
{
    QVariant qax_result = property("OnAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarButton::SetOnAction(const QString& value){ setProperty("OnAction", QVariant(value)); }

inline QString _CommandBarButton::Parameter() const
{
    QVariant qax_result = property("Parameter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarButton::SetParameter(const QString& value){ setProperty("Parameter", QVariant(value)); }

inline Office::CommandBar* _CommandBarButton::Parent() const
{
    Office::CommandBar* qax_pointer = 0;
    qRegisterMetaType("CommandBar*", &qax_pointer);
    qRegisterMetaType("CommandBar", qax_pointer);
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBar**)qax_result.constData();
}

inline QPixmap _CommandBarButton::Picture() const
{
    QVariant qax_result = property("Picture");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _CommandBarButton::SetPicture(const QPixmap& value){ setProperty("Picture", QVariant(value)); }

inline int _CommandBarButton::Priority() const
{
    QVariant qax_result = property("Priority");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarButton::SetPriority(int value){ setProperty("Priority", QVariant(value)); }

inline QString _CommandBarButton::ShortcutText() const
{
    QVariant qax_result = property("ShortcutText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarButton::SetShortcutText(const QString& value){ setProperty("ShortcutText", QVariant(value)); }

inline Office::MsoButtonState _CommandBarButton::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoButtonState*)qax_result.constData();
}
inline void _CommandBarButton::SetState(Office::MsoButtonState value){ setProperty("State", QVariant(value)); }

inline Office::MsoButtonStyle _CommandBarButton::Style() const
{
    QVariant qax_result = property("Style");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoButtonStyle*)qax_result.constData();
}
inline void _CommandBarButton::SetStyle(Office::MsoButtonStyle value){ setProperty("Style", QVariant(value)); }

inline QString _CommandBarButton::Tag() const
{
    QVariant qax_result = property("Tag");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarButton::SetTag(const QString& value){ setProperty("Tag", QVariant(value)); }

inline QString _CommandBarButton::TooltipText() const
{
    QVariant qax_result = property("TooltipText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarButton::SetTooltipText(const QString& value){ setProperty("TooltipText", QVariant(value)); }

inline int _CommandBarButton::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoControlType _CommandBarButton::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlType*)qax_result.constData();
}

inline bool _CommandBarButton::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBarButton::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline int _CommandBarButton::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarButton::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline int _CommandBarButton::accChildCount() const
{
    QVariant qax_result = property("accChildCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _CommandBarButton::accDefaultAction() const
{
    QVariant qax_result = property("accDefaultAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CommandBarButton::accDescription() const
{
    QVariant qax_result = property("accDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant _CommandBarButton::accFocus() const
{
    QVariant qax_result = property("accFocus");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString _CommandBarButton::accHelp() const
{
    QVariant qax_result = property("accHelp");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CommandBarButton::accKeyboardShortcut() const
{
    QVariant qax_result = property("accKeyboardShortcut");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant _CommandBarButton::accName() const
{
    QVariant qax_result = property("accName");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _CommandBarButton::setAccName(const QVariant& value){ setProperty("accName", QVariant(value)); }

inline IDispatch* _CommandBarButton::accParent() const
{
    QVariant qax_result = property("accParent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QVariant _CommandBarButton::accRole() const
{
    QVariant qax_result = property("accRole");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant _CommandBarButton::accSelection() const
{
    QVariant qax_result = property("accSelection");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant _CommandBarButton::accState() const
{
    QVariant qax_result = property("accState");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant _CommandBarButton::accValue() const
{
    QVariant qax_result = property("accValue");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _CommandBarButton::setAccValue(const QVariant& value){ setProperty("accValue", QVariant(value)); }

inline Office::CommandBarControl* _CommandBarButton::Copy()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBarButton::Copy(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBarButton::Copy(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _CommandBarButton::CopyFace()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _CommandBarButton::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _CommandBarButton::Delete(const QVariant& Temporary)
{
    void *_a[] = {0, (void*)&Temporary};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _CommandBarButton::Execute()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline Office::CommandBarControl* _CommandBarButton::Move()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBarButton::Move(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBarButton::Move(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline void _CommandBarButton::PasteFace()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _CommandBarButton::Reserved1()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _CommandBarButton::Reserved2()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void _CommandBarButton::Reserved3()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void _CommandBarButton::Reserved4()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _CommandBarButton::Reserved5()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void _CommandBarButton::Reserved6()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void _CommandBarButton::Reserved7()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void _CommandBarButton::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void _CommandBarButton::SetFocus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline IDispatch* _CommandBarButton::accChild(const QVariant& varChild)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline void _CommandBarButton::accDoDefaultAction()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
}

inline void _CommandBarButton::accDoDefaultAction(const QVariant& varChild)
{
    void *_a[] = {0, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
}

inline int _CommandBarButton::accHelpTopic(QString& pszHelpFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline int _CommandBarButton::accHelpTopic(QString& pszHelpFile, const QVariant& varChild)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline QVariant _CommandBarButton::accHitTest(int xLeft, int yTop)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&xLeft, (void*)&yTop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
    return qax_result;
}

inline void _CommandBarButton::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
}

inline void _CommandBarButton::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
}

inline QVariant _CommandBarButton::accNavigate(int navDir)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline QVariant _CommandBarButton::accNavigate(int navDir, const QVariant& varStart)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir, (void*)&varStart};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline void _CommandBarButton::accSelect(int flagsSelect)
{
    void *_a[] = {0, (void*)&flagsSelect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
}

inline void _CommandBarButton::accSelect(int flagsSelect, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&flagsSelect, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
}


inline IDispatch* CommandBarPopup::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool CommandBarPopup::BeginGroup() const
{
    QVariant qax_result = property("BeginGroup");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBarPopup::SetBeginGroup(bool value){ setProperty("BeginGroup", QVariant(value)); }

inline bool CommandBarPopup::BuiltIn() const
{
    QVariant qax_result = property("BuiltIn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString CommandBarPopup::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarPopup::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline Office::CommandBar* CommandBarPopup::CommandBar() const
{
    Office::CommandBar* qax_pointer = 0;
    qRegisterMetaType("CommandBar*", &qax_pointer);
    qRegisterMetaType("CommandBar", qax_pointer);
    QVariant qax_result = property("CommandBar");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBar**)qax_result.constData();
}

inline IDispatch* CommandBarPopup::Control() const
{
    QVariant qax_result = property("Control");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::CommandBarControls* CommandBarPopup::Controls() const
{
    Office::CommandBarControls* qax_pointer = 0;
    qRegisterMetaType("CommandBarControls*", &qax_pointer);
    qRegisterMetaType("CommandBarControls", qax_pointer);
    QVariant qax_result = property("Controls");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBarControls**)qax_result.constData();
}

inline int CommandBarPopup::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CommandBarPopup::DescriptionText() const
{
    QVariant qax_result = property("DescriptionText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarPopup::SetDescriptionText(const QString& value){ setProperty("DescriptionText", QVariant(value)); }

inline bool CommandBarPopup::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBarPopup::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline int CommandBarPopup::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarPopup::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int CommandBarPopup::HelpContextId() const
{
    QVariant qax_result = property("HelpContextId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarPopup::SetHelpContextId(int value){ setProperty("HelpContextId", QVariant(value)); }

inline QString CommandBarPopup::HelpFile() const
{
    QVariant qax_result = property("HelpFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarPopup::SetHelpFile(const QString& value){ setProperty("HelpFile", QVariant(value)); }

inline int CommandBarPopup::Id() const
{
    QVariant qax_result = property("Id");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBarPopup::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBarPopup::InstanceId() const
{
    QVariant qax_result = property("InstanceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool CommandBarPopup::IsPriorityDropped() const
{
    QVariant qax_result = property("IsPriorityDropped");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int CommandBarPopup::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoOLEMenuGroup CommandBarPopup::OLEMenuGroup() const
{
    QVariant qax_result = property("OLEMenuGroup");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoOLEMenuGroup*)qax_result.constData();
}
inline void CommandBarPopup::SetOLEMenuGroup(Office::MsoOLEMenuGroup value){ setProperty("OLEMenuGroup", QVariant(value)); }

inline Office::MsoControlOLEUsage CommandBarPopup::OLEUsage() const
{
    QVariant qax_result = property("OLEUsage");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlOLEUsage*)qax_result.constData();
}
inline void CommandBarPopup::SetOLEUsage(Office::MsoControlOLEUsage value){ setProperty("OLEUsage", QVariant(value)); }

inline QString CommandBarPopup::OnAction() const
{
    QVariant qax_result = property("OnAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarPopup::SetOnAction(const QString& value){ setProperty("OnAction", QVariant(value)); }

inline QString CommandBarPopup::Parameter() const
{
    QVariant qax_result = property("Parameter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarPopup::SetParameter(const QString& value){ setProperty("Parameter", QVariant(value)); }

inline Office::CommandBar* CommandBarPopup::Parent() const
{
    Office::CommandBar* qax_pointer = 0;
    qRegisterMetaType("CommandBar*", &qax_pointer);
    qRegisterMetaType("CommandBar", qax_pointer);
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBar**)qax_result.constData();
}

inline int CommandBarPopup::Priority() const
{
    QVariant qax_result = property("Priority");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarPopup::SetPriority(int value){ setProperty("Priority", QVariant(value)); }

inline QString CommandBarPopup::Tag() const
{
    QVariant qax_result = property("Tag");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarPopup::SetTag(const QString& value){ setProperty("Tag", QVariant(value)); }

inline QString CommandBarPopup::TooltipText() const
{
    QVariant qax_result = property("TooltipText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarPopup::SetTooltipText(const QString& value){ setProperty("TooltipText", QVariant(value)); }

inline int CommandBarPopup::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoControlType CommandBarPopup::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlType*)qax_result.constData();
}

inline bool CommandBarPopup::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBarPopup::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline int CommandBarPopup::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarPopup::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline int CommandBarPopup::accChildCount() const
{
    QVariant qax_result = property("accChildCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CommandBarPopup::accDefaultAction() const
{
    QVariant qax_result = property("accDefaultAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CommandBarPopup::accDescription() const
{
    QVariant qax_result = property("accDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant CommandBarPopup::accFocus() const
{
    QVariant qax_result = property("accFocus");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString CommandBarPopup::accHelp() const
{
    QVariant qax_result = property("accHelp");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CommandBarPopup::accKeyboardShortcut() const
{
    QVariant qax_result = property("accKeyboardShortcut");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant CommandBarPopup::accName() const
{
    QVariant qax_result = property("accName");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void CommandBarPopup::setAccName(const QVariant& value){ setProperty("accName", QVariant(value)); }

inline IDispatch* CommandBarPopup::accParent() const
{
    QVariant qax_result = property("accParent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QVariant CommandBarPopup::accRole() const
{
    QVariant qax_result = property("accRole");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBarPopup::accSelection() const
{
    QVariant qax_result = property("accSelection");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBarPopup::accState() const
{
    QVariant qax_result = property("accState");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBarPopup::accValue() const
{
    QVariant qax_result = property("accValue");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void CommandBarPopup::setAccValue(const QVariant& value){ setProperty("accValue", QVariant(value)); }

inline Office::CommandBarControl* CommandBarPopup::Copy()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarPopup::Copy(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarPopup::Copy(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void CommandBarPopup::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void CommandBarPopup::Delete(const QVariant& Temporary)
{
    void *_a[] = {0, (void*)&Temporary};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void CommandBarPopup::Execute()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Office::CommandBarControl* CommandBarPopup::Move()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarPopup::Move(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarPopup::Move(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void CommandBarPopup::Reserved1()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void CommandBarPopup::Reserved2()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void CommandBarPopup::Reserved3()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void CommandBarPopup::Reserved4()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void CommandBarPopup::Reserved5()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void CommandBarPopup::Reserved6()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void CommandBarPopup::Reserved7()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void CommandBarPopup::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void CommandBarPopup::SetFocus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline IDispatch* CommandBarPopup::accChild(const QVariant& varChild)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline void CommandBarPopup::accDoDefaultAction()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline void CommandBarPopup::accDoDefaultAction(const QVariant& varChild)
{
    void *_a[] = {0, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
}

inline int CommandBarPopup::accHelpTopic(QString& pszHelpFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline int CommandBarPopup::accHelpTopic(QString& pszHelpFile, const QVariant& varChild)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline QVariant CommandBarPopup::accHitTest(int xLeft, int yTop)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&xLeft, (void*)&yTop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline void CommandBarPopup::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
}

inline void CommandBarPopup::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
}

inline QVariant CommandBarPopup::accNavigate(int navDir)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline QVariant CommandBarPopup::accNavigate(int navDir, const QVariant& varStart)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir, (void*)&varStart};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline void CommandBarPopup::accSelect(int flagsSelect)
{
    void *_a[] = {0, (void*)&flagsSelect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
}

inline void CommandBarPopup::accSelect(int flagsSelect, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&flagsSelect, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
}


inline IDispatch* _CommandBarComboBox::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool _CommandBarComboBox::BeginGroup() const
{
    QVariant qax_result = property("BeginGroup");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBarComboBox::SetBeginGroup(bool value){ setProperty("BeginGroup", QVariant(value)); }

inline bool _CommandBarComboBox::BuiltIn() const
{
    QVariant qax_result = property("BuiltIn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _CommandBarComboBox::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarComboBox::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline IDispatch* _CommandBarComboBox::Control() const
{
    QVariant qax_result = property("Control");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _CommandBarComboBox::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _CommandBarComboBox::DescriptionText() const
{
    QVariant qax_result = property("DescriptionText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarComboBox::SetDescriptionText(const QString& value){ setProperty("DescriptionText", QVariant(value)); }

inline int _CommandBarComboBox::DropDownLines() const
{
    QVariant qax_result = property("DropDownLines");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarComboBox::SetDropDownLines(int value){ setProperty("DropDownLines", QVariant(value)); }

inline int _CommandBarComboBox::DropDownWidth() const
{
    QVariant qax_result = property("DropDownWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarComboBox::SetDropDownWidth(int value){ setProperty("DropDownWidth", QVariant(value)); }

inline bool _CommandBarComboBox::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBarComboBox::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline int _CommandBarComboBox::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarComboBox::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int _CommandBarComboBox::HelpContextId() const
{
    QVariant qax_result = property("HelpContextId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarComboBox::SetHelpContextId(int value){ setProperty("HelpContextId", QVariant(value)); }

inline QString _CommandBarComboBox::HelpFile() const
{
    QVariant qax_result = property("HelpFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarComboBox::SetHelpFile(const QString& value){ setProperty("HelpFile", QVariant(value)); }

inline int _CommandBarComboBox::Id() const
{
    QVariant qax_result = property("Id");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CommandBarComboBox::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CommandBarComboBox::InstanceId() const
{
    QVariant qax_result = property("InstanceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool _CommandBarComboBox::IsPriorityDropped() const
{
    QVariant qax_result = property("IsPriorityDropped");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int _CommandBarComboBox::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CommandBarComboBox::ListCount() const
{
    QVariant qax_result = property("ListCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CommandBarComboBox::ListHeaderCount() const
{
    QVariant qax_result = property("ListHeaderCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarComboBox::SetListHeaderCount(int value){ setProperty("ListHeaderCount", QVariant(value)); }

inline int _CommandBarComboBox::ListIndex() const
{
    QVariant qax_result = property("ListIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarComboBox::SetListIndex(int value){ setProperty("ListIndex", QVariant(value)); }

inline Office::MsoControlOLEUsage _CommandBarComboBox::OLEUsage() const
{
    QVariant qax_result = property("OLEUsage");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlOLEUsage*)qax_result.constData();
}
inline void _CommandBarComboBox::SetOLEUsage(Office::MsoControlOLEUsage value){ setProperty("OLEUsage", QVariant(value)); }

inline QString _CommandBarComboBox::OnAction() const
{
    QVariant qax_result = property("OnAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarComboBox::SetOnAction(const QString& value){ setProperty("OnAction", QVariant(value)); }

inline QString _CommandBarComboBox::Parameter() const
{
    QVariant qax_result = property("Parameter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarComboBox::SetParameter(const QString& value){ setProperty("Parameter", QVariant(value)); }

inline Office::CommandBar* _CommandBarComboBox::Parent() const
{
    Office::CommandBar* qax_pointer = 0;
    qRegisterMetaType("CommandBar*", &qax_pointer);
    qRegisterMetaType("CommandBar", qax_pointer);
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBar**)qax_result.constData();
}

inline int _CommandBarComboBox::Priority() const
{
    QVariant qax_result = property("Priority");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarComboBox::SetPriority(int value){ setProperty("Priority", QVariant(value)); }

inline Office::MsoComboStyle _CommandBarComboBox::Style() const
{
    QVariant qax_result = property("Style");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoComboStyle*)qax_result.constData();
}
inline void _CommandBarComboBox::SetStyle(Office::MsoComboStyle value){ setProperty("Style", QVariant(value)); }

inline QString _CommandBarComboBox::Tag() const
{
    QVariant qax_result = property("Tag");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarComboBox::SetTag(const QString& value){ setProperty("Tag", QVariant(value)); }

inline QString _CommandBarComboBox::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarComboBox::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline QString _CommandBarComboBox::TooltipText() const
{
    QVariant qax_result = property("TooltipText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarComboBox::SetTooltipText(const QString& value){ setProperty("TooltipText", QVariant(value)); }

inline int _CommandBarComboBox::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoControlType _CommandBarComboBox::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlType*)qax_result.constData();
}

inline bool _CommandBarComboBox::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBarComboBox::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline int _CommandBarComboBox::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarComboBox::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline int _CommandBarComboBox::accChildCount() const
{
    QVariant qax_result = property("accChildCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _CommandBarComboBox::accDefaultAction() const
{
    QVariant qax_result = property("accDefaultAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CommandBarComboBox::accDescription() const
{
    QVariant qax_result = property("accDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant _CommandBarComboBox::accFocus() const
{
    QVariant qax_result = property("accFocus");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString _CommandBarComboBox::accHelp() const
{
    QVariant qax_result = property("accHelp");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CommandBarComboBox::accKeyboardShortcut() const
{
    QVariant qax_result = property("accKeyboardShortcut");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant _CommandBarComboBox::accName() const
{
    QVariant qax_result = property("accName");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _CommandBarComboBox::setAccName(const QVariant& value){ setProperty("accName", QVariant(value)); }

inline IDispatch* _CommandBarComboBox::accParent() const
{
    QVariant qax_result = property("accParent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QVariant _CommandBarComboBox::accRole() const
{
    QVariant qax_result = property("accRole");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant _CommandBarComboBox::accSelection() const
{
    QVariant qax_result = property("accSelection");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant _CommandBarComboBox::accState() const
{
    QVariant qax_result = property("accState");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant _CommandBarComboBox::accValue() const
{
    QVariant qax_result = property("accValue");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _CommandBarComboBox::setAccValue(const QVariant& value){ setProperty("accValue", QVariant(value)); }

inline void _CommandBarComboBox::AddItem(const QString& Text)
{
    void *_a[] = {0, (void*)&Text};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void _CommandBarComboBox::AddItem(const QString& Text, const QVariant& Index)
{
    void *_a[] = {0, (void*)&Text, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _CommandBarComboBox::Clear()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline Office::CommandBarControl* _CommandBarComboBox::Copy()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBarComboBox::Copy(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBarComboBox::Copy(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void _CommandBarComboBox::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _CommandBarComboBox::Delete(const QVariant& Temporary)
{
    void *_a[] = {0, (void*)&Temporary};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void _CommandBarComboBox::Execute()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline QString _CommandBarComboBox::List(int Index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBarComboBox::Move()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBarComboBox::Move(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBarComboBox::Move(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void _CommandBarComboBox::RemoveItem(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void _CommandBarComboBox::Reserved1()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _CommandBarComboBox::Reserved2()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void _CommandBarComboBox::Reserved3()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void _CommandBarComboBox::Reserved4()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void _CommandBarComboBox::Reserved5()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void _CommandBarComboBox::Reserved6()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void _CommandBarComboBox::Reserved7()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void _CommandBarComboBox::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void _CommandBarComboBox::SetFocus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline int _CommandBarComboBox::SetList(int Index, const QString& rhs)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index, (void*)&rhs};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline IDispatch* _CommandBarComboBox::accChild(const QVariant& varChild)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline void _CommandBarComboBox::accDoDefaultAction()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
}

inline void _CommandBarComboBox::accDoDefaultAction(const QVariant& varChild)
{
    void *_a[] = {0, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
}

inline int _CommandBarComboBox::accHelpTopic(QString& pszHelpFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
    return qax_result;
}

inline int _CommandBarComboBox::accHelpTopic(QString& pszHelpFile, const QVariant& varChild)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
    return qax_result;
}

inline QVariant _CommandBarComboBox::accHitTest(int xLeft, int yTop)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&xLeft, (void*)&yTop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
    return qax_result;
}

inline void _CommandBarComboBox::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
}

inline void _CommandBarComboBox::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
}

inline QVariant _CommandBarComboBox::accNavigate(int navDir)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
    return qax_result;
}

inline QVariant _CommandBarComboBox::accNavigate(int navDir, const QVariant& varStart)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir, (void*)&varStart};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
    return qax_result;
}

inline void _CommandBarComboBox::accSelect(int flagsSelect)
{
    void *_a[] = {0, (void*)&flagsSelect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
}

inline void _CommandBarComboBox::accSelect(int flagsSelect, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&flagsSelect, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
}


inline IDispatch* _CommandBarActiveX::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool _CommandBarActiveX::BeginGroup() const
{
    QVariant qax_result = property("BeginGroup");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBarActiveX::SetBeginGroup(bool value){ setProperty("BeginGroup", QVariant(value)); }

inline bool _CommandBarActiveX::BuiltIn() const
{
    QVariant qax_result = property("BuiltIn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _CommandBarActiveX::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarActiveX::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline IDispatch* _CommandBarActiveX::Control() const
{
    QVariant qax_result = property("Control");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString _CommandBarActiveX::ControlCLSID() const
{
    QVariant qax_result = property("ControlCLSID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarActiveX::SetControlCLSID(const QString& value){ setProperty("ControlCLSID", QVariant(value)); }

inline int _CommandBarActiveX::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _CommandBarActiveX::DescriptionText() const
{
    QVariant qax_result = property("DescriptionText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarActiveX::SetDescriptionText(const QString& value){ setProperty("DescriptionText", QVariant(value)); }

inline bool _CommandBarActiveX::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBarActiveX::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline int _CommandBarActiveX::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarActiveX::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int _CommandBarActiveX::HelpContextId() const
{
    QVariant qax_result = property("HelpContextId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarActiveX::SetHelpContextId(int value){ setProperty("HelpContextId", QVariant(value)); }

inline QString _CommandBarActiveX::HelpFile() const
{
    QVariant qax_result = property("HelpFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarActiveX::SetHelpFile(const QString& value){ setProperty("HelpFile", QVariant(value)); }

inline int _CommandBarActiveX::Id() const
{
    QVariant qax_result = property("Id");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CommandBarActiveX::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IUnknown* _CommandBarActiveX::InitWith() const
{
    QVariant qax_result = property("InitWith");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}
inline void _CommandBarActiveX::SetInitWith(IUnknown* value){
    int typeId = qRegisterMetaType("IUnknown*", &value);
    setProperty("InitWith", QVariant(typeId, &value));
}

inline int _CommandBarActiveX::InstanceId() const
{
    QVariant qax_result = property("InstanceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool _CommandBarActiveX::IsPriorityDropped() const
{
    QVariant qax_result = property("IsPriorityDropped");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int _CommandBarActiveX::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoControlOLEUsage _CommandBarActiveX::OLEUsage() const
{
    QVariant qax_result = property("OLEUsage");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlOLEUsage*)qax_result.constData();
}
inline void _CommandBarActiveX::SetOLEUsage(Office::MsoControlOLEUsage value){ setProperty("OLEUsage", QVariant(value)); }

inline QString _CommandBarActiveX::OnAction() const
{
    QVariant qax_result = property("OnAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarActiveX::SetOnAction(const QString& value){ setProperty("OnAction", QVariant(value)); }

inline QString _CommandBarActiveX::Parameter() const
{
    QVariant qax_result = property("Parameter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarActiveX::SetParameter(const QString& value){ setProperty("Parameter", QVariant(value)); }

inline Office::CommandBar* _CommandBarActiveX::Parent() const
{
    Office::CommandBar* qax_pointer = 0;
    qRegisterMetaType("CommandBar*", &qax_pointer);
    qRegisterMetaType("CommandBar", qax_pointer);
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBar**)qax_result.constData();
}

inline int _CommandBarActiveX::Priority() const
{
    QVariant qax_result = property("Priority");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarActiveX::SetPriority(int value){ setProperty("Priority", QVariant(value)); }

inline QString _CommandBarActiveX::Tag() const
{
    QVariant qax_result = property("Tag");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarActiveX::SetTag(const QString& value){ setProperty("Tag", QVariant(value)); }

inline QString _CommandBarActiveX::TooltipText() const
{
    QVariant qax_result = property("TooltipText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CommandBarActiveX::SetTooltipText(const QString& value){ setProperty("TooltipText", QVariant(value)); }

inline int _CommandBarActiveX::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoControlType _CommandBarActiveX::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlType*)qax_result.constData();
}

inline bool _CommandBarActiveX::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CommandBarActiveX::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline int _CommandBarActiveX::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CommandBarActiveX::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline int _CommandBarActiveX::accChildCount() const
{
    QVariant qax_result = property("accChildCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _CommandBarActiveX::accDefaultAction() const
{
    QVariant qax_result = property("accDefaultAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CommandBarActiveX::accDescription() const
{
    QVariant qax_result = property("accDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant _CommandBarActiveX::accFocus() const
{
    QVariant qax_result = property("accFocus");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString _CommandBarActiveX::accHelp() const
{
    QVariant qax_result = property("accHelp");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CommandBarActiveX::accKeyboardShortcut() const
{
    QVariant qax_result = property("accKeyboardShortcut");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant _CommandBarActiveX::accName() const
{
    QVariant qax_result = property("accName");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _CommandBarActiveX::setAccName(const QVariant& value){ setProperty("accName", QVariant(value)); }

inline IDispatch* _CommandBarActiveX::accParent() const
{
    QVariant qax_result = property("accParent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QVariant _CommandBarActiveX::accRole() const
{
    QVariant qax_result = property("accRole");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant _CommandBarActiveX::accSelection() const
{
    QVariant qax_result = property("accSelection");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant _CommandBarActiveX::accState() const
{
    QVariant qax_result = property("accState");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant _CommandBarActiveX::accValue() const
{
    QVariant qax_result = property("accValue");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _CommandBarActiveX::setAccValue(const QVariant& value){ setProperty("accValue", QVariant(value)); }

inline Office::CommandBarControl* _CommandBarActiveX::Copy()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBarActiveX::Copy(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBarActiveX::Copy(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _CommandBarActiveX::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _CommandBarActiveX::Delete(const QVariant& Temporary)
{
    void *_a[] = {0, (void*)&Temporary};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _CommandBarActiveX::EnsureControl()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _CommandBarActiveX::Execute()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline Office::CommandBarControl* _CommandBarActiveX::Move()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBarActiveX::Move(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline Office::CommandBarControl* _CommandBarActiveX::Move(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline IUnknown* _CommandBarActiveX::QueryControlInterface(const QString& bstrIid)
{
    IUnknown* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&bstrIid};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void _CommandBarActiveX::Reserved1()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _CommandBarActiveX::Reserved2()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void _CommandBarActiveX::Reserved3()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void _CommandBarActiveX::Reserved4()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _CommandBarActiveX::Reserved5()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void _CommandBarActiveX::Reserved6()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void _CommandBarActiveX::Reserved7()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void _CommandBarActiveX::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void _CommandBarActiveX::SetFocus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void _CommandBarActiveX::SetInnerObjectFactory(IUnknown* pUnk)
{
    void *_a[] = {0, (void*)&pUnk};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline IDispatch* _CommandBarActiveX::accChild(const QVariant& varChild)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline void _CommandBarActiveX::accDoDefaultAction()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void _CommandBarActiveX::accDoDefaultAction(const QVariant& varChild)
{
    void *_a[] = {0, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline int _CommandBarActiveX::accHelpTopic(QString& pszHelpFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline int _CommandBarActiveX::accHelpTopic(QString& pszHelpFile, const QVariant& varChild)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline QVariant _CommandBarActiveX::accHitTest(int xLeft, int yTop)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&xLeft, (void*)&yTop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline void _CommandBarActiveX::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
}

inline void _CommandBarActiveX::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
}

inline QVariant _CommandBarActiveX::accNavigate(int navDir)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
    return qax_result;
}

inline QVariant _CommandBarActiveX::accNavigate(int navDir, const QVariant& varStart)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir, (void*)&varStart};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
    return qax_result;
}

inline void _CommandBarActiveX::accSelect(int flagsSelect)
{
    void *_a[] = {0, (void*)&flagsSelect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
}

inline void _CommandBarActiveX::accSelect(int flagsSelect, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&flagsSelect, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
}


inline IDispatch* Adjustments::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int Adjustments::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int Adjustments::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Adjustments::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline double Adjustments::Item(int Index)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int Adjustments::SetItem(int Index, double rhs)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index, (void*)&rhs};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Office::MsoTriState CalloutFormat::Accent() const
{
    QVariant qax_result = property("Accent");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void CalloutFormat::SetAccent(Office::MsoTriState value){ setProperty("Accent", QVariant(value)); }

inline Office::MsoCalloutAngleType CalloutFormat::Angle() const
{
    QVariant qax_result = property("Angle");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoCalloutAngleType*)qax_result.constData();
}
inline void CalloutFormat::SetAngle(Office::MsoCalloutAngleType value){ setProperty("Angle", QVariant(value)); }

inline IDispatch* CalloutFormat::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoTriState CalloutFormat::AutoAttach() const
{
    QVariant qax_result = property("AutoAttach");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void CalloutFormat::SetAutoAttach(Office::MsoTriState value){ setProperty("AutoAttach", QVariant(value)); }

inline Office::MsoTriState CalloutFormat::AutoLength() const
{
    QVariant qax_result = property("AutoLength");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline Office::MsoTriState CalloutFormat::Border() const
{
    QVariant qax_result = property("Border");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void CalloutFormat::SetBorder(Office::MsoTriState value){ setProperty("Border", QVariant(value)); }

inline int CalloutFormat::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline double CalloutFormat::Drop() const
{
    QVariant qax_result = property("Drop");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}

inline Office::MsoCalloutDropType CalloutFormat::DropType() const
{
    QVariant qax_result = property("DropType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoCalloutDropType*)qax_result.constData();
}

inline double CalloutFormat::Gap() const
{
    QVariant qax_result = property("Gap");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void CalloutFormat::SetGap(double value){ setProperty("Gap", QVariant(value)); }

inline double CalloutFormat::Length() const
{
    QVariant qax_result = property("Length");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}

inline IDispatch* CalloutFormat::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoCalloutType CalloutFormat::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoCalloutType*)qax_result.constData();
}
inline void CalloutFormat::SetType(Office::MsoCalloutType value){ setProperty("Type", QVariant(value)); }

inline void CalloutFormat::AutomaticLength()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void CalloutFormat::CustomDrop(double Drop)
{
    void *_a[] = {0, (void*)&Drop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void CalloutFormat::CustomLength(double Length)
{
    void *_a[] = {0, (void*)&Length};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void CalloutFormat::PresetDrop(Office::MsoCalloutDropType DropType)
{
    void *_a[] = {0, (void*)&DropType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline IDispatch* ColorFormat::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int ColorFormat::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* ColorFormat::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int ColorFormat::RGB() const
{
    QVariant qax_result = property("RGB");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ColorFormat::SetRGB(int value){ setProperty("RGB", QVariant(value)); }

inline int ColorFormat::SchemeColor() const
{
    QVariant qax_result = property("SchemeColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ColorFormat::SetSchemeColor(int value){ setProperty("SchemeColor", QVariant(value)); }

inline double ColorFormat::TintAndShade() const
{
    QVariant qax_result = property("TintAndShade");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void ColorFormat::SetTintAndShade(double value){ setProperty("TintAndShade", QVariant(value)); }

inline Office::MsoColorType ColorFormat::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoColorType*)qax_result.constData();
}


inline IDispatch* ConnectorFormat::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoTriState ConnectorFormat::BeginConnected() const
{
    QVariant qax_result = property("BeginConnected");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline Office::Shape* ConnectorFormat::BeginConnectedShape() const
{
    Office::Shape* qax_pointer = 0;
    qRegisterMetaType("Shape*", &qax_pointer);
    qRegisterMetaType("Shape", qax_pointer);
    QVariant qax_result = property("BeginConnectedShape");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Shape**)qax_result.constData();
}

inline int ConnectorFormat::BeginConnectionSite() const
{
    QVariant qax_result = property("BeginConnectionSite");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int ConnectorFormat::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoTriState ConnectorFormat::EndConnected() const
{
    QVariant qax_result = property("EndConnected");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline Office::Shape* ConnectorFormat::EndConnectedShape() const
{
    Office::Shape* qax_pointer = 0;
    qRegisterMetaType("Shape*", &qax_pointer);
    qRegisterMetaType("Shape", qax_pointer);
    QVariant qax_result = property("EndConnectedShape");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Shape**)qax_result.constData();
}

inline int ConnectorFormat::EndConnectionSite() const
{
    QVariant qax_result = property("EndConnectionSite");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* ConnectorFormat::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoConnectorType ConnectorFormat::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoConnectorType*)qax_result.constData();
}
inline void ConnectorFormat::SetType(Office::MsoConnectorType value){ setProperty("Type", QVariant(value)); }

inline void ConnectorFormat::BeginConnect(Office::Shape* ConnectedShape, int ConnectionSite)
{
    void *_a[] = {0, (void*)&ConnectedShape, (void*)&ConnectionSite};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void ConnectorFormat::BeginDisconnect()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void ConnectorFormat::EndConnect(Office::Shape* ConnectedShape, int ConnectionSite)
{
    void *_a[] = {0, (void*)&ConnectedShape, (void*)&ConnectionSite};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void ConnectorFormat::EndDisconnect()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline IDispatch* FillFormat::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::ColorFormat* FillFormat::BackColor() const
{
    Office::ColorFormat* qax_pointer = 0;
    qRegisterMetaType("ColorFormat*", &qax_pointer);
    qRegisterMetaType("ColorFormat", qax_pointer);
    QVariant qax_result = property("BackColor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ColorFormat**)qax_result.constData();
}
inline void FillFormat::SetBackColor(Office::ColorFormat* value){
    int typeId = qRegisterMetaType("Office::ColorFormat*", &value);
    setProperty("BackColor", QVariant(typeId, &value));
}

inline int FillFormat::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::ColorFormat* FillFormat::ForeColor() const
{
    Office::ColorFormat* qax_pointer = 0;
    qRegisterMetaType("ColorFormat*", &qax_pointer);
    qRegisterMetaType("ColorFormat", qax_pointer);
    QVariant qax_result = property("ForeColor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ColorFormat**)qax_result.constData();
}
inline void FillFormat::SetForeColor(Office::ColorFormat* value){
    int typeId = qRegisterMetaType("Office::ColorFormat*", &value);
    setProperty("ForeColor", QVariant(typeId, &value));
}

inline Office::MsoGradientColorType FillFormat::GradientColorType() const
{
    QVariant qax_result = property("GradientColorType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoGradientColorType*)qax_result.constData();
}

inline double FillFormat::GradientDegree() const
{
    QVariant qax_result = property("GradientDegree");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}

inline Office::MsoGradientStyle FillFormat::GradientStyle() const
{
    QVariant qax_result = property("GradientStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoGradientStyle*)qax_result.constData();
}

inline int FillFormat::GradientVariant() const
{
    QVariant qax_result = property("GradientVariant");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* FillFormat::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoPatternType FillFormat::Pattern() const
{
    QVariant qax_result = property("Pattern");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoPatternType*)qax_result.constData();
}

inline Office::MsoPresetGradientType FillFormat::PresetGradientType() const
{
    QVariant qax_result = property("PresetGradientType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoPresetGradientType*)qax_result.constData();
}

inline Office::MsoPresetTexture FillFormat::PresetTexture() const
{
    QVariant qax_result = property("PresetTexture");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoPresetTexture*)qax_result.constData();
}

inline QString FillFormat::TextureName() const
{
    QVariant qax_result = property("TextureName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Office::MsoTextureType FillFormat::TextureType() const
{
    QVariant qax_result = property("TextureType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTextureType*)qax_result.constData();
}

inline double FillFormat::Transparency() const
{
    QVariant qax_result = property("Transparency");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void FillFormat::SetTransparency(double value){ setProperty("Transparency", QVariant(value)); }

inline Office::MsoFillType FillFormat::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoFillType*)qax_result.constData();
}

inline Office::MsoTriState FillFormat::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void FillFormat::SetVisible(Office::MsoTriState value){ setProperty("Visible", QVariant(value)); }

inline void FillFormat::Background()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void FillFormat::OneColorGradient(Office::MsoGradientStyle Style, int Variant, double Degree)
{
    void *_a[] = {0, (void*)&Style, (void*)&Variant, (void*)&Degree};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void FillFormat::Patterned(Office::MsoPatternType Pattern)
{
    void *_a[] = {0, (void*)&Pattern};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void FillFormat::PresetGradient(Office::MsoGradientStyle Style, int Variant, Office::MsoPresetGradientType PresetGradientType)
{
    void *_a[] = {0, (void*)&Style, (void*)&Variant, (void*)&PresetGradientType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void FillFormat::PresetTextured(Office::MsoPresetTexture PresetTexture)
{
    void *_a[] = {0, (void*)&PresetTexture};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void FillFormat::Solid()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void FillFormat::TwoColorGradient(Office::MsoGradientStyle Style, int Variant)
{
    void *_a[] = {0, (void*)&Style, (void*)&Variant};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void FillFormat::UserPicture(const QString& PictureFile)
{
    void *_a[] = {0, (void*)&PictureFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void FillFormat::UserTextured(const QString& TextureFile)
{
    void *_a[] = {0, (void*)&TextureFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}


inline IDispatch* FreeformBuilder::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int FreeformBuilder::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* FreeformBuilder::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline void FreeformBuilder::AddNodes(Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1)
{
    void *_a[] = {0, (void*)&SegmentType, (void*)&EditingType, (void*)&X1, (void*)&Y1};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void FreeformBuilder::AddNodes(Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2)
{
    void *_a[] = {0, (void*)&SegmentType, (void*)&EditingType, (void*)&X1, (void*)&Y1, (void*)&X2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void FreeformBuilder::AddNodes(Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2, double Y2)
{
    void *_a[] = {0, (void*)&SegmentType, (void*)&EditingType, (void*)&X1, (void*)&Y1, (void*)&X2, (void*)&Y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void FreeformBuilder::AddNodes(Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2, double Y2, double X3)
{
    void *_a[] = {0, (void*)&SegmentType, (void*)&EditingType, (void*)&X1, (void*)&Y1, (void*)&X2, (void*)&Y2, (void*)&X3};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void FreeformBuilder::AddNodes(Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2, double Y2, double X3, double Y3)
{
    void *_a[] = {0, (void*)&SegmentType, (void*)&EditingType, (void*)&X1, (void*)&Y1, (void*)&X2, (void*)&Y2, (void*)&X3, (void*)&Y3};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline Office::Shape* FreeformBuilder::ConvertToShape()
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}


inline IDispatch* GroupShapes::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int GroupShapes::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int GroupShapes::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* GroupShapes::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* GroupShapes::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::Shape* GroupShapes::Item(const QVariant& Index)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::ShapeRange* GroupShapes::Range(const QVariant& Index)
{
    Office::ShapeRange* qax_result = 0;
    qRegisterMetaType("ShapeRange*", &qax_result);
    qRegisterMetaType("ShapeRange", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline IDispatch* LineFormat::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::ColorFormat* LineFormat::BackColor() const
{
    Office::ColorFormat* qax_pointer = 0;
    qRegisterMetaType("ColorFormat*", &qax_pointer);
    qRegisterMetaType("ColorFormat", qax_pointer);
    QVariant qax_result = property("BackColor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ColorFormat**)qax_result.constData();
}
inline void LineFormat::SetBackColor(Office::ColorFormat* value){
    int typeId = qRegisterMetaType("Office::ColorFormat*", &value);
    setProperty("BackColor", QVariant(typeId, &value));
}

inline Office::MsoArrowheadLength LineFormat::BeginArrowheadLength() const
{
    QVariant qax_result = property("BeginArrowheadLength");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoArrowheadLength*)qax_result.constData();
}
inline void LineFormat::SetBeginArrowheadLength(Office::MsoArrowheadLength value){ setProperty("BeginArrowheadLength", QVariant(value)); }

inline Office::MsoArrowheadStyle LineFormat::BeginArrowheadStyle() const
{
    QVariant qax_result = property("BeginArrowheadStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoArrowheadStyle*)qax_result.constData();
}
inline void LineFormat::SetBeginArrowheadStyle(Office::MsoArrowheadStyle value){ setProperty("BeginArrowheadStyle", QVariant(value)); }

inline Office::MsoArrowheadWidth LineFormat::BeginArrowheadWidth() const
{
    QVariant qax_result = property("BeginArrowheadWidth");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoArrowheadWidth*)qax_result.constData();
}
inline void LineFormat::SetBeginArrowheadWidth(Office::MsoArrowheadWidth value){ setProperty("BeginArrowheadWidth", QVariant(value)); }

inline int LineFormat::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoLineDashStyle LineFormat::DashStyle() const
{
    QVariant qax_result = property("DashStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoLineDashStyle*)qax_result.constData();
}
inline void LineFormat::SetDashStyle(Office::MsoLineDashStyle value){ setProperty("DashStyle", QVariant(value)); }

inline Office::MsoArrowheadLength LineFormat::EndArrowheadLength() const
{
    QVariant qax_result = property("EndArrowheadLength");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoArrowheadLength*)qax_result.constData();
}
inline void LineFormat::SetEndArrowheadLength(Office::MsoArrowheadLength value){ setProperty("EndArrowheadLength", QVariant(value)); }

inline Office::MsoArrowheadStyle LineFormat::EndArrowheadStyle() const
{
    QVariant qax_result = property("EndArrowheadStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoArrowheadStyle*)qax_result.constData();
}
inline void LineFormat::SetEndArrowheadStyle(Office::MsoArrowheadStyle value){ setProperty("EndArrowheadStyle", QVariant(value)); }

inline Office::MsoArrowheadWidth LineFormat::EndArrowheadWidth() const
{
    QVariant qax_result = property("EndArrowheadWidth");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoArrowheadWidth*)qax_result.constData();
}
inline void LineFormat::SetEndArrowheadWidth(Office::MsoArrowheadWidth value){ setProperty("EndArrowheadWidth", QVariant(value)); }

inline Office::ColorFormat* LineFormat::ForeColor() const
{
    Office::ColorFormat* qax_pointer = 0;
    qRegisterMetaType("ColorFormat*", &qax_pointer);
    qRegisterMetaType("ColorFormat", qax_pointer);
    QVariant qax_result = property("ForeColor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ColorFormat**)qax_result.constData();
}
inline void LineFormat::SetForeColor(Office::ColorFormat* value){
    int typeId = qRegisterMetaType("Office::ColorFormat*", &value);
    setProperty("ForeColor", QVariant(typeId, &value));
}

inline Office::MsoTriState LineFormat::InsetPen() const
{
    QVariant qax_result = property("InsetPen");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void LineFormat::SetInsetPen(Office::MsoTriState value){ setProperty("InsetPen", QVariant(value)); }

inline IDispatch* LineFormat::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoPatternType LineFormat::Pattern() const
{
    QVariant qax_result = property("Pattern");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoPatternType*)qax_result.constData();
}
inline void LineFormat::SetPattern(Office::MsoPatternType value){ setProperty("Pattern", QVariant(value)); }

inline Office::MsoLineStyle LineFormat::Style() const
{
    QVariant qax_result = property("Style");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoLineStyle*)qax_result.constData();
}
inline void LineFormat::SetStyle(Office::MsoLineStyle value){ setProperty("Style", QVariant(value)); }

inline double LineFormat::Transparency() const
{
    QVariant qax_result = property("Transparency");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void LineFormat::SetTransparency(double value){ setProperty("Transparency", QVariant(value)); }

inline Office::MsoTriState LineFormat::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void LineFormat::SetVisible(Office::MsoTriState value){ setProperty("Visible", QVariant(value)); }

inline double LineFormat::Weight() const
{
    QVariant qax_result = property("Weight");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void LineFormat::SetWeight(double value){ setProperty("Weight", QVariant(value)); }


inline IDispatch* ShapeNode::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int ShapeNode::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoEditingType ShapeNode::EditingType() const
{
    QVariant qax_result = property("EditingType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoEditingType*)qax_result.constData();
}

inline IDispatch* ShapeNode::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QVariant ShapeNode::Points() const
{
    QVariant qax_result = property("Points");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline Office::MsoSegmentType ShapeNode::SegmentType() const
{
    QVariant qax_result = property("SegmentType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoSegmentType*)qax_result.constData();
}


inline IDispatch* ShapeNodes::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int ShapeNodes::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int ShapeNodes::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* ShapeNodes::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* ShapeNodes::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline void ShapeNodes::Delete(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void ShapeNodes::Insert(int Index, Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1)
{
    void *_a[] = {0, (void*)&Index, (void*)&SegmentType, (void*)&EditingType, (void*)&X1, (void*)&Y1};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void ShapeNodes::Insert(int Index, Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2)
{
    void *_a[] = {0, (void*)&Index, (void*)&SegmentType, (void*)&EditingType, (void*)&X1, (void*)&Y1, (void*)&X2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void ShapeNodes::Insert(int Index, Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2, double Y2)
{
    void *_a[] = {0, (void*)&Index, (void*)&SegmentType, (void*)&EditingType, (void*)&X1, (void*)&Y1, (void*)&X2, (void*)&Y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void ShapeNodes::Insert(int Index, Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2, double Y2, double X3)
{
    void *_a[] = {0, (void*)&Index, (void*)&SegmentType, (void*)&EditingType, (void*)&X1, (void*)&Y1, (void*)&X2, (void*)&Y2, (void*)&X3};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void ShapeNodes::Insert(int Index, Office::MsoSegmentType SegmentType, Office::MsoEditingType EditingType, double X1, double Y1, double X2, double Y2, double X3, double Y3)
{
    void *_a[] = {0, (void*)&Index, (void*)&SegmentType, (void*)&EditingType, (void*)&X1, (void*)&Y1, (void*)&X2, (void*)&Y2, (void*)&X3, (void*)&Y3};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Office::ShapeNode* ShapeNodes::Item(const QVariant& Index)
{
    Office::ShapeNode* qax_result = 0;
    qRegisterMetaType("ShapeNode*", &qax_result);
    qRegisterMetaType("ShapeNode", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void ShapeNodes::SetEditingType(int Index, Office::MsoEditingType EditingType)
{
    void *_a[] = {0, (void*)&Index, (void*)&EditingType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void ShapeNodes::SetPosition(int Index, double X1, double Y1)
{
    void *_a[] = {0, (void*)&Index, (void*)&X1, (void*)&Y1};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void ShapeNodes::SetSegmentType(int Index, Office::MsoSegmentType SegmentType)
{
    void *_a[] = {0, (void*)&Index, (void*)&SegmentType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}


inline IDispatch* PictureFormat::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline double PictureFormat::Brightness() const
{
    QVariant qax_result = property("Brightness");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void PictureFormat::SetBrightness(double value){ setProperty("Brightness", QVariant(value)); }

inline Office::MsoPictureColorType PictureFormat::ColorType() const
{
    QVariant qax_result = property("ColorType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoPictureColorType*)qax_result.constData();
}
inline void PictureFormat::SetColorType(Office::MsoPictureColorType value){ setProperty("ColorType", QVariant(value)); }

inline double PictureFormat::Contrast() const
{
    QVariant qax_result = property("Contrast");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void PictureFormat::SetContrast(double value){ setProperty("Contrast", QVariant(value)); }

inline int PictureFormat::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline double PictureFormat::CropBottom() const
{
    QVariant qax_result = property("CropBottom");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void PictureFormat::SetCropBottom(double value){ setProperty("CropBottom", QVariant(value)); }

inline double PictureFormat::CropLeft() const
{
    QVariant qax_result = property("CropLeft");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void PictureFormat::SetCropLeft(double value){ setProperty("CropLeft", QVariant(value)); }

inline double PictureFormat::CropRight() const
{
    QVariant qax_result = property("CropRight");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void PictureFormat::SetCropRight(double value){ setProperty("CropRight", QVariant(value)); }

inline double PictureFormat::CropTop() const
{
    QVariant qax_result = property("CropTop");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void PictureFormat::SetCropTop(double value){ setProperty("CropTop", QVariant(value)); }

inline IDispatch* PictureFormat::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int PictureFormat::TransparencyColor() const
{
    QVariant qax_result = property("TransparencyColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void PictureFormat::SetTransparencyColor(int value){ setProperty("TransparencyColor", QVariant(value)); }

inline Office::MsoTriState PictureFormat::TransparentBackground() const
{
    QVariant qax_result = property("TransparentBackground");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void PictureFormat::SetTransparentBackground(Office::MsoTriState value){ setProperty("TransparentBackground", QVariant(value)); }

inline void PictureFormat::IncrementBrightness(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void PictureFormat::IncrementContrast(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline IDispatch* ShadowFormat::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int ShadowFormat::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::ColorFormat* ShadowFormat::ForeColor() const
{
    Office::ColorFormat* qax_pointer = 0;
    qRegisterMetaType("ColorFormat*", &qax_pointer);
    qRegisterMetaType("ColorFormat", qax_pointer);
    QVariant qax_result = property("ForeColor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ColorFormat**)qax_result.constData();
}
inline void ShadowFormat::SetForeColor(Office::ColorFormat* value){
    int typeId = qRegisterMetaType("Office::ColorFormat*", &value);
    setProperty("ForeColor", QVariant(typeId, &value));
}

inline Office::MsoTriState ShadowFormat::Obscured() const
{
    QVariant qax_result = property("Obscured");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void ShadowFormat::SetObscured(Office::MsoTriState value){ setProperty("Obscured", QVariant(value)); }

inline double ShadowFormat::OffsetX() const
{
    QVariant qax_result = property("OffsetX");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void ShadowFormat::SetOffsetX(double value){ setProperty("OffsetX", QVariant(value)); }

inline double ShadowFormat::OffsetY() const
{
    QVariant qax_result = property("OffsetY");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void ShadowFormat::SetOffsetY(double value){ setProperty("OffsetY", QVariant(value)); }

inline IDispatch* ShadowFormat::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline double ShadowFormat::Transparency() const
{
    QVariant qax_result = property("Transparency");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void ShadowFormat::SetTransparency(double value){ setProperty("Transparency", QVariant(value)); }

inline Office::MsoShadowType ShadowFormat::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoShadowType*)qax_result.constData();
}
inline void ShadowFormat::SetType(Office::MsoShadowType value){ setProperty("Type", QVariant(value)); }

inline Office::MsoTriState ShadowFormat::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void ShadowFormat::SetVisible(Office::MsoTriState value){ setProperty("Visible", QVariant(value)); }

inline void ShadowFormat::IncrementOffsetX(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void ShadowFormat::IncrementOffsetY(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline IDispatch* Script::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int Script::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString Script::Extended() const
{
    QVariant qax_result = property("Extended");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Script::SetExtended(const QString& value){ setProperty("Extended", QVariant(value)); }

inline QString Script::Id() const
{
    QVariant qax_result = property("Id");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Script::SetId(const QString& value){ setProperty("Id", QVariant(value)); }

inline Office::MsoScriptLanguage Script::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoScriptLanguage*)qax_result.constData();
}
inline void Script::SetLanguage(Office::MsoScriptLanguage value){ setProperty("Language", QVariant(value)); }

inline Office::MsoScriptLocation Script::Location() const
{
    QVariant qax_result = property("Location");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoScriptLocation*)qax_result.constData();
}

inline IDispatch* Script::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString Script::ScriptText() const
{
    QVariant qax_result = property("ScriptText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Script::SetScriptText(const QString& value){ setProperty("ScriptText", QVariant(value)); }

inline IDispatch* Script::Shape() const
{
    QVariant qax_result = property("Shape");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline void Script::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}


inline IDispatch* Scripts::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int Scripts::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int Scripts::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Scripts::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* Scripts::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::Script* Scripts::Add()
{
    Office::Script* qax_result = 0;
    qRegisterMetaType("Script*", &qax_result);
    qRegisterMetaType("Script", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::Script* Scripts::Add(IDispatch* Anchor)
{
    Office::Script* qax_result = 0;
    qRegisterMetaType("Script*", &qax_result);
    qRegisterMetaType("Script", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Anchor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::Script* Scripts::Add(IDispatch* Anchor, Office::MsoScriptLocation Location)
{
    Office::Script* qax_result = 0;
    qRegisterMetaType("Script*", &qax_result);
    qRegisterMetaType("Script", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Anchor, (void*)&Location};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Office::Script* Scripts::Add(IDispatch* Anchor, Office::MsoScriptLocation Location, Office::MsoScriptLanguage Language)
{
    Office::Script* qax_result = 0;
    qRegisterMetaType("Script*", &qax_result);
    qRegisterMetaType("Script", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Anchor, (void*)&Location, (void*)&Language};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Office::Script* Scripts::Add(IDispatch* Anchor, Office::MsoScriptLocation Location, Office::MsoScriptLanguage Language, const QString& Id)
{
    Office::Script* qax_result = 0;
    qRegisterMetaType("Script*", &qax_result);
    qRegisterMetaType("Script", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Anchor, (void*)&Location, (void*)&Language, (void*)&Id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Office::Script* Scripts::Add(IDispatch* Anchor, Office::MsoScriptLocation Location, Office::MsoScriptLanguage Language, const QString& Id, const QString& Extended)
{
    Office::Script* qax_result = 0;
    qRegisterMetaType("Script*", &qax_result);
    qRegisterMetaType("Script", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Anchor, (void*)&Location, (void*)&Language, (void*)&Id, (void*)&Extended};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Office::Script* Scripts::Add(IDispatch* Anchor, Office::MsoScriptLocation Location, Office::MsoScriptLanguage Language, const QString& Id, const QString& Extended, const QString& ScriptText)
{
    Office::Script* qax_result = 0;
    qRegisterMetaType("Script*", &qax_result);
    qRegisterMetaType("Script", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Anchor, (void*)&Location, (void*)&Language, (void*)&Id, (void*)&Extended, (void*)&ScriptText};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void Scripts::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline Office::Script* Scripts::Item(const QVariant& Index)
{
    Office::Script* qax_result = 0;
    qRegisterMetaType("Script*", &qax_result);
    qRegisterMetaType("Script", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}


inline Office::Adjustments* Shape::Adjustments() const
{
    Office::Adjustments* qax_pointer = 0;
    qRegisterMetaType("Adjustments*", &qax_pointer);
    qRegisterMetaType("Adjustments", qax_pointer);
    QVariant qax_result = property("Adjustments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Adjustments**)qax_result.constData();
}

inline QString Shape::AlternativeText() const
{
    QVariant qax_result = property("AlternativeText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Shape::SetAlternativeText(const QString& value){ setProperty("AlternativeText", QVariant(value)); }

inline IDispatch* Shape::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoAutoShapeType Shape::AutoShapeType() const
{
    QVariant qax_result = property("AutoShapeType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoAutoShapeType*)qax_result.constData();
}
inline void Shape::SetAutoShapeType(Office::MsoAutoShapeType value){ setProperty("AutoShapeType", QVariant(value)); }

inline Office::MsoBlackWhiteMode Shape::BlackWhiteMode() const
{
    QVariant qax_result = property("BlackWhiteMode");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoBlackWhiteMode*)qax_result.constData();
}
inline void Shape::SetBlackWhiteMode(Office::MsoBlackWhiteMode value){ setProperty("BlackWhiteMode", QVariant(value)); }

inline Office::CalloutFormat* Shape::Callout() const
{
    Office::CalloutFormat* qax_pointer = 0;
    qRegisterMetaType("CalloutFormat*", &qax_pointer);
    qRegisterMetaType("CalloutFormat", qax_pointer);
    QVariant qax_result = property("Callout");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CalloutFormat**)qax_result.constData();
}

inline Office::CanvasShapes* Shape::CanvasItems() const
{
    Office::CanvasShapes* qax_pointer = 0;
    qRegisterMetaType("CanvasShapes*", &qax_pointer);
    qRegisterMetaType("CanvasShapes", qax_pointer);
    QVariant qax_result = property("CanvasItems");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CanvasShapes**)qax_result.constData();
}

inline Office::MsoTriState Shape::Child() const
{
    QVariant qax_result = property("Child");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline int Shape::ConnectionSiteCount() const
{
    QVariant qax_result = property("ConnectionSiteCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoTriState Shape::Connector() const
{
    QVariant qax_result = property("Connector");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline Office::ConnectorFormat* Shape::ConnectorFormat() const
{
    Office::ConnectorFormat* qax_pointer = 0;
    qRegisterMetaType("ConnectorFormat*", &qax_pointer);
    qRegisterMetaType("ConnectorFormat", qax_pointer);
    QVariant qax_result = property("ConnectorFormat");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ConnectorFormat**)qax_result.constData();
}

inline int Shape::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::IMsoDiagram* Shape::Diagram() const
{
    Office::IMsoDiagram* qax_pointer = 0;
    qRegisterMetaType("IMsoDiagram*", &qax_pointer);
    qRegisterMetaType("IMsoDiagram", qax_pointer);
    QVariant qax_result = property("Diagram");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::IMsoDiagram**)qax_result.constData();
}

inline Office::DiagramNode* Shape::DiagramNode() const
{
    Office::DiagramNode* qax_pointer = 0;
    qRegisterMetaType("DiagramNode*", &qax_pointer);
    qRegisterMetaType("DiagramNode", qax_pointer);
    QVariant qax_result = property("DiagramNode");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::DiagramNode**)qax_result.constData();
}

inline Office::FillFormat* Shape::Fill() const
{
    Office::FillFormat* qax_pointer = 0;
    qRegisterMetaType("FillFormat*", &qax_pointer);
    qRegisterMetaType("FillFormat", qax_pointer);
    QVariant qax_result = property("Fill");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::FillFormat**)qax_result.constData();
}

inline Office::GroupShapes* Shape::GroupItems() const
{
    Office::GroupShapes* qax_pointer = 0;
    qRegisterMetaType("GroupShapes*", &qax_pointer);
    qRegisterMetaType("GroupShapes", qax_pointer);
    QVariant qax_result = property("GroupItems");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::GroupShapes**)qax_result.constData();
}

inline Office::MsoTriState Shape::HasDiagram() const
{
    QVariant qax_result = property("HasDiagram");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline Office::MsoTriState Shape::HasDiagramNode() const
{
    QVariant qax_result = property("HasDiagramNode");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline double Shape::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void Shape::SetHeight(double value){ setProperty("Height", QVariant(value)); }

inline Office::MsoTriState Shape::HorizontalFlip() const
{
    QVariant qax_result = property("HorizontalFlip");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline int Shape::Id() const
{
    QVariant qax_result = property("Id");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline double Shape::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void Shape::SetLeft(double value){ setProperty("Left", QVariant(value)); }

inline Office::LineFormat* Shape::Line() const
{
    Office::LineFormat* qax_pointer = 0;
    qRegisterMetaType("LineFormat*", &qax_pointer);
    qRegisterMetaType("LineFormat", qax_pointer);
    QVariant qax_result = property("Line");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::LineFormat**)qax_result.constData();
}

inline Office::MsoTriState Shape::LockAspectRatio() const
{
    QVariant qax_result = property("LockAspectRatio");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void Shape::SetLockAspectRatio(Office::MsoTriState value){ setProperty("LockAspectRatio", QVariant(value)); }

inline QString Shape::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Shape::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline Office::ShapeNodes* Shape::Nodes() const
{
    Office::ShapeNodes* qax_pointer = 0;
    qRegisterMetaType("ShapeNodes*", &qax_pointer);
    qRegisterMetaType("ShapeNodes", qax_pointer);
    QVariant qax_result = property("Nodes");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ShapeNodes**)qax_result.constData();
}

inline IDispatch* Shape::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::Shape* Shape::ParentGroup() const
{
    Office::Shape* qax_pointer = 0;
    qRegisterMetaType("Shape*", &qax_pointer);
    qRegisterMetaType("Shape", qax_pointer);
    QVariant qax_result = property("ParentGroup");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Shape**)qax_result.constData();
}

inline Office::PictureFormat* Shape::PictureFormat() const
{
    Office::PictureFormat* qax_pointer = 0;
    qRegisterMetaType("PictureFormat*", &qax_pointer);
    qRegisterMetaType("PictureFormat", qax_pointer);
    QVariant qax_result = property("PictureFormat");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::PictureFormat**)qax_result.constData();
}

inline QString Shape::RTF() const
{
    QVariant qax_result = property("RTF");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Shape::SetRTF(const QString& value){ setProperty("RTF", QVariant(value)); }

inline double Shape::Rotation() const
{
    QVariant qax_result = property("Rotation");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void Shape::SetRotation(double value){ setProperty("Rotation", QVariant(value)); }

inline Office::Script* Shape::Script() const
{
    Office::Script* qax_pointer = 0;
    qRegisterMetaType("Script*", &qax_pointer);
    qRegisterMetaType("Script", qax_pointer);
    QVariant qax_result = property("Script");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Script**)qax_result.constData();
}

inline Office::ShadowFormat* Shape::Shadow() const
{
    Office::ShadowFormat* qax_pointer = 0;
    qRegisterMetaType("ShadowFormat*", &qax_pointer);
    qRegisterMetaType("ShadowFormat", qax_pointer);
    QVariant qax_result = property("Shadow");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ShadowFormat**)qax_result.constData();
}

inline Office::TextEffectFormat* Shape::TextEffect() const
{
    Office::TextEffectFormat* qax_pointer = 0;
    qRegisterMetaType("TextEffectFormat*", &qax_pointer);
    qRegisterMetaType("TextEffectFormat", qax_pointer);
    QVariant qax_result = property("TextEffect");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::TextEffectFormat**)qax_result.constData();
}

inline Office::TextFrame* Shape::TextFrame() const
{
    Office::TextFrame* qax_pointer = 0;
    qRegisterMetaType("TextFrame*", &qax_pointer);
    qRegisterMetaType("TextFrame", qax_pointer);
    QVariant qax_result = property("TextFrame");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::TextFrame**)qax_result.constData();
}

inline Office::ThreeDFormat* Shape::ThreeD() const
{
    Office::ThreeDFormat* qax_pointer = 0;
    qRegisterMetaType("ThreeDFormat*", &qax_pointer);
    qRegisterMetaType("ThreeDFormat", qax_pointer);
    QVariant qax_result = property("ThreeD");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ThreeDFormat**)qax_result.constData();
}

inline double Shape::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void Shape::SetTop(double value){ setProperty("Top", QVariant(value)); }

inline Office::MsoShapeType Shape::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoShapeType*)qax_result.constData();
}

inline Office::MsoTriState Shape::VerticalFlip() const
{
    QVariant qax_result = property("VerticalFlip");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline QVariant Shape::Vertices() const
{
    QVariant qax_result = property("Vertices");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline Office::MsoTriState Shape::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void Shape::SetVisible(Office::MsoTriState value){ setProperty("Visible", QVariant(value)); }

inline double Shape::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void Shape::SetWidth(double value){ setProperty("Width", QVariant(value)); }

inline int Shape::ZOrderPosition() const
{
    QVariant qax_result = property("ZOrderPosition");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline void Shape::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void Shape::CanvasCropBottom(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void Shape::CanvasCropLeft(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void Shape::CanvasCropRight(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void Shape::CanvasCropTop(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void Shape::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Office::Shape* Shape::Duplicate()
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void Shape::Flip(Office::MsoFlipCmd FlipCmd)
{
    void *_a[] = {0, (void*)&FlipCmd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void Shape::IncrementLeft(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void Shape::IncrementRotation(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void Shape::IncrementTop(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void Shape::PickUp()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void Shape::RerouteConnections()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void Shape::ScaleHeight(double Factor, Office::MsoTriState RelativeToOriginalSize)
{
    void *_a[] = {0, (void*)&Factor, (void*)&RelativeToOriginalSize};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void Shape::ScaleHeight(double Factor, Office::MsoTriState RelativeToOriginalSize, Office::MsoScaleFrom fScale)
{
    void *_a[] = {0, (void*)&Factor, (void*)&RelativeToOriginalSize, (void*)&fScale};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void Shape::ScaleWidth(double Factor, Office::MsoTriState RelativeToOriginalSize)
{
    void *_a[] = {0, (void*)&Factor, (void*)&RelativeToOriginalSize};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void Shape::ScaleWidth(double Factor, Office::MsoTriState RelativeToOriginalSize, Office::MsoScaleFrom fScale)
{
    void *_a[] = {0, (void*)&Factor, (void*)&RelativeToOriginalSize, (void*)&fScale};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void Shape::Select()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void Shape::Select(const QVariant& Replace)
{
    void *_a[] = {0, (void*)&Replace};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void Shape::SetShapesDefaultProperties()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline Office::ShapeRange* Shape::Ungroup()
{
    Office::ShapeRange* qax_result = 0;
    qRegisterMetaType("ShapeRange*", &qax_result);
    qRegisterMetaType("ShapeRange", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline void Shape::ZOrder(Office::MsoZOrderCmd ZOrderCmd)
{
    void *_a[] = {0, (void*)&ZOrderCmd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}


inline Office::Adjustments* ShapeRange::Adjustments() const
{
    Office::Adjustments* qax_pointer = 0;
    qRegisterMetaType("Adjustments*", &qax_pointer);
    qRegisterMetaType("Adjustments", qax_pointer);
    QVariant qax_result = property("Adjustments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Adjustments**)qax_result.constData();
}

inline QString ShapeRange::AlternativeText() const
{
    QVariant qax_result = property("AlternativeText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ShapeRange::SetAlternativeText(const QString& value){ setProperty("AlternativeText", QVariant(value)); }

inline IDispatch* ShapeRange::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoAutoShapeType ShapeRange::AutoShapeType() const
{
    QVariant qax_result = property("AutoShapeType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoAutoShapeType*)qax_result.constData();
}
inline void ShapeRange::SetAutoShapeType(Office::MsoAutoShapeType value){ setProperty("AutoShapeType", QVariant(value)); }

inline Office::MsoBlackWhiteMode ShapeRange::BlackWhiteMode() const
{
    QVariant qax_result = property("BlackWhiteMode");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoBlackWhiteMode*)qax_result.constData();
}
inline void ShapeRange::SetBlackWhiteMode(Office::MsoBlackWhiteMode value){ setProperty("BlackWhiteMode", QVariant(value)); }

inline Office::CalloutFormat* ShapeRange::Callout() const
{
    Office::CalloutFormat* qax_pointer = 0;
    qRegisterMetaType("CalloutFormat*", &qax_pointer);
    qRegisterMetaType("CalloutFormat", qax_pointer);
    QVariant qax_result = property("Callout");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CalloutFormat**)qax_result.constData();
}

inline Office::CanvasShapes* ShapeRange::CanvasItems() const
{
    Office::CanvasShapes* qax_pointer = 0;
    qRegisterMetaType("CanvasShapes*", &qax_pointer);
    qRegisterMetaType("CanvasShapes", qax_pointer);
    QVariant qax_result = property("CanvasItems");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CanvasShapes**)qax_result.constData();
}

inline Office::MsoTriState ShapeRange::Child() const
{
    QVariant qax_result = property("Child");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline int ShapeRange::ConnectionSiteCount() const
{
    QVariant qax_result = property("ConnectionSiteCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoTriState ShapeRange::Connector() const
{
    QVariant qax_result = property("Connector");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline Office::ConnectorFormat* ShapeRange::ConnectorFormat() const
{
    Office::ConnectorFormat* qax_pointer = 0;
    qRegisterMetaType("ConnectorFormat*", &qax_pointer);
    qRegisterMetaType("ConnectorFormat", qax_pointer);
    QVariant qax_result = property("ConnectorFormat");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ConnectorFormat**)qax_result.constData();
}

inline int ShapeRange::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int ShapeRange::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::IMsoDiagram* ShapeRange::Diagram() const
{
    Office::IMsoDiagram* qax_pointer = 0;
    qRegisterMetaType("IMsoDiagram*", &qax_pointer);
    qRegisterMetaType("IMsoDiagram", qax_pointer);
    QVariant qax_result = property("Diagram");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::IMsoDiagram**)qax_result.constData();
}

inline Office::DiagramNode* ShapeRange::DiagramNode() const
{
    Office::DiagramNode* qax_pointer = 0;
    qRegisterMetaType("DiagramNode*", &qax_pointer);
    qRegisterMetaType("DiagramNode", qax_pointer);
    QVariant qax_result = property("DiagramNode");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::DiagramNode**)qax_result.constData();
}

inline Office::FillFormat* ShapeRange::Fill() const
{
    Office::FillFormat* qax_pointer = 0;
    qRegisterMetaType("FillFormat*", &qax_pointer);
    qRegisterMetaType("FillFormat", qax_pointer);
    QVariant qax_result = property("Fill");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::FillFormat**)qax_result.constData();
}

inline Office::GroupShapes* ShapeRange::GroupItems() const
{
    Office::GroupShapes* qax_pointer = 0;
    qRegisterMetaType("GroupShapes*", &qax_pointer);
    qRegisterMetaType("GroupShapes", qax_pointer);
    QVariant qax_result = property("GroupItems");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::GroupShapes**)qax_result.constData();
}

inline Office::MsoTriState ShapeRange::HasDiagram() const
{
    QVariant qax_result = property("HasDiagram");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline Office::MsoTriState ShapeRange::HasDiagramNode() const
{
    QVariant qax_result = property("HasDiagramNode");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline double ShapeRange::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void ShapeRange::SetHeight(double value){ setProperty("Height", QVariant(value)); }

inline Office::MsoTriState ShapeRange::HorizontalFlip() const
{
    QVariant qax_result = property("HorizontalFlip");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline int ShapeRange::Id() const
{
    QVariant qax_result = property("Id");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline double ShapeRange::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void ShapeRange::SetLeft(double value){ setProperty("Left", QVariant(value)); }

inline Office::LineFormat* ShapeRange::Line() const
{
    Office::LineFormat* qax_pointer = 0;
    qRegisterMetaType("LineFormat*", &qax_pointer);
    qRegisterMetaType("LineFormat", qax_pointer);
    QVariant qax_result = property("Line");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::LineFormat**)qax_result.constData();
}

inline Office::MsoTriState ShapeRange::LockAspectRatio() const
{
    QVariant qax_result = property("LockAspectRatio");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void ShapeRange::SetLockAspectRatio(Office::MsoTriState value){ setProperty("LockAspectRatio", QVariant(value)); }

inline QString ShapeRange::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ShapeRange::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline Office::ShapeNodes* ShapeRange::Nodes() const
{
    Office::ShapeNodes* qax_pointer = 0;
    qRegisterMetaType("ShapeNodes*", &qax_pointer);
    qRegisterMetaType("ShapeNodes", qax_pointer);
    QVariant qax_result = property("Nodes");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ShapeNodes**)qax_result.constData();
}

inline IDispatch* ShapeRange::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::Shape* ShapeRange::ParentGroup() const
{
    Office::Shape* qax_pointer = 0;
    qRegisterMetaType("Shape*", &qax_pointer);
    qRegisterMetaType("Shape", qax_pointer);
    QVariant qax_result = property("ParentGroup");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Shape**)qax_result.constData();
}

inline Office::PictureFormat* ShapeRange::PictureFormat() const
{
    Office::PictureFormat* qax_pointer = 0;
    qRegisterMetaType("PictureFormat*", &qax_pointer);
    qRegisterMetaType("PictureFormat", qax_pointer);
    QVariant qax_result = property("PictureFormat");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::PictureFormat**)qax_result.constData();
}

inline QString ShapeRange::RTF() const
{
    QVariant qax_result = property("RTF");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ShapeRange::SetRTF(const QString& value){ setProperty("RTF", QVariant(value)); }

inline double ShapeRange::Rotation() const
{
    QVariant qax_result = property("Rotation");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void ShapeRange::SetRotation(double value){ setProperty("Rotation", QVariant(value)); }

inline Office::Script* ShapeRange::Script() const
{
    Office::Script* qax_pointer = 0;
    qRegisterMetaType("Script*", &qax_pointer);
    qRegisterMetaType("Script", qax_pointer);
    QVariant qax_result = property("Script");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Script**)qax_result.constData();
}

inline Office::ShadowFormat* ShapeRange::Shadow() const
{
    Office::ShadowFormat* qax_pointer = 0;
    qRegisterMetaType("ShadowFormat*", &qax_pointer);
    qRegisterMetaType("ShadowFormat", qax_pointer);
    QVariant qax_result = property("Shadow");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ShadowFormat**)qax_result.constData();
}

inline Office::TextEffectFormat* ShapeRange::TextEffect() const
{
    Office::TextEffectFormat* qax_pointer = 0;
    qRegisterMetaType("TextEffectFormat*", &qax_pointer);
    qRegisterMetaType("TextEffectFormat", qax_pointer);
    QVariant qax_result = property("TextEffect");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::TextEffectFormat**)qax_result.constData();
}

inline Office::TextFrame* ShapeRange::TextFrame() const
{
    Office::TextFrame* qax_pointer = 0;
    qRegisterMetaType("TextFrame*", &qax_pointer);
    qRegisterMetaType("TextFrame", qax_pointer);
    QVariant qax_result = property("TextFrame");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::TextFrame**)qax_result.constData();
}

inline Office::ThreeDFormat* ShapeRange::ThreeD() const
{
    Office::ThreeDFormat* qax_pointer = 0;
    qRegisterMetaType("ThreeDFormat*", &qax_pointer);
    qRegisterMetaType("ThreeDFormat", qax_pointer);
    QVariant qax_result = property("ThreeD");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ThreeDFormat**)qax_result.constData();
}

inline double ShapeRange::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void ShapeRange::SetTop(double value){ setProperty("Top", QVariant(value)); }

inline Office::MsoShapeType ShapeRange::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoShapeType*)qax_result.constData();
}

inline Office::MsoTriState ShapeRange::VerticalFlip() const
{
    QVariant qax_result = property("VerticalFlip");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}

inline QVariant ShapeRange::Vertices() const
{
    QVariant qax_result = property("Vertices");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline Office::MsoTriState ShapeRange::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void ShapeRange::SetVisible(Office::MsoTriState value){ setProperty("Visible", QVariant(value)); }

inline double ShapeRange::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void ShapeRange::SetWidth(double value){ setProperty("Width", QVariant(value)); }

inline int ShapeRange::ZOrderPosition() const
{
    QVariant qax_result = property("ZOrderPosition");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IUnknown* ShapeRange::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline void ShapeRange::Align(Office::MsoAlignCmd AlignCmd, Office::MsoTriState RelativeTo)
{
    void *_a[] = {0, (void*)&AlignCmd, (void*)&RelativeTo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void ShapeRange::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void ShapeRange::CanvasCropBottom(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void ShapeRange::CanvasCropLeft(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void ShapeRange::CanvasCropRight(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void ShapeRange::CanvasCropTop(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void ShapeRange::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void ShapeRange::Distribute(Office::MsoDistributeCmd DistributeCmd, Office::MsoTriState RelativeTo)
{
    void *_a[] = {0, (void*)&DistributeCmd, (void*)&RelativeTo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline Office::ShapeRange* ShapeRange::Duplicate()
{
    Office::ShapeRange* qax_result = 0;
    qRegisterMetaType("ShapeRange*", &qax_result);
    qRegisterMetaType("ShapeRange", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void ShapeRange::Flip(Office::MsoFlipCmd FlipCmd)
{
    void *_a[] = {0, (void*)&FlipCmd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline Office::Shape* ShapeRange::Group()
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void ShapeRange::IncrementLeft(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void ShapeRange::IncrementRotation(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void ShapeRange::IncrementTop(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline Office::Shape* ShapeRange::Item(const QVariant& Index)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void ShapeRange::PickUp()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline Office::Shape* ShapeRange::Regroup()
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline void ShapeRange::RerouteConnections()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void ShapeRange::ScaleHeight(double Factor, Office::MsoTriState RelativeToOriginalSize)
{
    void *_a[] = {0, (void*)&Factor, (void*)&RelativeToOriginalSize};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void ShapeRange::ScaleHeight(double Factor, Office::MsoTriState RelativeToOriginalSize, Office::MsoScaleFrom fScale)
{
    void *_a[] = {0, (void*)&Factor, (void*)&RelativeToOriginalSize, (void*)&fScale};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void ShapeRange::ScaleWidth(double Factor, Office::MsoTriState RelativeToOriginalSize)
{
    void *_a[] = {0, (void*)&Factor, (void*)&RelativeToOriginalSize};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void ShapeRange::ScaleWidth(double Factor, Office::MsoTriState RelativeToOriginalSize, Office::MsoScaleFrom fScale)
{
    void *_a[] = {0, (void*)&Factor, (void*)&RelativeToOriginalSize, (void*)&fScale};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void ShapeRange::Select()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void ShapeRange::Select(const QVariant& Replace)
{
    void *_a[] = {0, (void*)&Replace};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void ShapeRange::SetShapesDefaultProperties()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline Office::ShapeRange* ShapeRange::Ungroup()
{
    Office::ShapeRange* qax_result = 0;
    qRegisterMetaType("ShapeRange*", &qax_result);
    qRegisterMetaType("ShapeRange", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline void ShapeRange::ZOrder(Office::MsoZOrderCmd ZOrderCmd)
{
    void *_a[] = {0, (void*)&ZOrderCmd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}


inline IDispatch* Shapes::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::Shape* Shapes::Background() const
{
    Office::Shape* qax_pointer = 0;
    qRegisterMetaType("Shape*", &qax_pointer);
    qRegisterMetaType("Shape", qax_pointer);
    QVariant qax_result = property("Background");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Shape**)qax_result.constData();
}

inline int Shapes::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int Shapes::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::Shape* Shapes::Default() const
{
    Office::Shape* qax_pointer = 0;
    qRegisterMetaType("Shape*", &qax_pointer);
    qRegisterMetaType("Shape", qax_pointer);
    QVariant qax_result = property("Default");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Shape**)qax_result.constData();
}

inline IDispatch* Shapes::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* Shapes::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::Shape* Shapes::AddCallout(Office::MsoCalloutType Type, double Left, double Top, double Width, double Height)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Left, (void*)&Top, (void*)&Width, (void*)&Height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::Shape* Shapes::AddCanvas(double Left, double Top, double Width, double Height)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Left, (void*)&Top, (void*)&Width, (void*)&Height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::Shape* Shapes::AddConnector(Office::MsoConnectorType Type, double BeginX, double BeginY, double EndX, double EndY)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&BeginX, (void*)&BeginY, (void*)&EndX, (void*)&EndY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Office::Shape* Shapes::AddCurve(const QVariant& SafeArrayOfPoints)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&SafeArrayOfPoints};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Office::Shape* Shapes::AddDiagram(Office::MsoDiagramType Type, double Left, double Top, double Width, double Height)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Left, (void*)&Top, (void*)&Width, (void*)&Height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Office::Shape* Shapes::AddLabel(Office::MsoTextOrientation Orientation, double Left, double Top, double Width, double Height)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Orientation, (void*)&Left, (void*)&Top, (void*)&Width, (void*)&Height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Office::Shape* Shapes::AddLine(double BeginX, double BeginY, double EndX, double EndY)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&BeginX, (void*)&BeginY, (void*)&EndX, (void*)&EndY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Office::Shape* Shapes::AddPicture(const QString& FileName, Office::MsoTriState LinkToFile, Office::MsoTriState SaveWithDocument, double Left, double Top)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&LinkToFile, (void*)&SaveWithDocument, (void*)&Left, (void*)&Top};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Office::Shape* Shapes::AddPicture(const QString& FileName, Office::MsoTriState LinkToFile, Office::MsoTriState SaveWithDocument, double Left, double Top, double Width)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&LinkToFile, (void*)&SaveWithDocument, (void*)&Left, (void*)&Top, (void*)&Width};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline Office::Shape* Shapes::AddPicture(const QString& FileName, Office::MsoTriState LinkToFile, Office::MsoTriState SaveWithDocument, double Left, double Top, double Width, double Height)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&LinkToFile, (void*)&SaveWithDocument, (void*)&Left, (void*)&Top, (void*)&Width, (void*)&Height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Office::Shape* Shapes::AddPolyline(const QVariant& SafeArrayOfPoints)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&SafeArrayOfPoints};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Office::Shape* Shapes::AddShape(Office::MsoAutoShapeType Type, double Left, double Top, double Width, double Height)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Left, (void*)&Top, (void*)&Width, (void*)&Height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Office::Shape* Shapes::AddTextEffect(Office::MsoPresetTextEffect PresetTextEffect, const QString& Text, const QString& FontName, double FontSize, Office::MsoTriState FontBold, Office::MsoTriState FontItalic, double Left, double Top)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PresetTextEffect, (void*)&Text, (void*)&FontName, (void*)&FontSize, (void*)&FontBold, (void*)&FontItalic, (void*)&Left, (void*)&Top};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Office::Shape* Shapes::AddTextbox(Office::MsoTextOrientation Orientation, double Left, double Top, double Width, double Height)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Orientation, (void*)&Left, (void*)&Top, (void*)&Width, (void*)&Height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline Office::FreeformBuilder* Shapes::BuildFreeform(Office::MsoEditingType EditingType, double X1, double Y1)
{
    Office::FreeformBuilder* qax_result = 0;
    qRegisterMetaType("FreeformBuilder*", &qax_result);
    qRegisterMetaType("FreeformBuilder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&EditingType, (void*)&X1, (void*)&Y1};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline Office::Shape* Shapes::Item(const QVariant& Index)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline Office::ShapeRange* Shapes::Range(const QVariant& Index)
{
    Office::ShapeRange* qax_result = 0;
    qRegisterMetaType("ShapeRange*", &qax_result);
    qRegisterMetaType("ShapeRange", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline void Shapes::SelectAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}


inline Office::MsoTextEffectAlignment TextEffectFormat::Alignment() const
{
    QVariant qax_result = property("Alignment");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTextEffectAlignment*)qax_result.constData();
}
inline void TextEffectFormat::SetAlignment(Office::MsoTextEffectAlignment value){ setProperty("Alignment", QVariant(value)); }

inline IDispatch* TextEffectFormat::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int TextEffectFormat::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoTriState TextEffectFormat::FontBold() const
{
    QVariant qax_result = property("FontBold");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void TextEffectFormat::SetFontBold(Office::MsoTriState value){ setProperty("FontBold", QVariant(value)); }

inline Office::MsoTriState TextEffectFormat::FontItalic() const
{
    QVariant qax_result = property("FontItalic");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void TextEffectFormat::SetFontItalic(Office::MsoTriState value){ setProperty("FontItalic", QVariant(value)); }

inline QString TextEffectFormat::FontName() const
{
    QVariant qax_result = property("FontName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TextEffectFormat::SetFontName(const QString& value){ setProperty("FontName", QVariant(value)); }

inline double TextEffectFormat::FontSize() const
{
    QVariant qax_result = property("FontSize");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void TextEffectFormat::SetFontSize(double value){ setProperty("FontSize", QVariant(value)); }

inline Office::MsoTriState TextEffectFormat::KernedPairs() const
{
    QVariant qax_result = property("KernedPairs");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void TextEffectFormat::SetKernedPairs(Office::MsoTriState value){ setProperty("KernedPairs", QVariant(value)); }

inline Office::MsoTriState TextEffectFormat::NormalizedHeight() const
{
    QVariant qax_result = property("NormalizedHeight");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void TextEffectFormat::SetNormalizedHeight(Office::MsoTriState value){ setProperty("NormalizedHeight", QVariant(value)); }

inline IDispatch* TextEffectFormat::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoPresetTextEffectShape TextEffectFormat::PresetShape() const
{
    QVariant qax_result = property("PresetShape");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoPresetTextEffectShape*)qax_result.constData();
}
inline void TextEffectFormat::SetPresetShape(Office::MsoPresetTextEffectShape value){ setProperty("PresetShape", QVariant(value)); }

inline Office::MsoPresetTextEffect TextEffectFormat::PresetTextEffect() const
{
    QVariant qax_result = property("PresetTextEffect");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoPresetTextEffect*)qax_result.constData();
}
inline void TextEffectFormat::SetPresetTextEffect(Office::MsoPresetTextEffect value){ setProperty("PresetTextEffect", QVariant(value)); }

inline Office::MsoTriState TextEffectFormat::RotatedChars() const
{
    QVariant qax_result = property("RotatedChars");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void TextEffectFormat::SetRotatedChars(Office::MsoTriState value){ setProperty("RotatedChars", QVariant(value)); }

inline QString TextEffectFormat::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TextEffectFormat::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline double TextEffectFormat::Tracking() const
{
    QVariant qax_result = property("Tracking");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void TextEffectFormat::SetTracking(double value){ setProperty("Tracking", QVariant(value)); }

inline void TextEffectFormat::ToggleVerticalText()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}


inline IDispatch* TextFrame::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int TextFrame::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline double TextFrame::MarginBottom() const
{
    QVariant qax_result = property("MarginBottom");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void TextFrame::SetMarginBottom(double value){ setProperty("MarginBottom", QVariant(value)); }

inline double TextFrame::MarginLeft() const
{
    QVariant qax_result = property("MarginLeft");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void TextFrame::SetMarginLeft(double value){ setProperty("MarginLeft", QVariant(value)); }

inline double TextFrame::MarginRight() const
{
    QVariant qax_result = property("MarginRight");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void TextFrame::SetMarginRight(double value){ setProperty("MarginRight", QVariant(value)); }

inline double TextFrame::MarginTop() const
{
    QVariant qax_result = property("MarginTop");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void TextFrame::SetMarginTop(double value){ setProperty("MarginTop", QVariant(value)); }

inline Office::MsoTextOrientation TextFrame::Orientation() const
{
    QVariant qax_result = property("Orientation");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTextOrientation*)qax_result.constData();
}
inline void TextFrame::SetOrientation(Office::MsoTextOrientation value){ setProperty("Orientation", QVariant(value)); }

inline IDispatch* TextFrame::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}


inline IDispatch* ThreeDFormat::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int ThreeDFormat::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline double ThreeDFormat::Depth() const
{
    QVariant qax_result = property("Depth");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void ThreeDFormat::SetDepth(double value){ setProperty("Depth", QVariant(value)); }

inline Office::ColorFormat* ThreeDFormat::ExtrusionColor() const
{
    Office::ColorFormat* qax_pointer = 0;
    qRegisterMetaType("ColorFormat*", &qax_pointer);
    qRegisterMetaType("ColorFormat", qax_pointer);
    QVariant qax_result = property("ExtrusionColor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ColorFormat**)qax_result.constData();
}

inline Office::MsoExtrusionColorType ThreeDFormat::ExtrusionColorType() const
{
    QVariant qax_result = property("ExtrusionColorType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoExtrusionColorType*)qax_result.constData();
}
inline void ThreeDFormat::SetExtrusionColorType(Office::MsoExtrusionColorType value){ setProperty("ExtrusionColorType", QVariant(value)); }

inline IDispatch* ThreeDFormat::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoTriState ThreeDFormat::Perspective() const
{
    QVariant qax_result = property("Perspective");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void ThreeDFormat::SetPerspective(Office::MsoTriState value){ setProperty("Perspective", QVariant(value)); }

inline Office::MsoPresetExtrusionDirection ThreeDFormat::PresetExtrusionDirection() const
{
    QVariant qax_result = property("PresetExtrusionDirection");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoPresetExtrusionDirection*)qax_result.constData();
}

inline Office::MsoPresetLightingDirection ThreeDFormat::PresetLightingDirection() const
{
    QVariant qax_result = property("PresetLightingDirection");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoPresetLightingDirection*)qax_result.constData();
}
inline void ThreeDFormat::SetPresetLightingDirection(Office::MsoPresetLightingDirection value){ setProperty("PresetLightingDirection", QVariant(value)); }

inline Office::MsoPresetLightingSoftness ThreeDFormat::PresetLightingSoftness() const
{
    QVariant qax_result = property("PresetLightingSoftness");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoPresetLightingSoftness*)qax_result.constData();
}
inline void ThreeDFormat::SetPresetLightingSoftness(Office::MsoPresetLightingSoftness value){ setProperty("PresetLightingSoftness", QVariant(value)); }

inline Office::MsoPresetMaterial ThreeDFormat::PresetMaterial() const
{
    QVariant qax_result = property("PresetMaterial");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoPresetMaterial*)qax_result.constData();
}
inline void ThreeDFormat::SetPresetMaterial(Office::MsoPresetMaterial value){ setProperty("PresetMaterial", QVariant(value)); }

inline Office::MsoPresetThreeDFormat ThreeDFormat::PresetThreeDFormat() const
{
    QVariant qax_result = property("PresetThreeDFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoPresetThreeDFormat*)qax_result.constData();
}

inline double ThreeDFormat::RotationX() const
{
    QVariant qax_result = property("RotationX");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void ThreeDFormat::SetRotationX(double value){ setProperty("RotationX", QVariant(value)); }

inline double ThreeDFormat::RotationY() const
{
    QVariant qax_result = property("RotationY");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void ThreeDFormat::SetRotationY(double value){ setProperty("RotationY", QVariant(value)); }

inline Office::MsoTriState ThreeDFormat::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void ThreeDFormat::SetVisible(Office::MsoTriState value){ setProperty("Visible", QVariant(value)); }

inline void ThreeDFormat::IncrementRotationX(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void ThreeDFormat::IncrementRotationY(double Increment)
{
    void *_a[] = {0, (void*)&Increment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void ThreeDFormat::ResetRotation()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void ThreeDFormat::SetExtrusionDirection(Office::MsoPresetExtrusionDirection PresetExtrusionDirection)
{
    void *_a[] = {0, (void*)&PresetExtrusionDirection};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void ThreeDFormat::SetThreeDFormat(Office::MsoPresetThreeDFormat PresetThreeDFormat)
{
    void *_a[] = {0, (void*)&PresetThreeDFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}


inline void IMsoDispCagNotifySink::InsertClip(IUnknown* pClipMoniker, IUnknown* pItemMoniker)
{
    void *_a[] = {0, (void*)&pClipMoniker, (void*)&pItemMoniker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void IMsoDispCagNotifySink::WindowIsClosing()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline Office::MsoAnimationType Balloon::Animation() const
{
    QVariant qax_result = property("Animation");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoAnimationType*)qax_result.constData();
}
inline void Balloon::SetAnimation(Office::MsoAnimationType value){ setProperty("Animation", QVariant(value)); }

inline IDispatch* Balloon::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoBalloonType Balloon::BalloonType() const
{
    QVariant qax_result = property("BalloonType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoBalloonType*)qax_result.constData();
}
inline void Balloon::SetBalloonType(Office::MsoBalloonType value){ setProperty("BalloonType", QVariant(value)); }

inline Office::MsoButtonSetType Balloon::Button() const
{
    QVariant qax_result = property("Button");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoButtonSetType*)qax_result.constData();
}
inline void Balloon::SetButton(Office::MsoButtonSetType value){ setProperty("Button", QVariant(value)); }

inline QString Balloon::Callback() const
{
    QVariant qax_result = property("Callback");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Balloon::SetCallback(const QString& value){ setProperty("Callback", QVariant(value)); }

inline IDispatch* Balloon::Checkboxes() const
{
    QVariant qax_result = property("Checkboxes");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int Balloon::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString Balloon::Heading() const
{
    QVariant qax_result = property("Heading");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Balloon::SetHeading(const QString& value){ setProperty("Heading", QVariant(value)); }

inline Office::MsoIconType Balloon::Icon() const
{
    QVariant qax_result = property("Icon");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoIconType*)qax_result.constData();
}
inline void Balloon::SetIcon(Office::MsoIconType value){ setProperty("Icon", QVariant(value)); }

inline IDispatch* Balloon::Labels() const
{
    QVariant qax_result = property("Labels");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoModeType Balloon::Mode() const
{
    QVariant qax_result = property("Mode");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoModeType*)qax_result.constData();
}
inline void Balloon::SetMode(Office::MsoModeType value){ setProperty("Mode", QVariant(value)); }

inline QString Balloon::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* Balloon::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int Balloon::Private() const
{
    QVariant qax_result = property("Private");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Balloon::SetPrivate(int value){ setProperty("Private", QVariant(value)); }

inline QString Balloon::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Balloon::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline void Balloon::Close()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void Balloon::SetAvoidRectangle(int Left, int Top, int Right, int Bottom)
{
    void *_a[] = {0, (void*)&Left, (void*)&Top, (void*)&Right, (void*)&Bottom};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline MsoBalloonButtonType Balloon::Show()
{
    MsoBalloonButtonType qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}


inline IDispatch* BalloonCheckboxes::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int BalloonCheckboxes::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void BalloonCheckboxes::SetCount(int value){ setProperty("Count", QVariant(value)); }

inline int BalloonCheckboxes::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString BalloonCheckboxes::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* BalloonCheckboxes::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* BalloonCheckboxes::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline IDispatch* BalloonCheckboxes::Item(int Index)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}


inline IDispatch* BalloonCheckbox::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool BalloonCheckbox::Checked() const
{
    QVariant qax_result = property("Checked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void BalloonCheckbox::SetChecked(bool value){ setProperty("Checked", QVariant(value)); }

inline int BalloonCheckbox::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString BalloonCheckbox::Item() const
{
    QVariant qax_result = property("Item");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString BalloonCheckbox::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* BalloonCheckbox::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString BalloonCheckbox::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void BalloonCheckbox::SetText(const QString& value){ setProperty("Text", QVariant(value)); }


inline IDispatch* BalloonLabels::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int BalloonLabels::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void BalloonLabels::SetCount(int value){ setProperty("Count", QVariant(value)); }

inline int BalloonLabels::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString BalloonLabels::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* BalloonLabels::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* BalloonLabels::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline IDispatch* BalloonLabels::Item(int Index)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}


inline IDispatch* BalloonLabel::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int BalloonLabel::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString BalloonLabel::Item() const
{
    QVariant qax_result = property("Item");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString BalloonLabel::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* BalloonLabel::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString BalloonLabel::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void BalloonLabel::SetText(const QString& value){ setProperty("Text", QVariant(value)); }


inline IDispatch* AnswerWizardFiles::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int AnswerWizardFiles::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int AnswerWizardFiles::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* AnswerWizardFiles::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline void AnswerWizardFiles::Add(const QString& FileName)
{
    void *_a[] = {0, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void AnswerWizardFiles::Delete(const QString& FileName)
{
    void *_a[] = {0, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline QString AnswerWizardFiles::Item(int Index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline IDispatch* AnswerWizard::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int AnswerWizard::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::AnswerWizardFiles* AnswerWizard::Files() const
{
    Office::AnswerWizardFiles* qax_pointer = 0;
    qRegisterMetaType("AnswerWizardFiles*", &qax_pointer);
    qRegisterMetaType("AnswerWizardFiles", qax_pointer);
    QVariant qax_result = property("Files");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::AnswerWizardFiles**)qax_result.constData();
}

inline IDispatch* AnswerWizard::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline void AnswerWizard::ClearFileList()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void AnswerWizard::ResetFileList()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline Office::MsoAnimationType Assistant::Animation() const
{
    QVariant qax_result = property("Animation");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoAnimationType*)qax_result.constData();
}
inline void Assistant::SetAnimation(Office::MsoAnimationType value){ setProperty("Animation", QVariant(value)); }

inline IDispatch* Assistant::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool Assistant::AssistWithAlerts() const
{
    QVariant qax_result = property("AssistWithAlerts");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetAssistWithAlerts(bool value){ setProperty("AssistWithAlerts", QVariant(value)); }

inline bool Assistant::AssistWithHelp() const
{
    QVariant qax_result = property("AssistWithHelp");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetAssistWithHelp(bool value){ setProperty("AssistWithHelp", QVariant(value)); }

inline bool Assistant::AssistWithWizards() const
{
    QVariant qax_result = property("AssistWithWizards");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetAssistWithWizards(bool value){ setProperty("AssistWithWizards", QVariant(value)); }

inline Office::MsoBalloonErrorType Assistant::BalloonError() const
{
    QVariant qax_result = property("BalloonError");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoBalloonErrorType*)qax_result.constData();
}

inline int Assistant::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool Assistant::FeatureTips() const
{
    QVariant qax_result = property("FeatureTips");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetFeatureTips(bool value){ setProperty("FeatureTips", QVariant(value)); }

inline QString Assistant::FileName() const
{
    QVariant qax_result = property("FileName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Assistant::SetFileName(const QString& value){ setProperty("FileName", QVariant(value)); }

inline bool Assistant::GuessHelp() const
{
    QVariant qax_result = property("GuessHelp");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetGuessHelp(bool value){ setProperty("GuessHelp", QVariant(value)); }

inline bool Assistant::HighPriorityTips() const
{
    QVariant qax_result = property("HighPriorityTips");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetHighPriorityTips(bool value){ setProperty("HighPriorityTips", QVariant(value)); }

inline QString Assistant::Item() const
{
    QVariant qax_result = property("Item");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool Assistant::KeyboardShortcutTips() const
{
    QVariant qax_result = property("KeyboardShortcutTips");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetKeyboardShortcutTips(bool value){ setProperty("KeyboardShortcutTips", QVariant(value)); }

inline int Assistant::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Assistant::SetLeft(int value){ setProperty("Left", QVariant(value)); }

inline bool Assistant::MouseTips() const
{
    QVariant qax_result = property("MouseTips");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetMouseTips(bool value){ setProperty("MouseTips", QVariant(value)); }

inline bool Assistant::MoveWhenInTheWay() const
{
    QVariant qax_result = property("MoveWhenInTheWay");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetMoveWhenInTheWay(bool value){ setProperty("MoveWhenInTheWay", QVariant(value)); }

inline QString Assistant::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Office::Balloon* Assistant::NewBalloon() const
{
    Office::Balloon* qax_pointer = 0;
    qRegisterMetaType("Balloon*", &qax_pointer);
    qRegisterMetaType("Balloon", qax_pointer);
    QVariant qax_result = property("NewBalloon");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Balloon**)qax_result.constData();
}

inline bool Assistant::On() const
{
    QVariant qax_result = property("On");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetOn(bool value){ setProperty("On", QVariant(value)); }

inline IDispatch* Assistant::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool Assistant::Reduced() const
{
    QVariant qax_result = property("Reduced");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetReduced(bool value){ setProperty("Reduced", QVariant(value)); }

inline bool Assistant::SearchWhenProgramming() const
{
    QVariant qax_result = property("SearchWhenProgramming");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetSearchWhenProgramming(bool value){ setProperty("SearchWhenProgramming", QVariant(value)); }

inline bool Assistant::Sounds() const
{
    QVariant qax_result = property("Sounds");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetSounds(bool value){ setProperty("Sounds", QVariant(value)); }

inline bool Assistant::TipOfDay() const
{
    QVariant qax_result = property("TipOfDay");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetTipOfDay(bool value){ setProperty("TipOfDay", QVariant(value)); }

inline int Assistant::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Assistant::SetTop(int value){ setProperty("Top", QVariant(value)); }

inline bool Assistant::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Assistant::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline void Assistant::ActivateWizard(int WizardID, Office::MsoWizardActType act)
{
    void *_a[] = {0, (void*)&WizardID, (void*)&act};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void Assistant::ActivateWizard(int WizardID, Office::MsoWizardActType act, const QVariant& Animation)
{
    void *_a[] = {0, (void*)&WizardID, (void*)&act, (void*)&Animation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline int Assistant::DoAlert(const QString& bstrAlertTitle, const QString& bstrAlertText, Office::MsoAlertButtonType alb, Office::MsoAlertIconType alc, Office::MsoAlertDefaultType ald, Office::MsoAlertCancelType alq, bool varfSysAlert)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrAlertTitle, (void*)&bstrAlertText, (void*)&alb, (void*)&alc, (void*)&ald, (void*)&alq, (void*)&varfSysAlert};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void Assistant::EndWizard(int WizardID, bool varfSuccess)
{
    void *_a[] = {0, (void*)&WizardID, (void*)&varfSuccess};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void Assistant::EndWizard(int WizardID, bool varfSuccess, const QVariant& Animation)
{
    void *_a[] = {0, (void*)&WizardID, (void*)&varfSuccess, (void*)&Animation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void Assistant::Help()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void Assistant::Move(int xLeft, int yTop)
{
    void *_a[] = {0, (void*)&xLeft, (void*)&yTop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void Assistant::ResetTips()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline int Assistant::StartWizard(bool On, const QString& Callback, int PrivateX)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&On, (void*)&Callback, (void*)&PrivateX};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline int Assistant::StartWizard(bool On, const QString& Callback, int PrivateX, const QVariant& Animation)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&On, (void*)&Callback, (void*)&PrivateX, (void*)&Animation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline int Assistant::StartWizard(bool On, const QString& Callback, int PrivateX, const QVariant& Animation, const QVariant& CustomTeaser)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&On, (void*)&Callback, (void*)&PrivateX, (void*)&Animation, (void*)&CustomTeaser};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int Assistant::StartWizard(bool On, const QString& Callback, int PrivateX, const QVariant& Animation, const QVariant& CustomTeaser, const QVariant& Top)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&On, (void*)&Callback, (void*)&PrivateX, (void*)&Animation, (void*)&CustomTeaser, (void*)&Top};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int Assistant::StartWizard(bool On, const QString& Callback, int PrivateX, const QVariant& Animation, const QVariant& CustomTeaser, const QVariant& Top, const QVariant& Left)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&On, (void*)&Callback, (void*)&PrivateX, (void*)&Animation, (void*)&CustomTeaser, (void*)&Top, (void*)&Left};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline int Assistant::StartWizard(bool On, const QString& Callback, int PrivateX, const QVariant& Animation, const QVariant& CustomTeaser, const QVariant& Top, const QVariant& Left, const QVariant& Bottom)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&On, (void*)&Callback, (void*)&PrivateX, (void*)&Animation, (void*)&CustomTeaser, (void*)&Top, (void*)&Left, (void*)&Bottom};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline int Assistant::StartWizard(bool On, const QString& Callback, int PrivateX, const QVariant& Animation, const QVariant& CustomTeaser, const QVariant& Top, const QVariant& Left, const QVariant& Bottom, const QVariant& Right)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&On, (void*)&Callback, (void*)&PrivateX, (void*)&Animation, (void*)&CustomTeaser, (void*)&Top, (void*)&Left, (void*)&Bottom, (void*)&Right};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}


inline int IFoundFiles::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IUnknown* IFoundFiles::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline QString IFoundFiles::Item(int Index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}


inline QString IFind::Author() const
{
    QVariant qax_result = property("Author");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IFind::SetAuthor(const QString& value){ setProperty("Author", QVariant(value)); }

inline QVariant IFind::DateCreatedFrom() const
{
    QVariant qax_result = property("DateCreatedFrom");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IFind::SetDateCreatedFrom(const QVariant& value){ setProperty("DateCreatedFrom", QVariant(value)); }

inline QVariant IFind::DateCreatedTo() const
{
    QVariant qax_result = property("DateCreatedTo");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IFind::SetDateCreatedTo(const QVariant& value){ setProperty("DateCreatedTo", QVariant(value)); }

inline QVariant IFind::DateSavedFrom() const
{
    QVariant qax_result = property("DateSavedFrom");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IFind::SetDateSavedFrom(const QVariant& value){ setProperty("DateSavedFrom", QVariant(value)); }

inline QVariant IFind::DateSavedTo() const
{
    QVariant qax_result = property("DateSavedTo");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IFind::SetDateSavedTo(const QVariant& value){ setProperty("DateSavedTo", QVariant(value)); }

inline int IFind::FileType() const
{
    QVariant qax_result = property("FileType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IFind::SetFileType(int value){ setProperty("FileType", QVariant(value)); }

inline QString IFind::Keywords() const
{
    QVariant qax_result = property("Keywords");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IFind::SetKeywords(const QString& value){ setProperty("Keywords", QVariant(value)); }

inline Office::MsoFileFindListBy IFind::ListBy() const
{
    QVariant qax_result = property("ListBy");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoFileFindListBy*)qax_result.constData();
}
inline void IFind::SetListBy(Office::MsoFileFindListBy value){ setProperty("ListBy", QVariant(value)); }

inline bool IFind::MatchCase() const
{
    QVariant qax_result = property("MatchCase");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IFind::SetMatchCase(bool value){ setProperty("MatchCase", QVariant(value)); }

inline QString IFind::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IFind::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline Office::MsoFileFindOptions IFind::Options() const
{
    QVariant qax_result = property("Options");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoFileFindOptions*)qax_result.constData();
}
inline void IFind::SetOptions(Office::MsoFileFindOptions value){ setProperty("Options", QVariant(value)); }

inline bool IFind::PatternMatch() const
{
    QVariant qax_result = property("PatternMatch");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IFind::SetPatternMatch(bool value){ setProperty("PatternMatch", QVariant(value)); }

inline Office::IFoundFiles* IFind::Results() const
{
    Office::IFoundFiles* qax_pointer = 0;
    qRegisterMetaType("IFoundFiles*", &qax_pointer);
    qRegisterMetaType("IFoundFiles", qax_pointer);
    QVariant qax_result = property("Results");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::IFoundFiles**)qax_result.constData();
}

inline QString IFind::SavedBy() const
{
    QVariant qax_result = property("SavedBy");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IFind::SetSavedBy(const QString& value){ setProperty("SavedBy", QVariant(value)); }

inline QString IFind::SearchPath() const
{
    QVariant qax_result = property("SearchPath");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IFind::SetSearchPath(const QString& value){ setProperty("SearchPath", QVariant(value)); }

inline int IFind::SelectedFile() const
{
    QVariant qax_result = property("SelectedFile");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IFind::SetSelectedFile(int value){ setProperty("SelectedFile", QVariant(value)); }

inline Office::MsoFileFindSortBy IFind::SortBy() const
{
    QVariant qax_result = property("SortBy");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoFileFindSortBy*)qax_result.constData();
}
inline void IFind::SetSortBy(Office::MsoFileFindSortBy value){ setProperty("SortBy", QVariant(value)); }

inline bool IFind::SubDir() const
{
    QVariant qax_result = property("SubDir");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IFind::SetSubDir(bool value){ setProperty("SubDir", QVariant(value)); }

inline QString IFind::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IFind::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline QString IFind::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IFind::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline QString IFind::Title() const
{
    QVariant qax_result = property("Title");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IFind::SetTitle(const QString& value){ setProperty("Title", QVariant(value)); }

inline Office::MsoFileFindView IFind::View() const
{
    QVariant qax_result = property("View");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoFileFindView*)qax_result.constData();
}
inline void IFind::SetView(Office::MsoFileFindView value){ setProperty("View", QVariant(value)); }

inline void IFind::Delete(const QString& bstrQueryName)
{
    void *_a[] = {0, (void*)&bstrQueryName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void IFind::Execute()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void IFind::Load(const QString& bstrQueryName)
{
    void *_a[] = {0, (void*)&bstrQueryName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void IFind::Save(const QString& bstrQueryName)
{
    void *_a[] = {0, (void*)&bstrQueryName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline int IFind::Show()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}


inline IDispatch* FoundFiles::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int FoundFiles::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int FoundFiles::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IUnknown* FoundFiles::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline QString FoundFiles::Item(int Index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}


inline IDispatch* PropertyTest::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoCondition PropertyTest::Condition() const
{
    QVariant qax_result = property("Condition");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoCondition*)qax_result.constData();
}

inline Office::MsoConnector PropertyTest::Connector() const
{
    QVariant qax_result = property("Connector");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoConnector*)qax_result.constData();
}

inline int PropertyTest::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString PropertyTest::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant PropertyTest::SecondValue() const
{
    QVariant qax_result = property("SecondValue");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant PropertyTest::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}


inline IDispatch* PropertyTests::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int PropertyTests::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int PropertyTests::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IUnknown* PropertyTests::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline void PropertyTests::Add(const QString& Name, Office::MsoCondition Condition)
{
    void *_a[] = {0, (void*)&Name, (void*)&Condition};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void PropertyTests::Add(const QString& Name, Office::MsoCondition Condition, const QVariant& Value)
{
    void *_a[] = {0, (void*)&Name, (void*)&Condition, (void*)&Value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void PropertyTests::Add(const QString& Name, Office::MsoCondition Condition, const QVariant& Value, const QVariant& SecondValue)
{
    void *_a[] = {0, (void*)&Name, (void*)&Condition, (void*)&Value, (void*)&SecondValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void PropertyTests::Add(const QString& Name, Office::MsoCondition Condition, const QVariant& Value, const QVariant& SecondValue, Office::MsoConnector Connector)
{
    void *_a[] = {0, (void*)&Name, (void*)&Condition, (void*)&Value, (void*)&SecondValue, (void*)&Connector};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline Office::PropertyTest* PropertyTests::Item(int Index)
{
    Office::PropertyTest* qax_result = 0;
    qRegisterMetaType("PropertyTest*", &qax_result);
    qRegisterMetaType("PropertyTest", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline void PropertyTests::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}


inline IDispatch* FileSearch::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int FileSearch::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString FileSearch::FileName() const
{
    QVariant qax_result = property("FileName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FileSearch::SetFileName(const QString& value){ setProperty("FileName", QVariant(value)); }

inline Office::MsoFileType FileSearch::FileType() const
{
    QVariant qax_result = property("FileType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoFileType*)qax_result.constData();
}
inline void FileSearch::SetFileType(Office::MsoFileType value){ setProperty("FileType", QVariant(value)); }

inline Office::FileTypes* FileSearch::FileTypes() const
{
    Office::FileTypes* qax_pointer = 0;
    qRegisterMetaType("FileTypes*", &qax_pointer);
    qRegisterMetaType("FileTypes", qax_pointer);
    QVariant qax_result = property("FileTypes");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::FileTypes**)qax_result.constData();
}

inline Office::FoundFiles* FileSearch::FoundFiles() const
{
    Office::FoundFiles* qax_pointer = 0;
    qRegisterMetaType("FoundFiles*", &qax_pointer);
    qRegisterMetaType("FoundFiles", qax_pointer);
    QVariant qax_result = property("FoundFiles");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::FoundFiles**)qax_result.constData();
}

inline Office::MsoLastModified FileSearch::LastModified() const
{
    QVariant qax_result = property("LastModified");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoLastModified*)qax_result.constData();
}
inline void FileSearch::SetLastModified(Office::MsoLastModified value){ setProperty("LastModified", QVariant(value)); }

inline QString FileSearch::LookIn() const
{
    QVariant qax_result = property("LookIn");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FileSearch::SetLookIn(const QString& value){ setProperty("LookIn", QVariant(value)); }

inline bool FileSearch::MatchAllWordForms() const
{
    QVariant qax_result = property("MatchAllWordForms");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void FileSearch::SetMatchAllWordForms(bool value){ setProperty("MatchAllWordForms", QVariant(value)); }

inline bool FileSearch::MatchTextExactly() const
{
    QVariant qax_result = property("MatchTextExactly");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void FileSearch::SetMatchTextExactly(bool value){ setProperty("MatchTextExactly", QVariant(value)); }

inline Office::PropertyTests* FileSearch::PropertyTests() const
{
    Office::PropertyTests* qax_pointer = 0;
    qRegisterMetaType("PropertyTests*", &qax_pointer);
    qRegisterMetaType("PropertyTests", qax_pointer);
    QVariant qax_result = property("PropertyTests");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::PropertyTests**)qax_result.constData();
}

inline Office::SearchFolders* FileSearch::SearchFolders() const
{
    Office::SearchFolders* qax_pointer = 0;
    qRegisterMetaType("SearchFolders*", &qax_pointer);
    qRegisterMetaType("SearchFolders", qax_pointer);
    QVariant qax_result = property("SearchFolders");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::SearchFolders**)qax_result.constData();
}

inline Office::SearchScopes* FileSearch::SearchScopes() const
{
    Office::SearchScopes* qax_pointer = 0;
    qRegisterMetaType("SearchScopes*", &qax_pointer);
    qRegisterMetaType("SearchScopes", qax_pointer);
    QVariant qax_result = property("SearchScopes");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::SearchScopes**)qax_result.constData();
}

inline bool FileSearch::SearchSubFolders() const
{
    QVariant qax_result = property("SearchSubFolders");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void FileSearch::SetSearchSubFolders(bool value){ setProperty("SearchSubFolders", QVariant(value)); }

inline QString FileSearch::TextOrProperty() const
{
    QVariant qax_result = property("TextOrProperty");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FileSearch::SetTextOrProperty(const QString& value){ setProperty("TextOrProperty", QVariant(value)); }

inline int FileSearch::Execute()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int FileSearch::Execute(Office::MsoSortBy SortBy)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SortBy};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int FileSearch::Execute(Office::MsoSortBy SortBy, Office::MsoSortOrder SortOrder)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SortBy, (void*)&SortOrder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int FileSearch::Execute(Office::MsoSortBy SortBy, Office::MsoSortOrder SortOrder, bool AlwaysAccurate)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SortBy, (void*)&SortOrder, (void*)&AlwaysAccurate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void FileSearch::NewSearch()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void FileSearch::RefreshScopes()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}


inline IDispatch* COMAddIn::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool COMAddIn::Connect() const
{
    QVariant qax_result = property("Connect");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void COMAddIn::SetConnect(bool value){ setProperty("Connect", QVariant(value)); }

inline int COMAddIn::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString COMAddIn::Description() const
{
    QVariant qax_result = property("Description");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void COMAddIn::SetDescription(const QString& value){ setProperty("Description", QVariant(value)); }

inline QString COMAddIn::Guid() const
{
    QVariant qax_result = property("Guid");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* COMAddIn::Object() const
{
    QVariant qax_result = property("Object");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}
inline void COMAddIn::SetObject(IDispatch* value){
    int typeId = qRegisterMetaType("IDispatch*", &value);
    setProperty("Object", QVariant(typeId, &value));
}

inline IDispatch* COMAddIn::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString COMAddIn::ProgId() const
{
    QVariant qax_result = property("ProgId");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}


inline IDispatch* COMAddIns::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int COMAddIns::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int COMAddIns::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* COMAddIns::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* COMAddIns::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::COMAddIn* COMAddIns::Item(QVariant& Index)
{
    Office::COMAddIn* qax_result = 0;
    qRegisterMetaType("COMAddIn*", &qax_result);
    qRegisterMetaType("COMAddIn", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline void COMAddIns::SetAppModal(bool varfModal)
{
    void *_a[] = {0, (void*)&varfModal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void COMAddIns::Update()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}


inline IDispatch* LanguageSettings::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int LanguageSettings::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* LanguageSettings::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int LanguageSettings::LanguageID(Office::MsoAppLanguageID Id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline bool LanguageSettings::LanguagePreferredForEditing(Office::MsoLanguageID lid)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lid};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline void ICommandBarsEvents::OnUpdate()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}


inline Office::CommandBarControl* CommandBars::ActionControl() const
{
    Office::CommandBarControl* qax_pointer = 0;
    qRegisterMetaType("CommandBarControl*", &qax_pointer);
    qRegisterMetaType("CommandBarControl", qax_pointer);
    QVariant qax_result = property("ActionControl");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBarControl**)qax_result.constData();
}

inline Office::CommandBar* CommandBars::ActiveMenuBar() const
{
    Office::CommandBar* qax_pointer = 0;
    qRegisterMetaType("CommandBar*", &qax_pointer);
    qRegisterMetaType("CommandBar", qax_pointer);
    QVariant qax_result = property("ActiveMenuBar");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBar**)qax_result.constData();
}

inline bool CommandBars::AdaptiveMenus() const
{
    QVariant qax_result = property("AdaptiveMenus");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBars::SetAdaptiveMenus(bool value){ setProperty("AdaptiveMenus", QVariant(value)); }

inline IDispatch* CommandBars::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int CommandBars::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBars::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool CommandBars::DisableAskAQuestionDropdown() const
{
    QVariant qax_result = property("DisableAskAQuestionDropdown");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBars::SetDisableAskAQuestionDropdown(bool value){ setProperty("DisableAskAQuestionDropdown", QVariant(value)); }

inline bool CommandBars::DisableCustomize() const
{
    QVariant qax_result = property("DisableCustomize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBars::SetDisableCustomize(bool value){ setProperty("DisableCustomize", QVariant(value)); }

inline bool CommandBars::DisplayFonts() const
{
    QVariant qax_result = property("DisplayFonts");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBars::SetDisplayFonts(bool value){ setProperty("DisplayFonts", QVariant(value)); }

inline bool CommandBars::DisplayKeysInTooltips() const
{
    QVariant qax_result = property("DisplayKeysInTooltips");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBars::SetDisplayKeysInTooltips(bool value){ setProperty("DisplayKeysInTooltips", QVariant(value)); }

inline bool CommandBars::DisplayTooltips() const
{
    QVariant qax_result = property("DisplayTooltips");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBars::SetDisplayTooltips(bool value){ setProperty("DisplayTooltips", QVariant(value)); }

inline bool CommandBars::LargeButtons() const
{
    QVariant qax_result = property("LargeButtons");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBars::SetLargeButtons(bool value){ setProperty("LargeButtons", QVariant(value)); }

inline Office::MsoMenuAnimation CommandBars::MenuAnimationStyle() const
{
    QVariant qax_result = property("MenuAnimationStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoMenuAnimation*)qax_result.constData();
}
inline void CommandBars::SetMenuAnimationStyle(Office::MsoMenuAnimation value){ setProperty("MenuAnimationStyle", QVariant(value)); }

inline IDispatch* CommandBars::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* CommandBars::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::CommandBar* CommandBars::Add()
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline Office::CommandBar* CommandBars::Add(const QVariant& Name)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Office::CommandBar* CommandBars::Add(const QVariant& Name, const QVariant& Position)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Position};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Office::CommandBar* CommandBars::Add(const QVariant& Name, const QVariant& Position, const QVariant& MenuBar)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Position, (void*)&MenuBar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Office::CommandBar* CommandBars::Add(const QVariant& Name, const QVariant& Position, const QVariant& MenuBar, const QVariant& Temporary)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Position, (void*)&MenuBar, (void*)&Temporary};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Office::CommandBar* CommandBars::AddEx()
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline Office::CommandBar* CommandBars::AddEx(const QVariant& TbidOrName)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&TbidOrName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline Office::CommandBar* CommandBars::AddEx(const QVariant& TbidOrName, const QVariant& Position)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&TbidOrName, (void*)&Position};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline Office::CommandBar* CommandBars::AddEx(const QVariant& TbidOrName, const QVariant& Position, const QVariant& MenuBar)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&TbidOrName, (void*)&Position, (void*)&MenuBar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline Office::CommandBar* CommandBars::AddEx(const QVariant& TbidOrName, const QVariant& Position, const QVariant& MenuBar, const QVariant& Temporary)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&TbidOrName, (void*)&Position, (void*)&MenuBar, (void*)&Temporary};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline Office::CommandBar* CommandBars::AddEx(const QVariant& TbidOrName, const QVariant& Position, const QVariant& MenuBar, const QVariant& Temporary, const QVariant& TbtrProtection)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&TbidOrName, (void*)&Position, (void*)&MenuBar, (void*)&Temporary, (void*)&TbtrProtection};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBars::FindControl()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBars::FindControl(const QVariant& Type)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBars::FindControl(const QVariant& Type, const QVariant& Id)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBars::FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Tag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBars::FindControl(const QVariant& Type, const QVariant& Id, const QVariant& Tag, const QVariant& Visible)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Tag, (void*)&Visible};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline Office::CommandBarControls* CommandBars::FindControls()
{
    Office::CommandBarControls* qax_result = 0;
    qRegisterMetaType("CommandBarControls*", &qax_result);
    qRegisterMetaType("CommandBarControls", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline Office::CommandBarControls* CommandBars::FindControls(const QVariant& Type)
{
    Office::CommandBarControls* qax_result = 0;
    qRegisterMetaType("CommandBarControls*", &qax_result);
    qRegisterMetaType("CommandBarControls", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline Office::CommandBarControls* CommandBars::FindControls(const QVariant& Type, const QVariant& Id)
{
    Office::CommandBarControls* qax_result = 0;
    qRegisterMetaType("CommandBarControls*", &qax_result);
    qRegisterMetaType("CommandBarControls", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline Office::CommandBarControls* CommandBars::FindControls(const QVariant& Type, const QVariant& Id, const QVariant& Tag)
{
    Office::CommandBarControls* qax_result = 0;
    qRegisterMetaType("CommandBarControls*", &qax_result);
    qRegisterMetaType("CommandBarControls", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Tag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline Office::CommandBarControls* CommandBars::FindControls(const QVariant& Type, const QVariant& Id, const QVariant& Tag, const QVariant& Visible)
{
    Office::CommandBarControls* qax_result = 0;
    qRegisterMetaType("CommandBarControls*", &qax_result);
    qRegisterMetaType("CommandBarControls", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Id, (void*)&Tag, (void*)&Visible};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline int CommandBars::IdsString(int ids, QString& pbstrName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&ids, (void*)&pbstrName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline Office::CommandBar* CommandBars::Item(const QVariant& Index)
{
    Office::CommandBar* qax_result = 0;
    qRegisterMetaType("CommandBar*", &qax_result);
    qRegisterMetaType("CommandBar", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline void CommandBars::ReleaseFocus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline int CommandBars::TmcGetName(int tmc, QString& pbstrName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&tmc, (void*)&pbstrName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}


inline void ICommandBarComboBoxEvents::Change(Office::CommandBarComboBox* Ctrl)
{
    void *_a[] = {0, (void*)&Ctrl};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}


inline IDispatch* CommandBarComboBox::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool CommandBarComboBox::BeginGroup() const
{
    QVariant qax_result = property("BeginGroup");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBarComboBox::SetBeginGroup(bool value){ setProperty("BeginGroup", QVariant(value)); }

inline bool CommandBarComboBox::BuiltIn() const
{
    QVariant qax_result = property("BuiltIn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString CommandBarComboBox::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarComboBox::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline IDispatch* CommandBarComboBox::Control() const
{
    QVariant qax_result = property("Control");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int CommandBarComboBox::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CommandBarComboBox::DescriptionText() const
{
    QVariant qax_result = property("DescriptionText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarComboBox::SetDescriptionText(const QString& value){ setProperty("DescriptionText", QVariant(value)); }

inline int CommandBarComboBox::DropDownLines() const
{
    QVariant qax_result = property("DropDownLines");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarComboBox::SetDropDownLines(int value){ setProperty("DropDownLines", QVariant(value)); }

inline int CommandBarComboBox::DropDownWidth() const
{
    QVariant qax_result = property("DropDownWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarComboBox::SetDropDownWidth(int value){ setProperty("DropDownWidth", QVariant(value)); }

inline bool CommandBarComboBox::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBarComboBox::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline int CommandBarComboBox::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarComboBox::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int CommandBarComboBox::HelpContextId() const
{
    QVariant qax_result = property("HelpContextId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarComboBox::SetHelpContextId(int value){ setProperty("HelpContextId", QVariant(value)); }

inline QString CommandBarComboBox::HelpFile() const
{
    QVariant qax_result = property("HelpFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarComboBox::SetHelpFile(const QString& value){ setProperty("HelpFile", QVariant(value)); }

inline int CommandBarComboBox::Id() const
{
    QVariant qax_result = property("Id");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBarComboBox::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBarComboBox::InstanceId() const
{
    QVariant qax_result = property("InstanceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool CommandBarComboBox::IsPriorityDropped() const
{
    QVariant qax_result = property("IsPriorityDropped");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int CommandBarComboBox::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBarComboBox::ListCount() const
{
    QVariant qax_result = property("ListCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBarComboBox::ListHeaderCount() const
{
    QVariant qax_result = property("ListHeaderCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarComboBox::SetListHeaderCount(int value){ setProperty("ListHeaderCount", QVariant(value)); }

inline int CommandBarComboBox::ListIndex() const
{
    QVariant qax_result = property("ListIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarComboBox::SetListIndex(int value){ setProperty("ListIndex", QVariant(value)); }

inline Office::MsoControlOLEUsage CommandBarComboBox::OLEUsage() const
{
    QVariant qax_result = property("OLEUsage");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlOLEUsage*)qax_result.constData();
}
inline void CommandBarComboBox::SetOLEUsage(Office::MsoControlOLEUsage value){ setProperty("OLEUsage", QVariant(value)); }

inline QString CommandBarComboBox::OnAction() const
{
    QVariant qax_result = property("OnAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarComboBox::SetOnAction(const QString& value){ setProperty("OnAction", QVariant(value)); }

inline QString CommandBarComboBox::Parameter() const
{
    QVariant qax_result = property("Parameter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarComboBox::SetParameter(const QString& value){ setProperty("Parameter", QVariant(value)); }

inline Office::CommandBar* CommandBarComboBox::Parent() const
{
    Office::CommandBar* qax_pointer = 0;
    qRegisterMetaType("CommandBar*", &qax_pointer);
    qRegisterMetaType("CommandBar", qax_pointer);
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBar**)qax_result.constData();
}

inline int CommandBarComboBox::Priority() const
{
    QVariant qax_result = property("Priority");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarComboBox::SetPriority(int value){ setProperty("Priority", QVariant(value)); }

inline Office::MsoComboStyle CommandBarComboBox::Style() const
{
    QVariant qax_result = property("Style");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoComboStyle*)qax_result.constData();
}
inline void CommandBarComboBox::SetStyle(Office::MsoComboStyle value){ setProperty("Style", QVariant(value)); }

inline QString CommandBarComboBox::Tag() const
{
    QVariant qax_result = property("Tag");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarComboBox::SetTag(const QString& value){ setProperty("Tag", QVariant(value)); }

inline QString CommandBarComboBox::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarComboBox::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline QString CommandBarComboBox::TooltipText() const
{
    QVariant qax_result = property("TooltipText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarComboBox::SetTooltipText(const QString& value){ setProperty("TooltipText", QVariant(value)); }

inline int CommandBarComboBox::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoControlType CommandBarComboBox::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlType*)qax_result.constData();
}

inline bool CommandBarComboBox::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBarComboBox::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline int CommandBarComboBox::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarComboBox::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline int CommandBarComboBox::accChildCount() const
{
    QVariant qax_result = property("accChildCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CommandBarComboBox::accDefaultAction() const
{
    QVariant qax_result = property("accDefaultAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CommandBarComboBox::accDescription() const
{
    QVariant qax_result = property("accDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant CommandBarComboBox::accFocus() const
{
    QVariant qax_result = property("accFocus");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString CommandBarComboBox::accHelp() const
{
    QVariant qax_result = property("accHelp");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CommandBarComboBox::accKeyboardShortcut() const
{
    QVariant qax_result = property("accKeyboardShortcut");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant CommandBarComboBox::accName() const
{
    QVariant qax_result = property("accName");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void CommandBarComboBox::setAccName(const QVariant& value){ setProperty("accName", QVariant(value)); }

inline IDispatch* CommandBarComboBox::accParent() const
{
    QVariant qax_result = property("accParent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QVariant CommandBarComboBox::accRole() const
{
    QVariant qax_result = property("accRole");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBarComboBox::accSelection() const
{
    QVariant qax_result = property("accSelection");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBarComboBox::accState() const
{
    QVariant qax_result = property("accState");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBarComboBox::accValue() const
{
    QVariant qax_result = property("accValue");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void CommandBarComboBox::setAccValue(const QVariant& value){ setProperty("accValue", QVariant(value)); }

inline void CommandBarComboBox::AddItem(const QString& Text)
{
    void *_a[] = {0, (void*)&Text};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void CommandBarComboBox::AddItem(const QString& Text, const QVariant& Index)
{
    void *_a[] = {0, (void*)&Text, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void CommandBarComboBox::Clear()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline Office::CommandBarControl* CommandBarComboBox::Copy()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarComboBox::Copy(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarComboBox::Copy(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline void CommandBarComboBox::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void CommandBarComboBox::Delete(const QVariant& Temporary)
{
    void *_a[] = {0, (void*)&Temporary};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void CommandBarComboBox::Execute()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline QString CommandBarComboBox::List(int Index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarComboBox::Move()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarComboBox::Move(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarComboBox::Move(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline void CommandBarComboBox::RemoveItem(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void CommandBarComboBox::Reserved1()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void CommandBarComboBox::Reserved2()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void CommandBarComboBox::Reserved3()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void CommandBarComboBox::Reserved4()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void CommandBarComboBox::Reserved5()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline void CommandBarComboBox::Reserved6()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void CommandBarComboBox::Reserved7()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline void CommandBarComboBox::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void CommandBarComboBox::SetFocus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline int CommandBarComboBox::SetList(int Index, const QString& rhs)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index, (void*)&rhs};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline IDispatch* CommandBarComboBox::accChild(const QVariant& varChild)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline void CommandBarComboBox::accDoDefaultAction()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
}

inline void CommandBarComboBox::accDoDefaultAction(const QVariant& varChild)
{
    void *_a[] = {0, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
}

inline int CommandBarComboBox::accHelpTopic(QString& pszHelpFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline int CommandBarComboBox::accHelpTopic(QString& pszHelpFile, const QVariant& varChild)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
    return qax_result;
}

inline QVariant CommandBarComboBox::accHitTest(int xLeft, int yTop)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&xLeft, (void*)&yTop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
    return qax_result;
}

inline void CommandBarComboBox::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
}

inline void CommandBarComboBox::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
}

inline QVariant CommandBarComboBox::accNavigate(int navDir)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
    return qax_result;
}

inline QVariant CommandBarComboBox::accNavigate(int navDir, const QVariant& varStart)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir, (void*)&varStart};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
    return qax_result;
}

inline void CommandBarComboBox::accSelect(int flagsSelect)
{
    void *_a[] = {0, (void*)&flagsSelect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 82, _a);
}

inline void CommandBarComboBox::accSelect(int flagsSelect, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&flagsSelect, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 83, _a);
}


inline void ICommandBarButtonEvents::Click(Office::CommandBarButton* Ctrl, bool& CancelDefault)
{
    void *_a[] = {0, (void*)&Ctrl, (void*)&CancelDefault};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}


inline IDispatch* CommandBarButton::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool CommandBarButton::BeginGroup() const
{
    QVariant qax_result = property("BeginGroup");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBarButton::SetBeginGroup(bool value){ setProperty("BeginGroup", QVariant(value)); }

inline bool CommandBarButton::BuiltIn() const
{
    QVariant qax_result = property("BuiltIn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool CommandBarButton::BuiltInFace() const
{
    QVariant qax_result = property("BuiltInFace");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBarButton::SetBuiltInFace(bool value){ setProperty("BuiltInFace", QVariant(value)); }

inline QString CommandBarButton::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarButton::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline IDispatch* CommandBarButton::Control() const
{
    QVariant qax_result = property("Control");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int CommandBarButton::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CommandBarButton::DescriptionText() const
{
    QVariant qax_result = property("DescriptionText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarButton::SetDescriptionText(const QString& value){ setProperty("DescriptionText", QVariant(value)); }

inline bool CommandBarButton::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBarButton::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline int CommandBarButton::FaceId() const
{
    QVariant qax_result = property("FaceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarButton::SetFaceId(int value){ setProperty("FaceId", QVariant(value)); }

inline int CommandBarButton::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarButton::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int CommandBarButton::HelpContextId() const
{
    QVariant qax_result = property("HelpContextId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarButton::SetHelpContextId(int value){ setProperty("HelpContextId", QVariant(value)); }

inline QString CommandBarButton::HelpFile() const
{
    QVariant qax_result = property("HelpFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarButton::SetHelpFile(const QString& value){ setProperty("HelpFile", QVariant(value)); }

inline Office::MsoCommandBarButtonHyperlinkType CommandBarButton::HyperlinkType() const
{
    QVariant qax_result = property("HyperlinkType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoCommandBarButtonHyperlinkType*)qax_result.constData();
}
inline void CommandBarButton::SetHyperlinkType(Office::MsoCommandBarButtonHyperlinkType value){ setProperty("HyperlinkType", QVariant(value)); }

inline int CommandBarButton::Id() const
{
    QVariant qax_result = property("Id");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBarButton::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CommandBarButton::InstanceId() const
{
    QVariant qax_result = property("InstanceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool CommandBarButton::IsPriorityDropped() const
{
    QVariant qax_result = property("IsPriorityDropped");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int CommandBarButton::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QPixmap CommandBarButton::Mask() const
{
    QVariant qax_result = property("Mask");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void CommandBarButton::SetMask(const QPixmap& value){ setProperty("Mask", QVariant(value)); }

inline Office::MsoControlOLEUsage CommandBarButton::OLEUsage() const
{
    QVariant qax_result = property("OLEUsage");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlOLEUsage*)qax_result.constData();
}
inline void CommandBarButton::SetOLEUsage(Office::MsoControlOLEUsage value){ setProperty("OLEUsage", QVariant(value)); }

inline QString CommandBarButton::OnAction() const
{
    QVariant qax_result = property("OnAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarButton::SetOnAction(const QString& value){ setProperty("OnAction", QVariant(value)); }

inline QString CommandBarButton::Parameter() const
{
    QVariant qax_result = property("Parameter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarButton::SetParameter(const QString& value){ setProperty("Parameter", QVariant(value)); }

inline Office::CommandBar* CommandBarButton::Parent() const
{
    Office::CommandBar* qax_pointer = 0;
    qRegisterMetaType("CommandBar*", &qax_pointer);
    qRegisterMetaType("CommandBar", qax_pointer);
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBar**)qax_result.constData();
}

inline QPixmap CommandBarButton::Picture() const
{
    QVariant qax_result = property("Picture");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void CommandBarButton::SetPicture(const QPixmap& value){ setProperty("Picture", QVariant(value)); }

inline int CommandBarButton::Priority() const
{
    QVariant qax_result = property("Priority");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarButton::SetPriority(int value){ setProperty("Priority", QVariant(value)); }

inline QString CommandBarButton::ShortcutText() const
{
    QVariant qax_result = property("ShortcutText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarButton::SetShortcutText(const QString& value){ setProperty("ShortcutText", QVariant(value)); }

inline Office::MsoButtonState CommandBarButton::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoButtonState*)qax_result.constData();
}
inline void CommandBarButton::SetState(Office::MsoButtonState value){ setProperty("State", QVariant(value)); }

inline Office::MsoButtonStyle CommandBarButton::Style() const
{
    QVariant qax_result = property("Style");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoButtonStyle*)qax_result.constData();
}
inline void CommandBarButton::SetStyle(Office::MsoButtonStyle value){ setProperty("Style", QVariant(value)); }

inline QString CommandBarButton::Tag() const
{
    QVariant qax_result = property("Tag");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarButton::SetTag(const QString& value){ setProperty("Tag", QVariant(value)); }

inline QString CommandBarButton::TooltipText() const
{
    QVariant qax_result = property("TooltipText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CommandBarButton::SetTooltipText(const QString& value){ setProperty("TooltipText", QVariant(value)); }

inline int CommandBarButton::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoControlType CommandBarButton::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoControlType*)qax_result.constData();
}

inline bool CommandBarButton::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CommandBarButton::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline int CommandBarButton::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CommandBarButton::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline int CommandBarButton::accChildCount() const
{
    QVariant qax_result = property("accChildCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CommandBarButton::accDefaultAction() const
{
    QVariant qax_result = property("accDefaultAction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CommandBarButton::accDescription() const
{
    QVariant qax_result = property("accDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant CommandBarButton::accFocus() const
{
    QVariant qax_result = property("accFocus");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString CommandBarButton::accHelp() const
{
    QVariant qax_result = property("accHelp");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CommandBarButton::accKeyboardShortcut() const
{
    QVariant qax_result = property("accKeyboardShortcut");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant CommandBarButton::accName() const
{
    QVariant qax_result = property("accName");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void CommandBarButton::setAccName(const QVariant& value){ setProperty("accName", QVariant(value)); }

inline IDispatch* CommandBarButton::accParent() const
{
    QVariant qax_result = property("accParent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QVariant CommandBarButton::accRole() const
{
    QVariant qax_result = property("accRole");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBarButton::accSelection() const
{
    QVariant qax_result = property("accSelection");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBarButton::accState() const
{
    QVariant qax_result = property("accState");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QVariant CommandBarButton::accValue() const
{
    QVariant qax_result = property("accValue");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void CommandBarButton::setAccValue(const QVariant& value){ setProperty("accValue", QVariant(value)); }

inline Office::CommandBarControl* CommandBarButton::Copy()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarButton::Copy(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarButton::Copy(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void CommandBarButton::CopyFace()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void CommandBarButton::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void CommandBarButton::Delete(const QVariant& Temporary)
{
    void *_a[] = {0, (void*)&Temporary};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void CommandBarButton::Execute()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline Office::CommandBarControl* CommandBarButton::Move()
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarButton::Move(const QVariant& Bar)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline Office::CommandBarControl* CommandBarButton::Move(const QVariant& Bar, const QVariant& Before)
{
    Office::CommandBarControl* qax_result = 0;
    qRegisterMetaType("CommandBarControl*", &qax_result);
    qRegisterMetaType("CommandBarControl", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Bar, (void*)&Before};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline void CommandBarButton::PasteFace()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void CommandBarButton::Reserved1()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void CommandBarButton::Reserved2()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void CommandBarButton::Reserved3()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void CommandBarButton::Reserved4()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void CommandBarButton::Reserved5()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void CommandBarButton::Reserved6()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void CommandBarButton::Reserved7()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void CommandBarButton::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline void CommandBarButton::SetFocus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline IDispatch* CommandBarButton::accChild(const QVariant& varChild)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline void CommandBarButton::accDoDefaultAction()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
}

inline void CommandBarButton::accDoDefaultAction(const QVariant& varChild)
{
    void *_a[] = {0, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
}

inline int CommandBarButton::accHelpTopic(QString& pszHelpFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
    return qax_result;
}

inline int CommandBarButton::accHelpTopic(QString& pszHelpFile, const QVariant& varChild)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pszHelpFile, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline QVariant CommandBarButton::accHitTest(int xLeft, int yTop)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&xLeft, (void*)&yTop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline void CommandBarButton::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
}

inline void CommandBarButton::accLocation(int& pxLeft, int& pyTop, int& pcxWidth, int& pcyHeight, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&pxLeft, (void*)&pyTop, (void*)&pcxWidth, (void*)&pcyHeight, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
}

inline QVariant CommandBarButton::accNavigate(int navDir)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
    return qax_result;
}

inline QVariant CommandBarButton::accNavigate(int navDir, const QVariant& varStart)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&navDir, (void*)&varStart};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
    return qax_result;
}

inline void CommandBarButton::accSelect(int flagsSelect)
{
    void *_a[] = {0, (void*)&flagsSelect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
}

inline void CommandBarButton::accSelect(int flagsSelect, const QVariant& varChild)
{
    void *_a[] = {0, (void*)&flagsSelect, (void*)&varChild};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
}


inline IDispatch* WebPageFont::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int WebPageFont::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString WebPageFont::FixedWidthFont() const
{
    QVariant qax_result = property("FixedWidthFont");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebPageFont::SetFixedWidthFont(const QString& value){ setProperty("FixedWidthFont", QVariant(value)); }

inline double WebPageFont::FixedWidthFontSize() const
{
    QVariant qax_result = property("FixedWidthFontSize");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void WebPageFont::SetFixedWidthFontSize(double value){ setProperty("FixedWidthFontSize", QVariant(value)); }

inline QString WebPageFont::ProportionalFont() const
{
    QVariant qax_result = property("ProportionalFont");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebPageFont::SetProportionalFont(const QString& value){ setProperty("ProportionalFont", QVariant(value)); }

inline double WebPageFont::ProportionalFontSize() const
{
    QVariant qax_result = property("ProportionalFontSize");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void WebPageFont::SetProportionalFontSize(double value){ setProperty("ProportionalFontSize", QVariant(value)); }


inline IDispatch* WebPageFonts::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int WebPageFonts::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int WebPageFonts::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IUnknown* WebPageFonts::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::WebPageFont* WebPageFonts::Item(Office::MsoCharacterSet Index)
{
    Office::WebPageFont* qax_result = 0;
    qRegisterMetaType("WebPageFont*", &qax_result);
    qRegisterMetaType("WebPageFont", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}


inline IDispatch* HTMLProjectItem::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int HTMLProjectItem::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool HTMLProjectItem::IsOpen() const
{
    QVariant qax_result = property("IsOpen");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString HTMLProjectItem::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* HTMLProjectItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString HTMLProjectItem::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void HTMLProjectItem::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline void HTMLProjectItem::LoadFromFile(const QString& FileName)
{
    void *_a[] = {0, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void HTMLProjectItem::Open()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void HTMLProjectItem::Open(Office::MsoHTMLProjectOpen OpenKind)
{
    void *_a[] = {0, (void*)&OpenKind};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void HTMLProjectItem::SaveCopyAs(const QString& FileName)
{
    void *_a[] = {0, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline IDispatch* HTMLProjectItems::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int HTMLProjectItems::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int HTMLProjectItems::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* HTMLProjectItems::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* HTMLProjectItems::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::HTMLProjectItem* HTMLProjectItems::Item(QVariant& Index)
{
    Office::HTMLProjectItem* qax_result = 0;
    qRegisterMetaType("HTMLProjectItem*", &qax_result);
    qRegisterMetaType("HTMLProjectItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}


inline IDispatch* HTMLProject::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int HTMLProject::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::HTMLProjectItems* HTMLProject::HTMLProjectItems() const
{
    Office::HTMLProjectItems* qax_pointer = 0;
    qRegisterMetaType("HTMLProjectItems*", &qax_pointer);
    qRegisterMetaType("HTMLProjectItems", qax_pointer);
    QVariant qax_result = property("HTMLProjectItems");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::HTMLProjectItems**)qax_result.constData();
}

inline IDispatch* HTMLProject::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoHTMLProjectState HTMLProject::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoHTMLProjectState*)qax_result.constData();
}

inline void HTMLProject::Open()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void HTMLProject::Open(Office::MsoHTMLProjectOpen OpenKind)
{
    void *_a[] = {0, (void*)&OpenKind};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void HTMLProject::RefreshDocument()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void HTMLProject::RefreshDocument(bool Refresh)
{
    void *_a[] = {0, (void*)&Refresh};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void HTMLProject::RefreshProject()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void HTMLProject::RefreshProject(bool Refresh)
{
    void *_a[] = {0, (void*)&Refresh};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}


inline IDispatch* MsoDebugOptions::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int MsoDebugOptions::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int MsoDebugOptions::FeatureReports() const
{
    QVariant qax_result = property("FeatureReports");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void MsoDebugOptions::SetFeatureReports(int value){ setProperty("FeatureReports", QVariant(value)); }

inline bool MsoDebugOptions::OutputToDebugger() const
{
    QVariant qax_result = property("OutputToDebugger");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MsoDebugOptions::SetOutputToDebugger(bool value){ setProperty("OutputToDebugger", QVariant(value)); }

inline bool MsoDebugOptions::OutputToFile() const
{
    QVariant qax_result = property("OutputToFile");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MsoDebugOptions::SetOutputToFile(bool value){ setProperty("OutputToFile", QVariant(value)); }

inline bool MsoDebugOptions::OutputToMessageBox() const
{
    QVariant qax_result = property("OutputToMessageBox");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MsoDebugOptions::SetOutputToMessageBox(bool value){ setProperty("OutputToMessageBox", QVariant(value)); }


inline IDispatch* FileDialogSelectedItems::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int FileDialogSelectedItems::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int FileDialogSelectedItems::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* FileDialogSelectedItems::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* FileDialogSelectedItems::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline QString FileDialogSelectedItems::Item(int Index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}


inline IDispatch* FileDialogFilter::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int FileDialogFilter::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString FileDialogFilter::Description() const
{
    QVariant qax_result = property("Description");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString FileDialogFilter::Extensions() const
{
    QVariant qax_result = property("Extensions");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* FileDialogFilter::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}


inline IDispatch* FileDialogFilters::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int FileDialogFilters::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int FileDialogFilters::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* FileDialogFilters::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* FileDialogFilters::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::FileDialogFilter* FileDialogFilters::Add(const QString& Description, const QString& Extensions)
{
    Office::FileDialogFilter* qax_result = 0;
    qRegisterMetaType("FileDialogFilter*", &qax_result);
    qRegisterMetaType("FileDialogFilter", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Description, (void*)&Extensions};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::FileDialogFilter* FileDialogFilters::Add(const QString& Description, const QString& Extensions, const QVariant& Position)
{
    Office::FileDialogFilter* qax_result = 0;
    qRegisterMetaType("FileDialogFilter*", &qax_result);
    qRegisterMetaType("FileDialogFilter", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Description, (void*)&Extensions, (void*)&Position};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void FileDialogFilters::Clear()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void FileDialogFilters::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void FileDialogFilters::Delete(const QVariant& filter)
{
    void *_a[] = {0, (void*)&filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline Office::FileDialogFilter* FileDialogFilters::Item(int Index)
{
    Office::FileDialogFilter* qax_result = 0;
    qRegisterMetaType("FileDialogFilter*", &qax_result);
    qRegisterMetaType("FileDialogFilter", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}


inline bool FileDialog::AllowMultiSelect() const
{
    QVariant qax_result = property("AllowMultiSelect");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void FileDialog::SetAllowMultiSelect(bool value){ setProperty("AllowMultiSelect", QVariant(value)); }

inline IDispatch* FileDialog::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString FileDialog::ButtonName() const
{
    QVariant qax_result = property("ButtonName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FileDialog::SetButtonName(const QString& value){ setProperty("ButtonName", QVariant(value)); }

inline int FileDialog::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoFileDialogType FileDialog::DialogType() const
{
    QVariant qax_result = property("DialogType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoFileDialogType*)qax_result.constData();
}

inline int FileDialog::FilterIndex() const
{
    QVariant qax_result = property("FilterIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void FileDialog::SetFilterIndex(int value){ setProperty("FilterIndex", QVariant(value)); }

inline Office::FileDialogFilters* FileDialog::Filters() const
{
    Office::FileDialogFilters* qax_pointer = 0;
    qRegisterMetaType("FileDialogFilters*", &qax_pointer);
    qRegisterMetaType("FileDialogFilters", qax_pointer);
    QVariant qax_result = property("Filters");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::FileDialogFilters**)qax_result.constData();
}

inline QString FileDialog::InitialFileName() const
{
    QVariant qax_result = property("InitialFileName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FileDialog::SetInitialFileName(const QString& value){ setProperty("InitialFileName", QVariant(value)); }

inline Office::MsoFileDialogView FileDialog::InitialView() const
{
    QVariant qax_result = property("InitialView");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoFileDialogView*)qax_result.constData();
}
inline void FileDialog::SetInitialView(Office::MsoFileDialogView value){ setProperty("InitialView", QVariant(value)); }

inline QString FileDialog::Item() const
{
    QVariant qax_result = property("Item");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* FileDialog::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::FileDialogSelectedItems* FileDialog::SelectedItems() const
{
    Office::FileDialogSelectedItems* qax_pointer = 0;
    qRegisterMetaType("FileDialogSelectedItems*", &qax_pointer);
    qRegisterMetaType("FileDialogSelectedItems", qax_pointer);
    QVariant qax_result = property("SelectedItems");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::FileDialogSelectedItems**)qax_result.constData();
}

inline QString FileDialog::Title() const
{
    QVariant qax_result = property("Title");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FileDialog::SetTitle(const QString& value){ setProperty("Title", QVariant(value)); }

inline void FileDialog::Execute()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline int FileDialog::Show()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}


inline IDispatch* SignatureSet::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int SignatureSet::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int SignatureSet::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* SignatureSet::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* SignatureSet::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::Signature* SignatureSet::Add()
{
    Office::Signature* qax_result = 0;
    qRegisterMetaType("Signature*", &qax_result);
    qRegisterMetaType("Signature", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline void SignatureSet::Commit()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Office::Signature* SignatureSet::Item(int iSig)
{
    Office::Signature* qax_result = 0;
    qRegisterMetaType("Signature*", &qax_result);
    qRegisterMetaType("Signature", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&iSig};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline IDispatch* Signature::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool Signature::AttachCertificate() const
{
    QVariant qax_result = property("AttachCertificate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Signature::SetAttachCertificate(bool value){ setProperty("AttachCertificate", QVariant(value)); }

inline int Signature::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QVariant Signature::ExpireDate() const
{
    QVariant qax_result = property("ExpireDate");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline bool Signature::IsCertificateExpired() const
{
    QVariant qax_result = property("IsCertificateExpired");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool Signature::IsCertificateRevoked() const
{
    QVariant qax_result = property("IsCertificateRevoked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool Signature::IsValid() const
{
    QVariant qax_result = property("IsValid");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString Signature::Issuer() const
{
    QVariant qax_result = property("Issuer");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* Signature::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QVariant Signature::SignDate() const
{
    QVariant qax_result = property("SignDate");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString Signature::Signer() const
{
    QVariant qax_result = property("Signer");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline void Signature::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}


inline IDispatch* IMsoEnvelopeVB::CommandBars() const
{
    QVariant qax_result = property("CommandBars");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString IMsoEnvelopeVB::Introduction() const
{
    QVariant qax_result = property("Introduction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IMsoEnvelopeVB::SetIntroduction(const QString& value){ setProperty("Introduction", QVariant(value)); }

inline IDispatch* IMsoEnvelopeVB::Item() const
{
    QVariant qax_result = property("Item");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IDispatch* IMsoEnvelopeVB::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}


inline IDispatch* MsoEnvelope::CommandBars() const
{
    QVariant qax_result = property("CommandBars");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString MsoEnvelope::Introduction() const
{
    QVariant qax_result = property("Introduction");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MsoEnvelope::SetIntroduction(const QString& value){ setProperty("Introduction", QVariant(value)); }

inline IDispatch* MsoEnvelope::Item() const
{
    QVariant qax_result = property("Item");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IDispatch* MsoEnvelope::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}


inline IDispatch* FileTypes::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int FileTypes::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int FileTypes::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IUnknown* FileTypes::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline void FileTypes::Add(Office::MsoFileType FileType)
{
    void *_a[] = {0, (void*)&FileType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline MsoFileType FileTypes::Item(int Index)
{
    MsoFileType qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void FileTypes::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}


inline IDispatch* SearchFolders::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int SearchFolders::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int SearchFolders::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IUnknown* SearchFolders::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline void SearchFolders::Add(Office::ScopeFolder* ScopeFolder)
{
    void *_a[] = {0, (void*)&ScopeFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline Office::ScopeFolder* SearchFolders::Item(int Index)
{
    Office::ScopeFolder* qax_result = 0;
    qRegisterMetaType("ScopeFolder*", &qax_result);
    qRegisterMetaType("ScopeFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void SearchFolders::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}


inline IDispatch* ScopeFolders::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int ScopeFolders::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int ScopeFolders::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IUnknown* ScopeFolders::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::ScopeFolder* ScopeFolders::Item(int Index)
{
    Office::ScopeFolder* qax_result = 0;
    qRegisterMetaType("ScopeFolder*", &qax_result);
    qRegisterMetaType("ScopeFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}


inline IDispatch* ScopeFolder::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int ScopeFolder::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString ScopeFolder::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ScopeFolder::Path() const
{
    QVariant qax_result = property("Path");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Office::ScopeFolders* ScopeFolder::ScopeFolders() const
{
    Office::ScopeFolders* qax_pointer = 0;
    qRegisterMetaType("ScopeFolders*", &qax_pointer);
    qRegisterMetaType("ScopeFolders", qax_pointer);
    QVariant qax_result = property("ScopeFolders");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ScopeFolders**)qax_result.constData();
}

inline void ScopeFolder::AddToSearchFolders()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}


inline IDispatch* SearchScope::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int SearchScope::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::ScopeFolder* SearchScope::ScopeFolder() const
{
    Office::ScopeFolder* qax_pointer = 0;
    qRegisterMetaType("ScopeFolder*", &qax_pointer);
    qRegisterMetaType("ScopeFolder", qax_pointer);
    QVariant qax_result = property("ScopeFolder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::ScopeFolder**)qax_result.constData();
}

inline Office::MsoSearchIn SearchScope::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoSearchIn*)qax_result.constData();
}


inline IDispatch* SearchScopes::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int SearchScopes::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int SearchScopes::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IUnknown* SearchScopes::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::SearchScope* SearchScopes::Item(int Index)
{
    Office::SearchScope* qax_result = 0;
    qRegisterMetaType("SearchScope*", &qax_result);
    qRegisterMetaType("SearchScope", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}


inline IDispatch* IMsoDiagram::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoTriState IMsoDiagram::AutoFormat() const
{
    QVariant qax_result = property("AutoFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void IMsoDiagram::SetAutoFormat(Office::MsoTriState value){ setProperty("AutoFormat", QVariant(value)); }

inline Office::MsoTriState IMsoDiagram::AutoLayout() const
{
    QVariant qax_result = property("AutoLayout");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void IMsoDiagram::SetAutoLayout(Office::MsoTriState value){ setProperty("AutoLayout", QVariant(value)); }

inline int IMsoDiagram::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::DiagramNodes* IMsoDiagram::Nodes() const
{
    Office::DiagramNodes* qax_pointer = 0;
    qRegisterMetaType("DiagramNodes*", &qax_pointer);
    qRegisterMetaType("DiagramNodes", qax_pointer);
    QVariant qax_result = property("Nodes");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::DiagramNodes**)qax_result.constData();
}

inline IDispatch* IMsoDiagram::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoTriState IMsoDiagram::Reverse() const
{
    QVariant qax_result = property("Reverse");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoTriState*)qax_result.constData();
}
inline void IMsoDiagram::SetReverse(Office::MsoTriState value){ setProperty("Reverse", QVariant(value)); }

inline Office::MsoDiagramType IMsoDiagram::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoDiagramType*)qax_result.constData();
}

inline void IMsoDiagram::Convert(Office::MsoDiagramType Type)
{
    void *_a[] = {0, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void IMsoDiagram::FitText()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline IDispatch* DiagramNodes::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int DiagramNodes::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int DiagramNodes::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* DiagramNodes::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* DiagramNodes::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::DiagramNode* DiagramNodes::Item(const QVariant& Index)
{
    Office::DiagramNode* qax_result = 0;
    qRegisterMetaType("DiagramNode*", &qax_result);
    qRegisterMetaType("DiagramNode", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline void DiagramNodes::SelectAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline IDispatch* DiagramNodeChildren::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int DiagramNodeChildren::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int DiagramNodeChildren::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::DiagramNode* DiagramNodeChildren::FirstChild() const
{
    Office::DiagramNode* qax_pointer = 0;
    qRegisterMetaType("DiagramNode*", &qax_pointer);
    qRegisterMetaType("DiagramNode", qax_pointer);
    QVariant qax_result = property("FirstChild");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::DiagramNode**)qax_result.constData();
}

inline Office::DiagramNode* DiagramNodeChildren::LastChild() const
{
    Office::DiagramNode* qax_pointer = 0;
    qRegisterMetaType("DiagramNode*", &qax_pointer);
    qRegisterMetaType("DiagramNode", qax_pointer);
    QVariant qax_result = property("LastChild");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::DiagramNode**)qax_result.constData();
}

inline IDispatch* DiagramNodeChildren::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* DiagramNodeChildren::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::DiagramNode* DiagramNodeChildren::AddNode()
{
    Office::DiagramNode* qax_result = 0;
    qRegisterMetaType("DiagramNode*", &qax_result);
    qRegisterMetaType("DiagramNode", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::DiagramNode* DiagramNodeChildren::AddNode(const QVariant& Index)
{
    Office::DiagramNode* qax_result = 0;
    qRegisterMetaType("DiagramNode*", &qax_result);
    qRegisterMetaType("DiagramNode", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::DiagramNode* DiagramNodeChildren::AddNode(const QVariant& Index, Office::MsoDiagramNodeType NodeType)
{
    Office::DiagramNode* qax_result = 0;
    qRegisterMetaType("DiagramNode*", &qax_result);
    qRegisterMetaType("DiagramNode", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index, (void*)&NodeType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Office::DiagramNode* DiagramNodeChildren::Item(const QVariant& Index)
{
    Office::DiagramNode* qax_result = 0;
    qRegisterMetaType("DiagramNode*", &qax_result);
    qRegisterMetaType("DiagramNode", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void DiagramNodeChildren::SelectAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}


inline IDispatch* DiagramNode::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::DiagramNodeChildren* DiagramNode::Children() const
{
    Office::DiagramNodeChildren* qax_pointer = 0;
    qRegisterMetaType("DiagramNodeChildren*", &qax_pointer);
    qRegisterMetaType("DiagramNodeChildren", qax_pointer);
    QVariant qax_result = property("Children");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::DiagramNodeChildren**)qax_result.constData();
}

inline int DiagramNode::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::IMsoDiagram* DiagramNode::Diagram() const
{
    Office::IMsoDiagram* qax_pointer = 0;
    qRegisterMetaType("IMsoDiagram*", &qax_pointer);
    qRegisterMetaType("IMsoDiagram", qax_pointer);
    QVariant qax_result = property("Diagram");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::IMsoDiagram**)qax_result.constData();
}

inline Office::MsoOrgChartLayoutType DiagramNode::Layout() const
{
    QVariant qax_result = property("Layout");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoOrgChartLayoutType*)qax_result.constData();
}
inline void DiagramNode::SetLayout(Office::MsoOrgChartLayoutType value){ setProperty("Layout", QVariant(value)); }

inline IDispatch* DiagramNode::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::DiagramNode* DiagramNode::Root() const
{
    Office::DiagramNode* qax_pointer = 0;
    qRegisterMetaType("DiagramNode*", &qax_pointer);
    qRegisterMetaType("DiagramNode", qax_pointer);
    QVariant qax_result = property("Root");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::DiagramNode**)qax_result.constData();
}

inline Office::Shape* DiagramNode::Shape() const
{
    Office::Shape* qax_pointer = 0;
    qRegisterMetaType("Shape*", &qax_pointer);
    qRegisterMetaType("Shape", qax_pointer);
    QVariant qax_result = property("Shape");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Shape**)qax_result.constData();
}

inline Office::Shape* DiagramNode::TextShape() const
{
    Office::Shape* qax_pointer = 0;
    qRegisterMetaType("Shape*", &qax_pointer);
    qRegisterMetaType("Shape", qax_pointer);
    QVariant qax_result = property("TextShape");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Shape**)qax_result.constData();
}

inline Office::DiagramNode* DiagramNode::AddNode()
{
    Office::DiagramNode* qax_result = 0;
    qRegisterMetaType("DiagramNode*", &qax_result);
    qRegisterMetaType("DiagramNode", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::DiagramNode* DiagramNode::AddNode(Office::MsoRelativeNodePosition Pos)
{
    Office::DiagramNode* qax_result = 0;
    qRegisterMetaType("DiagramNode*", &qax_result);
    qRegisterMetaType("DiagramNode", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Pos};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::DiagramNode* DiagramNode::AddNode(Office::MsoRelativeNodePosition Pos, Office::MsoDiagramNodeType NodeType)
{
    Office::DiagramNode* qax_result = 0;
    qRegisterMetaType("DiagramNode*", &qax_result);
    qRegisterMetaType("DiagramNode", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Pos, (void*)&NodeType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Office::DiagramNode* DiagramNode::CloneNode(bool CopyChildren, Office::DiagramNode* TargetNode)
{
    Office::DiagramNode* qax_result = 0;
    qRegisterMetaType("DiagramNode*", &qax_result);
    qRegisterMetaType("DiagramNode", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&CopyChildren, (void*)&TargetNode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Office::DiagramNode* DiagramNode::CloneNode(bool CopyChildren, Office::DiagramNode* TargetNode, Office::MsoRelativeNodePosition Pos)
{
    Office::DiagramNode* qax_result = 0;
    qRegisterMetaType("DiagramNode*", &qax_result);
    qRegisterMetaType("DiagramNode", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&CopyChildren, (void*)&TargetNode, (void*)&Pos};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline void DiagramNode::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void DiagramNode::MoveNode(Office::DiagramNode* TargetNode, Office::MsoRelativeNodePosition Pos)
{
    void *_a[] = {0, (void*)&TargetNode, (void*)&Pos};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline Office::DiagramNode* DiagramNode::NextNode()
{
    Office::DiagramNode* qax_result = 0;
    qRegisterMetaType("DiagramNode*", &qax_result);
    qRegisterMetaType("DiagramNode", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Office::DiagramNode* DiagramNode::PrevNode()
{
    Office::DiagramNode* qax_result = 0;
    qRegisterMetaType("DiagramNode*", &qax_result);
    qRegisterMetaType("DiagramNode", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void DiagramNode::ReplaceNode(Office::DiagramNode* TargetNode)
{
    void *_a[] = {0, (void*)&TargetNode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void DiagramNode::SwapNode(Office::DiagramNode* TargetNode)
{
    void *_a[] = {0, (void*)&TargetNode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void DiagramNode::SwapNode(Office::DiagramNode* TargetNode, bool SwapChildren)
{
    void *_a[] = {0, (void*)&TargetNode, (void*)&SwapChildren};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void DiagramNode::TransferChildren(Office::DiagramNode* ReceivingNode)
{
    void *_a[] = {0, (void*)&ReceivingNode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}


inline IDispatch* CanvasShapes::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::Shape* CanvasShapes::Background() const
{
    Office::Shape* qax_pointer = 0;
    qRegisterMetaType("Shape*", &qax_pointer);
    qRegisterMetaType("Shape", qax_pointer);
    QVariant qax_result = property("Background");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Shape**)qax_result.constData();
}

inline int CanvasShapes::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CanvasShapes::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* CanvasShapes::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* CanvasShapes::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::Shape* CanvasShapes::AddCallout(Office::MsoCalloutType Type, double Left, double Top, double Width, double Height)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Left, (void*)&Top, (void*)&Width, (void*)&Height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::Shape* CanvasShapes::AddConnector(Office::MsoConnectorType Type, double BeginX, double BeginY, double EndX, double EndY)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&BeginX, (void*)&BeginY, (void*)&EndX, (void*)&EndY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::Shape* CanvasShapes::AddCurve(const QVariant& SafeArrayOfPoints)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&SafeArrayOfPoints};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Office::Shape* CanvasShapes::AddLabel(Office::MsoTextOrientation Orientation, double Left, double Top, double Width, double Height)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Orientation, (void*)&Left, (void*)&Top, (void*)&Width, (void*)&Height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Office::Shape* CanvasShapes::AddLine(double BeginX, double BeginY, double EndX, double EndY)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&BeginX, (void*)&BeginY, (void*)&EndX, (void*)&EndY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Office::Shape* CanvasShapes::AddPicture(const QString& FileName, Office::MsoTriState LinkToFile, Office::MsoTriState SaveWithDocument, double Left, double Top)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&LinkToFile, (void*)&SaveWithDocument, (void*)&Left, (void*)&Top};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Office::Shape* CanvasShapes::AddPicture(const QString& FileName, Office::MsoTriState LinkToFile, Office::MsoTriState SaveWithDocument, double Left, double Top, double Width)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&LinkToFile, (void*)&SaveWithDocument, (void*)&Left, (void*)&Top, (void*)&Width};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Office::Shape* CanvasShapes::AddPicture(const QString& FileName, Office::MsoTriState LinkToFile, Office::MsoTriState SaveWithDocument, double Left, double Top, double Width, double Height)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&LinkToFile, (void*)&SaveWithDocument, (void*)&Left, (void*)&Top, (void*)&Width, (void*)&Height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Office::Shape* CanvasShapes::AddPolyline(const QVariant& SafeArrayOfPoints)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&SafeArrayOfPoints};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline Office::Shape* CanvasShapes::AddShape(Office::MsoAutoShapeType Type, double Left, double Top, double Width, double Height)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Left, (void*)&Top, (void*)&Width, (void*)&Height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Office::Shape* CanvasShapes::AddTextEffect(Office::MsoPresetTextEffect PresetTextEffect, const QString& Text, const QString& FontName, double FontSize, Office::MsoTriState FontBold, Office::MsoTriState FontItalic, double Left, double Top)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PresetTextEffect, (void*)&Text, (void*)&FontName, (void*)&FontSize, (void*)&FontBold, (void*)&FontItalic, (void*)&Left, (void*)&Top};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Office::Shape* CanvasShapes::AddTextbox(Office::MsoTextOrientation Orientation, double Left, double Top, double Width, double Height)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Orientation, (void*)&Left, (void*)&Top, (void*)&Width, (void*)&Height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Office::FreeformBuilder* CanvasShapes::BuildFreeform(Office::MsoEditingType EditingType, double X1, double Y1)
{
    Office::FreeformBuilder* qax_result = 0;
    qRegisterMetaType("FreeformBuilder*", &qax_result);
    qRegisterMetaType("FreeformBuilder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&EditingType, (void*)&X1, (void*)&Y1};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Office::Shape* CanvasShapes::Item(const QVariant& Index)
{
    Office::Shape* qax_result = 0;
    qRegisterMetaType("Shape*", &qax_result);
    qRegisterMetaType("Shape", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline Office::ShapeRange* CanvasShapes::Range(const QVariant& Index)
{
    Office::ShapeRange* qax_result = 0;
    qRegisterMetaType("ShapeRange*", &qax_result);
    qRegisterMetaType("ShapeRange", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void CanvasShapes::SelectAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}


inline IDispatch* OfficeDataSourceObject::Columns() const
{
    QVariant qax_result = property("Columns");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString OfficeDataSourceObject::ConnectString() const
{
    QVariant qax_result = property("ConnectString");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OfficeDataSourceObject::SetConnectString(const QString& value){ setProperty("ConnectString", QVariant(value)); }

inline QString OfficeDataSourceObject::DataSource() const
{
    QVariant qax_result = property("DataSource");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OfficeDataSourceObject::SetDataSource(const QString& value){ setProperty("DataSource", QVariant(value)); }

inline IDispatch* OfficeDataSourceObject::Filters() const
{
    QVariant qax_result = property("Filters");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int OfficeDataSourceObject::RowCount() const
{
    QVariant qax_result = property("RowCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OfficeDataSourceObject::Table() const
{
    QVariant qax_result = property("Table");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OfficeDataSourceObject::SetTable(const QString& value){ setProperty("Table", QVariant(value)); }

inline void OfficeDataSourceObject::ApplyFilter()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline int OfficeDataSourceObject::Move(Office::MsoMoveRow MsoMoveRow)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MsoMoveRow};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int OfficeDataSourceObject::Move(Office::MsoMoveRow MsoMoveRow, int RowNbr)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MsoMoveRow, (void*)&RowNbr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void OfficeDataSourceObject::Open()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void OfficeDataSourceObject::Open(const QString& bstrSrc)
{
    void *_a[] = {0, (void*)&bstrSrc};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void OfficeDataSourceObject::Open(const QString& bstrSrc, const QString& bstrConnect)
{
    void *_a[] = {0, (void*)&bstrSrc, (void*)&bstrConnect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void OfficeDataSourceObject::Open(const QString& bstrSrc, const QString& bstrConnect, const QString& bstrTable)
{
    void *_a[] = {0, (void*)&bstrSrc, (void*)&bstrConnect, (void*)&bstrTable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void OfficeDataSourceObject::Open(const QString& bstrSrc, const QString& bstrConnect, const QString& bstrTable, int fOpenExclusive)
{
    void *_a[] = {0, (void*)&bstrSrc, (void*)&bstrConnect, (void*)&bstrTable, (void*)&fOpenExclusive};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void OfficeDataSourceObject::Open(const QString& bstrSrc, const QString& bstrConnect, const QString& bstrTable, int fOpenExclusive, int fNeverPrompt)
{
    void *_a[] = {0, (void*)&bstrSrc, (void*)&bstrConnect, (void*)&bstrTable, (void*)&fOpenExclusive, (void*)&fNeverPrompt};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void OfficeDataSourceObject::SetSortOrder(const QString& SortField1)
{
    void *_a[] = {0, (void*)&SortField1};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void OfficeDataSourceObject::SetSortOrder(const QString& SortField1, bool SortAscending1)
{
    void *_a[] = {0, (void*)&SortField1, (void*)&SortAscending1};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void OfficeDataSourceObject::SetSortOrder(const QString& SortField1, bool SortAscending1, const QString& SortField2)
{
    void *_a[] = {0, (void*)&SortField1, (void*)&SortAscending1, (void*)&SortField2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void OfficeDataSourceObject::SetSortOrder(const QString& SortField1, bool SortAscending1, const QString& SortField2, bool SortAscending2)
{
    void *_a[] = {0, (void*)&SortField1, (void*)&SortAscending1, (void*)&SortField2, (void*)&SortAscending2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void OfficeDataSourceObject::SetSortOrder(const QString& SortField1, bool SortAscending1, const QString& SortField2, bool SortAscending2, const QString& SortField3)
{
    void *_a[] = {0, (void*)&SortField1, (void*)&SortAscending1, (void*)&SortField2, (void*)&SortAscending2, (void*)&SortField3};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void OfficeDataSourceObject::SetSortOrder(const QString& SortField1, bool SortAscending1, const QString& SortField2, bool SortAscending2, const QString& SortField3, bool SortAscending3)
{
    void *_a[] = {0, (void*)&SortField1, (void*)&SortAscending1, (void*)&SortField2, (void*)&SortAscending2, (void*)&SortField3, (void*)&SortAscending3};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}


inline IDispatch* ODSOColumn::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int ODSOColumn::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int ODSOColumn::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString ODSOColumn::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* ODSOColumn::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString ODSOColumn::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}


inline IDispatch* ODSOColumns::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int ODSOColumns::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int ODSOColumns::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* ODSOColumns::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IDispatch* ODSOColumns::Item(const QVariant& varIndex)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&varIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}


inline IDispatch* ODSOFilter::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString ODSOFilter::Column() const
{
    QVariant qax_result = property("Column");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ODSOFilter::SetColumn(const QString& value){ setProperty("Column", QVariant(value)); }

inline QString ODSOFilter::CompareTo() const
{
    QVariant qax_result = property("CompareTo");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ODSOFilter::SetCompareTo(const QString& value){ setProperty("CompareTo", QVariant(value)); }

inline Office::MsoFilterComparison ODSOFilter::Comparison() const
{
    QVariant qax_result = property("Comparison");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoFilterComparison*)qax_result.constData();
}
inline void ODSOFilter::SetComparison(Office::MsoFilterComparison value){ setProperty("Comparison", QVariant(value)); }

inline Office::MsoFilterConjunction ODSOFilter::Conjunction() const
{
    QVariant qax_result = property("Conjunction");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoFilterConjunction*)qax_result.constData();
}
inline void ODSOFilter::SetConjunction(Office::MsoFilterConjunction value){ setProperty("Conjunction", QVariant(value)); }

inline int ODSOFilter::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int ODSOFilter::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* ODSOFilter::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}


inline IDispatch* ODSOFilters::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int ODSOFilters::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int ODSOFilters::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* ODSOFilters::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline void ODSOFilters::Add(const QString& Column, Office::MsoFilterComparison Comparison, Office::MsoFilterConjunction Conjunction)
{
    void *_a[] = {0, (void*)&Column, (void*)&Comparison, (void*)&Conjunction};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void ODSOFilters::Add(const QString& Column, Office::MsoFilterComparison Comparison, Office::MsoFilterConjunction Conjunction, const QString& bstrCompareTo)
{
    void *_a[] = {0, (void*)&Column, (void*)&Comparison, (void*)&Conjunction, (void*)&bstrCompareTo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void ODSOFilters::Add(const QString& Column, Office::MsoFilterComparison Comparison, Office::MsoFilterConjunction Conjunction, const QString& bstrCompareTo, bool DeferUpdate)
{
    void *_a[] = {0, (void*)&Column, (void*)&Comparison, (void*)&Conjunction, (void*)&bstrCompareTo, (void*)&DeferUpdate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void ODSOFilters::Delete(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void ODSOFilters::Delete(int Index, bool DeferUpdate)
{
    void *_a[] = {0, (void*)&Index, (void*)&DeferUpdate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline IDispatch* ODSOFilters::Item(int Index)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}


inline IDispatch* NewFile::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int NewFile::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool NewFile::Add(const QString& FileName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline bool NewFile::Add(const QString& FileName, const QVariant& Section)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&Section};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline bool NewFile::Add(const QString& FileName, const QVariant& Section, const QVariant& DisplayName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&Section, (void*)&DisplayName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline bool NewFile::Add(const QString& FileName, const QVariant& Section, const QVariant& DisplayName, const QVariant& Action)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&Section, (void*)&DisplayName, (void*)&Action};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline bool NewFile::Remove(const QString& FileName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline bool NewFile::Remove(const QString& FileName, const QVariant& Section)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&Section};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline bool NewFile::Remove(const QString& FileName, const QVariant& Section, const QVariant& DisplayName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&Section, (void*)&DisplayName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline bool NewFile::Remove(const QString& FileName, const QVariant& Section, const QVariant& DisplayName, const QVariant& Action)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&Section, (void*)&DisplayName, (void*)&Action};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}


inline QString WebComponent::HTML() const
{
    QVariant qax_result = property("HTML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebComponent::SetHTML(const QString& value){ setProperty("HTML", QVariant(value)); }

inline int WebComponent::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WebComponent::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline QString WebComponent::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebComponent::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* WebComponent::Shape() const
{
    QVariant qax_result = property("Shape");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString WebComponent::URL() const
{
    QVariant qax_result = property("URL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebComponent::SetURL(const QString& value){ setProperty("URL", QVariant(value)); }

inline int WebComponent::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WebComponent::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline void WebComponent::Commit()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void WebComponent::Revert()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void WebComponent::SetPlaceHolderGraphic(const QString& PlaceHolderGraphic)
{
    void *_a[] = {0, (void*)&PlaceHolderGraphic};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}


inline IDispatch* WebComponentWindowExternal::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString WebComponentWindowExternal::ApplicationName() const
{
    QVariant qax_result = property("ApplicationName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int WebComponentWindowExternal::ApplicationVersion() const
{
    QVariant qax_result = property("ApplicationVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int WebComponentWindowExternal::InterfaceVersion() const
{
    QVariant qax_result = property("InterfaceVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::WebComponent* WebComponentWindowExternal::WebComponent() const
{
    Office::WebComponent* qax_pointer = 0;
    qRegisterMetaType("WebComponent*", &qax_pointer);
    qRegisterMetaType("WebComponent", qax_pointer);
    QVariant qax_result = property("WebComponent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::WebComponent**)qax_result.constData();
}

inline void WebComponentWindowExternal::CloseWindow()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}


inline IDispatch* WebComponentFormat::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString WebComponentFormat::HTML() const
{
    QVariant qax_result = property("HTML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebComponentFormat::SetHTML(const QString& value){ setProperty("HTML", QVariant(value)); }

inline int WebComponentFormat::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WebComponentFormat::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline QString WebComponentFormat::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebComponentFormat::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* WebComponentFormat::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString WebComponentFormat::PreviewGraphic() const
{
    QVariant qax_result = property("PreviewGraphic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebComponentFormat::SetPreviewGraphic(const QString& value){ setProperty("PreviewGraphic", QVariant(value)); }

inline QString WebComponentFormat::URL() const
{
    QVariant qax_result = property("URL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebComponentFormat::SetURL(const QString& value){ setProperty("URL", QVariant(value)); }

inline int WebComponentFormat::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WebComponentFormat::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline void WebComponentFormat::LaunchPropertiesWindow()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}


inline int ILicWizExternal::AnimationEnabled() const
{
    QVariant qax_result = property("AnimationEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int ILicWizExternal::Context() const
{
    QVariant qax_result = property("Context");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString ILicWizExternal::CountryInfo() const
{
    QVariant qax_result = property("CountryInfo");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int ILicWizExternal::CurrentHelpId() const
{
    QVariant qax_result = property("CurrentHelpId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ILicWizExternal::SetCurrentHelpId(int value){ setProperty("CurrentHelpId", QVariant(value)); }

inline IDispatch* ILicWizExternal::LicAgent() const
{
    QVariant qax_result = property("LicAgent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString ILicWizExternal::OfficeOnTheWebUrl() const
{
    QVariant qax_result = property("OfficeOnTheWebUrl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* ILicWizExternal::Validator() const
{
    QVariant qax_result = property("Validator");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString ILicWizExternal::WizardTitle() const
{
    QVariant qax_result = property("WizardTitle");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ILicWizExternal::SetWizardTitle(const QString& value){ setProperty("WizardTitle", QVariant(value)); }

inline int ILicWizExternal::WizardVisible() const
{
    QVariant qax_result = property("WizardVisible");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ILicWizExternal::SetWizardVisible(int value){ setProperty("WizardVisible", QVariant(value)); }

inline int ILicWizExternal::DepositPidKey(const QString& bstrKey, int fMORW)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrKey, (void*)&fMORW};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline void ILicWizExternal::DisableVORWReminder(int BPC)
{
    void *_a[] = {0, (void*)&BPC};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline QString ILicWizExternal::FormatDate(const QDateTime& date)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QString ILicWizExternal::FormatDate(const QDateTime& date, const QString& pFormat)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&date, (void*)&pFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int ILicWizExternal::GetConnectedState()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline void ILicWizExternal::InternetDisconnect()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void ILicWizExternal::InvokeDateTimeApplet()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline int ILicWizExternal::MsoAlert(const QString& bstrText, const QString& bstrButtons, const QString& bstrIcon)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrText, (void*)&bstrButtons, (void*)&bstrIcon};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void ILicWizExternal::OpenInDefaultBrowser(const QString& bstrUrl)
{
    void *_a[] = {0, (void*)&bstrUrl};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void ILicWizExternal::PrintHtmlDocument(IUnknown* punkHtmlDoc)
{
    void *_a[] = {0, (void*)&punkHtmlDoc};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void ILicWizExternal::ResetPID()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void ILicWizExternal::ResignDpc(const QString& bstrProductCode)
{
    void *_a[] = {0, (void*)&bstrProductCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline QString ILicWizExternal::SaveReceipt(const QString& bstrReceipt)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrReceipt};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void ILicWizExternal::SetDialogSize(int dx, int dy)
{
    void *_a[] = {0, (void*)&dx, (void*)&dy};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void ILicWizExternal::ShowHelp()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void ILicWizExternal::ShowHelp(QVariant& pvarId)
{
    void *_a[] = {0, (void*)&pvarId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void ILicWizExternal::SortSelectOptions(IDispatch* pdispSelect)
{
    void *_a[] = {0, (void*)&pdispSelect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void ILicWizExternal::Terminate()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline int ILicWizExternal::VerifyClock(int lMode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline void ILicWizExternal::WriteLog(const QString& bstrMessage)
{
    void *_a[] = {0, (void*)&bstrMessage};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}


inline QVariant ILicValidator::Products() const
{
    QVariant qax_result = property("Products");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline int ILicValidator::Selection() const
{
    QVariant qax_result = property("Selection");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ILicValidator::SetSelection(int value){ setProperty("Selection", QVariant(value)); }


inline void ILicAgent::AsyncProcessCCRenewalLicenseRequest()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void ILicAgent::AsyncProcessCCRenewalPriceRequest()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void ILicAgent::AsyncProcessDroppedLicenseRequest()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void ILicAgent::AsyncProcessHandshakeRequest(int bReviseCustInfo)
{
    void *_a[] = {0, (void*)&bReviseCustInfo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void ILicAgent::AsyncProcessNewLicenseRequest()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void ILicAgent::AsyncProcessReissueLicenseRequest()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void ILicAgent::AsyncProcessRetailRenewalLicenseRequest()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void ILicAgent::AsyncProcessReviseCustInfoRequest()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void ILicAgent::CancelAsyncProcessRequest(int bIsLicenseRequest)
{
    void *_a[] = {0, (void*)&bIsLicenseRequest};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline uint ILicAgent::CheckSystemClock()
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline uint ILicAgent::DepositConfirmationId(const QString& bstrVal)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline uint ILicAgent::DisplaySSLCert()
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline QString ILicAgent::GenerateInstallationId()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline QString ILicAgent::GetAddress1()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline QString ILicAgent::GetAddress2()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline uint ILicAgent::GetAsyncProcessReturnCode()
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline QString ILicAgent::GetBackendErrorMsg()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline QString ILicAgent::GetBillingAddress1()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline QString ILicAgent::GetBillingAddress2()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline QString ILicAgent::GetBillingCity()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline QString ILicAgent::GetBillingCountryCode()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline QString ILicAgent::GetBillingFirstName()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline QString ILicAgent::GetBillingLastName()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline QString ILicAgent::GetBillingPhone()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline QString ILicAgent::GetBillingState()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline QString ILicAgent::GetBillingZip()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline QDateTime ILicAgent::GetCCRenewalExpiryDate()
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline QString ILicAgent::GetCity()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline QString ILicAgent::GetCountryCode()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline QString ILicAgent::GetCountryDesc()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline QString ILicAgent::GetCreditCardCode(uint dwIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dwIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline uint ILicAgent::GetCreditCardCount()
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline uint ILicAgent::GetCreditCardExpiryMonth()
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline uint ILicAgent::GetCreditCardExpiryYear()
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline QString ILicAgent::GetCreditCardName(uint dwIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dwIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline QString ILicAgent::GetCreditCardNumber()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline QString ILicAgent::GetCreditCardType()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline QString ILicAgent::GetCurrencyDescription(uint dwCurrencyIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dwCurrencyIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline uint ILicAgent::GetCurrencyOption()
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline QDateTime ILicAgent::GetCurrentExpiryDate()
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline int ILicAgent::GetDisconnectOption()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline QString ILicAgent::GetEmail()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline QString ILicAgent::GetEndOfLifeHtmlText()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline QDateTime ILicAgent::GetExistingExpiryDate()
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline QString ILicAgent::GetFirstName()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline QString ILicAgent::GetInvoiceText()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline uint ILicAgent::GetIsoLanguage()
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline QString ILicAgent::GetLastName()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline QString ILicAgent::GetMSOffer()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline QString ILicAgent::GetMSUpdate()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline QDateTime ILicAgent::GetNewExpiryDate()
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline QString ILicAgent::GetOrgName()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline QString ILicAgent::GetOtherOffer()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline QString ILicAgent::GetPhone()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline uint ILicAgent::GetPriceItemCount()
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
    return qax_result;
}

inline QString ILicAgent::GetPriceItemLabel(uint dwIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dwIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
    return qax_result;
}

inline QString ILicAgent::GetPriceItemValue(uint dwCurrencyIndex, uint dwIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dwCurrencyIndex, (void*)&dwIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
    return qax_result;
}

inline QString ILicAgent::GetState()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
    return qax_result;
}

inline QString ILicAgent::GetVATLabel(const QString& bstrCountryCode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrCountryCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
    return qax_result;
}

inline QString ILicAgent::GetVATNumber()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
    return qax_result;
}

inline QString ILicAgent::GetZip()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
    return qax_result;
}

inline uint ILicAgent::Initialize(uint dwBPC, uint dwMode, const QString& bstrLicSource)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dwBPC, (void*)&dwMode, (void*)&bstrLicSource};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline int ILicAgent::IsCCRenewalCountry(const QString& bstrCountryCode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrCountryCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline int ILicAgent::IsUpgradeAvailable()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
    return qax_result;
}

inline uint ILicAgent::SaveBillingInfo(int bSave)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bSave};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
    return qax_result;
}

inline void ILicAgent::SetAddress1(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
}

inline void ILicAgent::SetAddress2(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
}

inline void ILicAgent::SetBillingAddress1(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
}

inline void ILicAgent::SetBillingAddress2(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
}

inline void ILicAgent::SetBillingCity(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
}

inline void ILicAgent::SetBillingCountryCode(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
}

inline void ILicAgent::SetBillingFirstName(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
}

inline void ILicAgent::SetBillingLastName(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
}

inline void ILicAgent::SetBillingPhone(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
}

inline void ILicAgent::SetBillingState(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
}

inline void ILicAgent::SetBillingZip(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 82, _a);
}

inline void ILicAgent::SetCity(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 83, _a);
}

inline void ILicAgent::SetCountryCode(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 84, _a);
}

inline void ILicAgent::SetCountryDesc(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 85, _a);
}

inline void ILicAgent::SetCreditCardExpiryMonth(uint dwCCMonth)
{
    void *_a[] = {0, (void*)&dwCCMonth};
    qt_metacall(QMetaObject::InvokeMetaMethod, 86, _a);
}

inline void ILicAgent::SetCreditCardExpiryYear(uint dwCCYear)
{
    void *_a[] = {0, (void*)&dwCCYear};
    qt_metacall(QMetaObject::InvokeMetaMethod, 87, _a);
}

inline void ILicAgent::SetCreditCardNumber(const QString& bstrCCNumber)
{
    void *_a[] = {0, (void*)&bstrCCNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 88, _a);
}

inline void ILicAgent::SetCreditCardType(const QString& bstrCCCode)
{
    void *_a[] = {0, (void*)&bstrCCCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 89, _a);
}

inline void ILicAgent::SetCurrencyOption(uint dwCurrencyOption)
{
    void *_a[] = {0, (void*)&dwCurrencyOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 90, _a);
}

inline void ILicAgent::SetDisconnectOption(int bNewVal)
{
    void *_a[] = {0, (void*)&bNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 91, _a);
}

inline void ILicAgent::SetEmail(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 92, _a);
}

inline void ILicAgent::SetFirstName(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 93, _a);
}

inline void ILicAgent::SetIsoLanguage(uint dwNewVal)
{
    void *_a[] = {0, (void*)&dwNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 94, _a);
}

inline void ILicAgent::SetLastName(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 95, _a);
}

inline void ILicAgent::SetMSOffer(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 96, _a);
}

inline void ILicAgent::SetMSUpdate(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 97, _a);
}

inline void ILicAgent::SetOrgName(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 98, _a);
}

inline void ILicAgent::SetOtherOffer(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 99, _a);
}

inline void ILicAgent::SetPhone(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 100, _a);
}

inline void ILicAgent::SetState(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 101, _a);
}

inline void ILicAgent::SetVATNumber(const QString& bstrVATNumber)
{
    void *_a[] = {0, (void*)&bstrVATNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 102, _a);
}

inline void ILicAgent::SetZip(const QString& bstrNewVal)
{
    void *_a[] = {0, (void*)&bstrNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 103, _a);
}

inline int ILicAgent::VerifyCheckDigits(const QString& bstrCIDIID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrCIDIID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 104, _a);
    return qax_result;
}

inline void ILicAgent::WantUpgrade(int bWantUpgrade)
{
    void *_a[] = {0, (void*)&bWantUpgrade};
    qt_metacall(QMetaObject::InvokeMetaMethod, 105, _a);
}


inline IDispatch* IMsoEServicesDialog::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString IMsoEServicesDialog::ApplicationName() const
{
    QVariant qax_result = property("ApplicationName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* IMsoEServicesDialog::ClipArt() const
{
    QVariant qax_result = property("ClipArt");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IDispatch* IMsoEServicesDialog::WebComponent() const
{
    QVariant qax_result = property("WebComponent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline void IMsoEServicesDialog::AddTrustedDomain(const QString& Domain)
{
    void *_a[] = {0, (void*)&Domain};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void IMsoEServicesDialog::Close()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void IMsoEServicesDialog::Close(bool ApplyWebComponentChanges)
{
    void *_a[] = {0, (void*)&ApplyWebComponentChanges};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}


inline QString WebComponentProperties::HTML() const
{
    QVariant qax_result = property("HTML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebComponentProperties::SetHTML(const QString& value){ setProperty("HTML", QVariant(value)); }

inline int WebComponentProperties::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WebComponentProperties::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline QString WebComponentProperties::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebComponentProperties::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline QString WebComponentProperties::PreviewGraphic() const
{
    QVariant qax_result = property("PreviewGraphic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebComponentProperties::SetPreviewGraphic(const QString& value){ setProperty("PreviewGraphic", QVariant(value)); }

inline QString WebComponentProperties::PreviewHTML() const
{
    QVariant qax_result = property("PreviewHTML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebComponentProperties::SetPreviewHTML(const QString& value){ setProperty("PreviewHTML", QVariant(value)); }

inline IDispatch* WebComponentProperties::Shape() const
{
    QVariant qax_result = property("Shape");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString WebComponentProperties::Tag() const
{
    QVariant qax_result = property("Tag");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebComponentProperties::SetTag(const QString& value){ setProperty("Tag", QVariant(value)); }

inline QString WebComponentProperties::URL() const
{
    QVariant qax_result = property("URL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WebComponentProperties::SetURL(const QString& value){ setProperty("URL", QVariant(value)); }

inline int WebComponentProperties::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WebComponentProperties::SetWidth(int value){ setProperty("Width", QVariant(value)); }


inline IDispatch* SmartDocument::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int SmartDocument::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString SmartDocument::SolutionID() const
{
    QVariant qax_result = property("SolutionID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SmartDocument::SetSolutionID(const QString& value){ setProperty("SolutionID", QVariant(value)); }

inline QString SmartDocument::SolutionURL() const
{
    QVariant qax_result = property("SolutionURL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SmartDocument::SetSolutionURL(const QString& value){ setProperty("SolutionURL", QVariant(value)); }

inline void SmartDocument::PickSolution()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void SmartDocument::PickSolution(bool ConsiderAllSchemas)
{
    void *_a[] = {0, (void*)&ConsiderAllSchemas};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void SmartDocument::RefreshPane()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}


inline IDispatch* SharedWorkspaceMember::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int SharedWorkspaceMember::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString SharedWorkspaceMember::DomainName() const
{
    QVariant qax_result = property("DomainName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString SharedWorkspaceMember::Email() const
{
    QVariant qax_result = property("Email");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString SharedWorkspaceMember::Id() const
{
    QVariant qax_result = property("Id");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString SharedWorkspaceMember::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* SharedWorkspaceMember::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline void SharedWorkspaceMember::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}


inline IDispatch* SharedWorkspaceMembers::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int SharedWorkspaceMembers::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int SharedWorkspaceMembers::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool SharedWorkspaceMembers::ItemCountExceeded() const
{
    QVariant qax_result = property("ItemCountExceeded");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* SharedWorkspaceMembers::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* SharedWorkspaceMembers::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::SharedWorkspaceMember* SharedWorkspaceMembers::Add(const QString& Email, const QString& DomainName, const QString& DisplayName)
{
    Office::SharedWorkspaceMember* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceMember*", &qax_result);
    qRegisterMetaType("SharedWorkspaceMember", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Email, (void*)&DomainName, (void*)&DisplayName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::SharedWorkspaceMember* SharedWorkspaceMembers::Add(const QString& Email, const QString& DomainName, const QString& DisplayName, const QVariant& Role)
{
    Office::SharedWorkspaceMember* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceMember*", &qax_result);
    qRegisterMetaType("SharedWorkspaceMember", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Email, (void*)&DomainName, (void*)&DisplayName, (void*)&Role};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::SharedWorkspaceMember* SharedWorkspaceMembers::Item(int Index)
{
    Office::SharedWorkspaceMember* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceMember*", &qax_result);
    qRegisterMetaType("SharedWorkspaceMember", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline IDispatch* SharedWorkspaceTask::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString SharedWorkspaceTask::AssignedTo() const
{
    QVariant qax_result = property("AssignedTo");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharedWorkspaceTask::SetAssignedTo(const QString& value){ setProperty("AssignedTo", QVariant(value)); }

inline QString SharedWorkspaceTask::CreatedBy() const
{
    QVariant qax_result = property("CreatedBy");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant SharedWorkspaceTask::CreatedDate() const
{
    QVariant qax_result = property("CreatedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline int SharedWorkspaceTask::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString SharedWorkspaceTask::Description() const
{
    QVariant qax_result = property("Description");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharedWorkspaceTask::SetDescription(const QString& value){ setProperty("Description", QVariant(value)); }

inline QVariant SharedWorkspaceTask::DueDate() const
{
    QVariant qax_result = property("DueDate");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void SharedWorkspaceTask::SetDueDate(const QVariant& value){ setProperty("DueDate", QVariant(value)); }

inline QString SharedWorkspaceTask::ModifiedBy() const
{
    QVariant qax_result = property("ModifiedBy");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant SharedWorkspaceTask::ModifiedDate() const
{
    QVariant qax_result = property("ModifiedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline IDispatch* SharedWorkspaceTask::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoSharedWorkspaceTaskPriority SharedWorkspaceTask::Priority() const
{
    QVariant qax_result = property("Priority");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoSharedWorkspaceTaskPriority*)qax_result.constData();
}
inline void SharedWorkspaceTask::SetPriority(Office::MsoSharedWorkspaceTaskPriority value){ setProperty("Priority", QVariant(value)); }

inline Office::MsoSharedWorkspaceTaskStatus SharedWorkspaceTask::Status() const
{
    QVariant qax_result = property("Status");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoSharedWorkspaceTaskStatus*)qax_result.constData();
}
inline void SharedWorkspaceTask::SetStatus(Office::MsoSharedWorkspaceTaskStatus value){ setProperty("Status", QVariant(value)); }

inline QString SharedWorkspaceTask::Title() const
{
    QVariant qax_result = property("Title");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharedWorkspaceTask::SetTitle(const QString& value){ setProperty("Title", QVariant(value)); }

inline void SharedWorkspaceTask::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void SharedWorkspaceTask::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline IDispatch* SharedWorkspaceTasks::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int SharedWorkspaceTasks::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int SharedWorkspaceTasks::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool SharedWorkspaceTasks::ItemCountExceeded() const
{
    QVariant qax_result = property("ItemCountExceeded");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* SharedWorkspaceTasks::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* SharedWorkspaceTasks::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::SharedWorkspaceTask* SharedWorkspaceTasks::Add(const QString& Title)
{
    Office::SharedWorkspaceTask* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceTask*", &qax_result);
    qRegisterMetaType("SharedWorkspaceTask", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Title};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::SharedWorkspaceTask* SharedWorkspaceTasks::Add(const QString& Title, const QVariant& Status)
{
    Office::SharedWorkspaceTask* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceTask*", &qax_result);
    qRegisterMetaType("SharedWorkspaceTask", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Title, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::SharedWorkspaceTask* SharedWorkspaceTasks::Add(const QString& Title, const QVariant& Status, const QVariant& Priority)
{
    Office::SharedWorkspaceTask* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceTask*", &qax_result);
    qRegisterMetaType("SharedWorkspaceTask", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Title, (void*)&Status, (void*)&Priority};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Office::SharedWorkspaceTask* SharedWorkspaceTasks::Add(const QString& Title, const QVariant& Status, const QVariant& Priority, const QVariant& Assignee)
{
    Office::SharedWorkspaceTask* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceTask*", &qax_result);
    qRegisterMetaType("SharedWorkspaceTask", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Title, (void*)&Status, (void*)&Priority, (void*)&Assignee};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Office::SharedWorkspaceTask* SharedWorkspaceTasks::Add(const QString& Title, const QVariant& Status, const QVariant& Priority, const QVariant& Assignee, const QVariant& Description)
{
    Office::SharedWorkspaceTask* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceTask*", &qax_result);
    qRegisterMetaType("SharedWorkspaceTask", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Title, (void*)&Status, (void*)&Priority, (void*)&Assignee, (void*)&Description};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Office::SharedWorkspaceTask* SharedWorkspaceTasks::Add(const QString& Title, const QVariant& Status, const QVariant& Priority, const QVariant& Assignee, const QVariant& Description, const QVariant& DueDate)
{
    Office::SharedWorkspaceTask* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceTask*", &qax_result);
    qRegisterMetaType("SharedWorkspaceTask", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Title, (void*)&Status, (void*)&Priority, (void*)&Assignee, (void*)&Description, (void*)&DueDate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Office::SharedWorkspaceTask* SharedWorkspaceTasks::Item(int Index)
{
    Office::SharedWorkspaceTask* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceTask*", &qax_result);
    qRegisterMetaType("SharedWorkspaceTask", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}


inline IDispatch* SharedWorkspaceFile::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString SharedWorkspaceFile::CreatedBy() const
{
    QVariant qax_result = property("CreatedBy");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant SharedWorkspaceFile::CreatedDate() const
{
    QVariant qax_result = property("CreatedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline int SharedWorkspaceFile::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString SharedWorkspaceFile::ModifiedBy() const
{
    QVariant qax_result = property("ModifiedBy");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant SharedWorkspaceFile::ModifiedDate() const
{
    QVariant qax_result = property("ModifiedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline IDispatch* SharedWorkspaceFile::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString SharedWorkspaceFile::URL() const
{
    QVariant qax_result = property("URL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline void SharedWorkspaceFile::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}


inline IDispatch* SharedWorkspaceFiles::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int SharedWorkspaceFiles::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int SharedWorkspaceFiles::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool SharedWorkspaceFiles::ItemCountExceeded() const
{
    QVariant qax_result = property("ItemCountExceeded");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* SharedWorkspaceFiles::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* SharedWorkspaceFiles::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::SharedWorkspaceFile* SharedWorkspaceFiles::Add(const QString& FileName)
{
    Office::SharedWorkspaceFile* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceFile*", &qax_result);
    qRegisterMetaType("SharedWorkspaceFile", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::SharedWorkspaceFile* SharedWorkspaceFiles::Add(const QString& FileName, const QVariant& ParentFolder)
{
    Office::SharedWorkspaceFile* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceFile*", &qax_result);
    qRegisterMetaType("SharedWorkspaceFile", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&ParentFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::SharedWorkspaceFile* SharedWorkspaceFiles::Add(const QString& FileName, const QVariant& ParentFolder, const QVariant& OverwriteIfFileAlreadyExists)
{
    Office::SharedWorkspaceFile* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceFile*", &qax_result);
    qRegisterMetaType("SharedWorkspaceFile", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&ParentFolder, (void*)&OverwriteIfFileAlreadyExists};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Office::SharedWorkspaceFile* SharedWorkspaceFiles::Add(const QString& FileName, const QVariant& ParentFolder, const QVariant& OverwriteIfFileAlreadyExists, const QVariant& KeepInSync)
{
    Office::SharedWorkspaceFile* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceFile*", &qax_result);
    qRegisterMetaType("SharedWorkspaceFile", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&ParentFolder, (void*)&OverwriteIfFileAlreadyExists, (void*)&KeepInSync};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Office::SharedWorkspaceFile* SharedWorkspaceFiles::Item(int Index)
{
    Office::SharedWorkspaceFile* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceFile*", &qax_result);
    qRegisterMetaType("SharedWorkspaceFile", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}


inline IDispatch* SharedWorkspaceFolder::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int SharedWorkspaceFolder::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString SharedWorkspaceFolder::FolderName() const
{
    QVariant qax_result = property("FolderName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* SharedWorkspaceFolder::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline void SharedWorkspaceFolder::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void SharedWorkspaceFolder::Delete(const QVariant& DeleteEventIfFolderContainsFiles)
{
    void *_a[] = {0, (void*)&DeleteEventIfFolderContainsFiles};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline IDispatch* SharedWorkspaceFolders::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int SharedWorkspaceFolders::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int SharedWorkspaceFolders::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool SharedWorkspaceFolders::ItemCountExceeded() const
{
    QVariant qax_result = property("ItemCountExceeded");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* SharedWorkspaceFolders::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* SharedWorkspaceFolders::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::SharedWorkspaceFolder* SharedWorkspaceFolders::Add(const QString& FolderName)
{
    Office::SharedWorkspaceFolder* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceFolder*", &qax_result);
    qRegisterMetaType("SharedWorkspaceFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FolderName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::SharedWorkspaceFolder* SharedWorkspaceFolders::Add(const QString& FolderName, const QVariant& ParentFolder)
{
    Office::SharedWorkspaceFolder* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceFolder*", &qax_result);
    qRegisterMetaType("SharedWorkspaceFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FolderName, (void*)&ParentFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::SharedWorkspaceFolder* SharedWorkspaceFolders::Item(int Index)
{
    Office::SharedWorkspaceFolder* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceFolder*", &qax_result);
    qRegisterMetaType("SharedWorkspaceFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline IDispatch* SharedWorkspaceLink::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString SharedWorkspaceLink::CreatedBy() const
{
    QVariant qax_result = property("CreatedBy");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant SharedWorkspaceLink::CreatedDate() const
{
    QVariant qax_result = property("CreatedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline int SharedWorkspaceLink::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString SharedWorkspaceLink::Description() const
{
    QVariant qax_result = property("Description");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharedWorkspaceLink::SetDescription(const QString& value){ setProperty("Description", QVariant(value)); }

inline QString SharedWorkspaceLink::ModifiedBy() const
{
    QVariant qax_result = property("ModifiedBy");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QVariant SharedWorkspaceLink::ModifiedDate() const
{
    QVariant qax_result = property("ModifiedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString SharedWorkspaceLink::Notes() const
{
    QVariant qax_result = property("Notes");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharedWorkspaceLink::SetNotes(const QString& value){ setProperty("Notes", QVariant(value)); }

inline IDispatch* SharedWorkspaceLink::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString SharedWorkspaceLink::URL() const
{
    QVariant qax_result = property("URL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharedWorkspaceLink::SetURL(const QString& value){ setProperty("URL", QVariant(value)); }

inline void SharedWorkspaceLink::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void SharedWorkspaceLink::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline IDispatch* SharedWorkspaceLinks::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int SharedWorkspaceLinks::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int SharedWorkspaceLinks::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool SharedWorkspaceLinks::ItemCountExceeded() const
{
    QVariant qax_result = property("ItemCountExceeded");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* SharedWorkspaceLinks::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* SharedWorkspaceLinks::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::SharedWorkspaceLink* SharedWorkspaceLinks::Add(const QString& URL)
{
    Office::SharedWorkspaceLink* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceLink*", &qax_result);
    qRegisterMetaType("SharedWorkspaceLink", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&URL};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::SharedWorkspaceLink* SharedWorkspaceLinks::Add(const QString& URL, const QVariant& Description)
{
    Office::SharedWorkspaceLink* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceLink*", &qax_result);
    qRegisterMetaType("SharedWorkspaceLink", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&URL, (void*)&Description};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::SharedWorkspaceLink* SharedWorkspaceLinks::Add(const QString& URL, const QVariant& Description, const QVariant& Notes)
{
    Office::SharedWorkspaceLink* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceLink*", &qax_result);
    qRegisterMetaType("SharedWorkspaceLink", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&URL, (void*)&Description, (void*)&Notes};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Office::SharedWorkspaceLink* SharedWorkspaceLinks::Item(int Index)
{
    Office::SharedWorkspaceLink* qax_result = 0;
    qRegisterMetaType("SharedWorkspaceLink*", &qax_result);
    qRegisterMetaType("SharedWorkspaceLink", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}


inline IDispatch* SharedWorkspace::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool SharedWorkspace::Connected() const
{
    QVariant qax_result = property("Connected");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int SharedWorkspace::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::SharedWorkspaceFiles* SharedWorkspace::Files() const
{
    Office::SharedWorkspaceFiles* qax_pointer = 0;
    qRegisterMetaType("SharedWorkspaceFiles*", &qax_pointer);
    qRegisterMetaType("SharedWorkspaceFiles", qax_pointer);
    QVariant qax_result = property("Files");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::SharedWorkspaceFiles**)qax_result.constData();
}

inline Office::SharedWorkspaceFolders* SharedWorkspace::Folders() const
{
    Office::SharedWorkspaceFolders* qax_pointer = 0;
    qRegisterMetaType("SharedWorkspaceFolders*", &qax_pointer);
    qRegisterMetaType("SharedWorkspaceFolders", qax_pointer);
    QVariant qax_result = property("Folders");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::SharedWorkspaceFolders**)qax_result.constData();
}

inline QVariant SharedWorkspace::LastRefreshed() const
{
    QVariant qax_result = property("LastRefreshed");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline Office::SharedWorkspaceLinks* SharedWorkspace::Links() const
{
    Office::SharedWorkspaceLinks* qax_pointer = 0;
    qRegisterMetaType("SharedWorkspaceLinks*", &qax_pointer);
    qRegisterMetaType("SharedWorkspaceLinks", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::SharedWorkspaceLinks**)qax_result.constData();
}

inline Office::SharedWorkspaceMembers* SharedWorkspace::Members() const
{
    Office::SharedWorkspaceMembers* qax_pointer = 0;
    qRegisterMetaType("SharedWorkspaceMembers*", &qax_pointer);
    qRegisterMetaType("SharedWorkspaceMembers", qax_pointer);
    QVariant qax_result = property("Members");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::SharedWorkspaceMembers**)qax_result.constData();
}

inline QString SharedWorkspace::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharedWorkspace::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* SharedWorkspace::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString SharedWorkspace::SourceURL() const
{
    QVariant qax_result = property("SourceURL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharedWorkspace::SetSourceURL(const QString& value){ setProperty("SourceURL", QVariant(value)); }

inline Office::SharedWorkspaceTasks* SharedWorkspace::Tasks() const
{
    Office::SharedWorkspaceTasks* qax_pointer = 0;
    qRegisterMetaType("SharedWorkspaceTasks*", &qax_pointer);
    qRegisterMetaType("SharedWorkspaceTasks", qax_pointer);
    QVariant qax_result = property("Tasks");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::SharedWorkspaceTasks**)qax_result.constData();
}

inline QString SharedWorkspace::URL() const
{
    QVariant qax_result = property("URL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline void SharedWorkspace::CreateNew()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void SharedWorkspace::CreateNew(const QVariant& URL)
{
    void *_a[] = {0, (void*)&URL};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void SharedWorkspace::CreateNew(const QVariant& URL, const QVariant& Name)
{
    void *_a[] = {0, (void*)&URL, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void SharedWorkspace::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void SharedWorkspace::Disconnect()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void SharedWorkspace::Refresh()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void SharedWorkspace::RemoveDocument()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}


inline IDispatch* Sync::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int Sync::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Office::MsoSyncErrorType Sync::ErrorType() const
{
    QVariant qax_result = property("ErrorType");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoSyncErrorType*)qax_result.constData();
}

inline QVariant Sync::LastSyncTime() const
{
    QVariant qax_result = property("LastSyncTime");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline IDispatch* Sync::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::MsoSyncStatusType Sync::Status() const
{
    QVariant qax_result = property("Status");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoSyncStatusType*)qax_result.constData();
}

inline QString Sync::WorkspaceLastChangedBy() const
{
    QVariant qax_result = property("WorkspaceLastChangedBy");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline void Sync::GetUpdate()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void Sync::OpenVersion(Office::MsoSyncVersionType SyncVersionType)
{
    void *_a[] = {0, (void*)&SyncVersionType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void Sync::PutUpdate()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void Sync::ResolveConflict(Office::MsoSyncConflictResolutionType SyncConflictResolution)
{
    void *_a[] = {0, (void*)&SyncConflictResolution};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void Sync::Unsuspend()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}


inline IDispatch* DocumentLibraryVersion::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString DocumentLibraryVersion::Comments() const
{
    QVariant qax_result = property("Comments");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int DocumentLibraryVersion::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int DocumentLibraryVersion::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QVariant DocumentLibraryVersion::Modified() const
{
    QVariant qax_result = property("Modified");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString DocumentLibraryVersion::ModifiedBy() const
{
    QVariant qax_result = property("ModifiedBy");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* DocumentLibraryVersion::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline void DocumentLibraryVersion::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline IDispatch* DocumentLibraryVersion::Open()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline IDispatch* DocumentLibraryVersion::Restore()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline IDispatch* DocumentLibraryVersions::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int DocumentLibraryVersions::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int DocumentLibraryVersions::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool DocumentLibraryVersions::IsVersioningEnabled() const
{
    QVariant qax_result = property("IsVersioningEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* DocumentLibraryVersions::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* DocumentLibraryVersions::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::DocumentLibraryVersion* DocumentLibraryVersions::Item(int lIndex)
{
    Office::DocumentLibraryVersion* qax_result = 0;
    qRegisterMetaType("DocumentLibraryVersion*", &qax_result);
    qRegisterMetaType("DocumentLibraryVersion", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&lIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}


inline IDispatch* UserPermission::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int UserPermission::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QVariant UserPermission::ExpirationDate() const
{
    QVariant qax_result = property("ExpirationDate");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void UserPermission::SetExpirationDate(const QVariant& value){ setProperty("ExpirationDate", QVariant(value)); }

inline IDispatch* UserPermission::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int UserPermission::Permission() const
{
    QVariant qax_result = property("Permission");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void UserPermission::SetPermission(int value){ setProperty("Permission", QVariant(value)); }

inline QString UserPermission::UserId() const
{
    QVariant qax_result = property("UserId");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline void UserPermission::Remove()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}


inline IDispatch* Permission::Application() const
{
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int Permission::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int Permission::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString Permission::DocumentAuthor() const
{
    QVariant qax_result = property("DocumentAuthor");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Permission::SetDocumentAuthor(const QString& value){ setProperty("DocumentAuthor", QVariant(value)); }

inline bool Permission::EnableTrustedBrowser() const
{
    QVariant qax_result = property("EnableTrustedBrowser");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Permission::SetEnableTrustedBrowser(bool value){ setProperty("EnableTrustedBrowser", QVariant(value)); }

inline bool Permission::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Permission::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* Permission::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool Permission::PermissionFromPolicy() const
{
    QVariant qax_result = property("PermissionFromPolicy");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString Permission::PolicyDescription() const
{
    QVariant qax_result = property("PolicyDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString Permission::PolicyName() const
{
    QVariant qax_result = property("PolicyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString Permission::RequestPermissionURL() const
{
    QVariant qax_result = property("RequestPermissionURL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Permission::SetRequestPermissionURL(const QString& value){ setProperty("RequestPermissionURL", QVariant(value)); }

inline bool Permission::StoreLicenses() const
{
    QVariant qax_result = property("StoreLicenses");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Permission::SetStoreLicenses(bool value){ setProperty("StoreLicenses", QVariant(value)); }

inline IUnknown* Permission::_NewEnum() const
{
    QVariant qax_result = property("_NewEnum");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Office::UserPermission* Permission::Add(const QString& UserId)
{
    Office::UserPermission* qax_result = 0;
    qRegisterMetaType("UserPermission*", &qax_result);
    qRegisterMetaType("UserPermission", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&UserId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline Office::UserPermission* Permission::Add(const QString& UserId, const QVariant& Permission)
{
    Office::UserPermission* qax_result = 0;
    qRegisterMetaType("UserPermission*", &qax_result);
    qRegisterMetaType("UserPermission", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&UserId, (void*)&Permission};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Office::UserPermission* Permission::Add(const QString& UserId, const QVariant& Permission, const QVariant& ExpirationDate)
{
    Office::UserPermission* qax_result = 0;
    qRegisterMetaType("UserPermission*", &qax_result);
    qRegisterMetaType("UserPermission", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&UserId, (void*)&Permission, (void*)&ExpirationDate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void Permission::ApplyPolicy(const QString& FileName)
{
    void *_a[] = {0, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline Office::UserPermission* Permission::Item(const QVariant& Index)
{
    Office::UserPermission* qax_result = 0;
    qRegisterMetaType("UserPermission*", &qax_result);
    qRegisterMetaType("UserPermission", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline void Permission::RemoveAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const Office::IAccessible *t)
{ Q_ASSERT(!t); return new Office::IAccessible; }

template<>
inline void *qMetaTypeConstructHelper(const Office::_IMsoDispObj *t)
{ Q_ASSERT(!t); return new Office::_IMsoDispObj; }

template<>
inline void *qMetaTypeConstructHelper(const Office::_IMsoOleAccDispObj *t)
{ Q_ASSERT(!t); return new Office::_IMsoOleAccDispObj; }

template<>
inline void *qMetaTypeConstructHelper(const Office::_CommandBars *t)
{ Q_ASSERT(!t); return new Office::_CommandBars; }

template<>
inline void *qMetaTypeConstructHelper(const Office::CommandBar *t)
{ Q_ASSERT(!t); return new Office::CommandBar; }

template<>
inline void *qMetaTypeConstructHelper(const Office::CommandBarControls *t)
{ Q_ASSERT(!t); return new Office::CommandBarControls; }

template<>
inline void *qMetaTypeConstructHelper(const Office::CommandBarControl *t)
{ Q_ASSERT(!t); return new Office::CommandBarControl; }

template<>
inline void *qMetaTypeConstructHelper(const Office::_CommandBarButton *t)
{ Q_ASSERT(!t); return new Office::_CommandBarButton; }

template<>
inline void *qMetaTypeConstructHelper(const Office::CommandBarPopup *t)
{ Q_ASSERT(!t); return new Office::CommandBarPopup; }

template<>
inline void *qMetaTypeConstructHelper(const Office::_CommandBarComboBox *t)
{ Q_ASSERT(!t); return new Office::_CommandBarComboBox; }

template<>
inline void *qMetaTypeConstructHelper(const Office::_CommandBarActiveX *t)
{ Q_ASSERT(!t); return new Office::_CommandBarActiveX; }

template<>
inline void *qMetaTypeConstructHelper(const Office::Adjustments *t)
{ Q_ASSERT(!t); return new Office::Adjustments; }

template<>
inline void *qMetaTypeConstructHelper(const Office::CalloutFormat *t)
{ Q_ASSERT(!t); return new Office::CalloutFormat; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ColorFormat *t)
{ Q_ASSERT(!t); return new Office::ColorFormat; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ConnectorFormat *t)
{ Q_ASSERT(!t); return new Office::ConnectorFormat; }

template<>
inline void *qMetaTypeConstructHelper(const Office::FillFormat *t)
{ Q_ASSERT(!t); return new Office::FillFormat; }

template<>
inline void *qMetaTypeConstructHelper(const Office::FreeformBuilder *t)
{ Q_ASSERT(!t); return new Office::FreeformBuilder; }

template<>
inline void *qMetaTypeConstructHelper(const Office::GroupShapes *t)
{ Q_ASSERT(!t); return new Office::GroupShapes; }

template<>
inline void *qMetaTypeConstructHelper(const Office::LineFormat *t)
{ Q_ASSERT(!t); return new Office::LineFormat; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ShapeNode *t)
{ Q_ASSERT(!t); return new Office::ShapeNode; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ShapeNodes *t)
{ Q_ASSERT(!t); return new Office::ShapeNodes; }

template<>
inline void *qMetaTypeConstructHelper(const Office::PictureFormat *t)
{ Q_ASSERT(!t); return new Office::PictureFormat; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ShadowFormat *t)
{ Q_ASSERT(!t); return new Office::ShadowFormat; }

template<>
inline void *qMetaTypeConstructHelper(const Office::Script *t)
{ Q_ASSERT(!t); return new Office::Script; }

template<>
inline void *qMetaTypeConstructHelper(const Office::Scripts *t)
{ Q_ASSERT(!t); return new Office::Scripts; }

template<>
inline void *qMetaTypeConstructHelper(const Office::Shape *t)
{ Q_ASSERT(!t); return new Office::Shape; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ShapeRange *t)
{ Q_ASSERT(!t); return new Office::ShapeRange; }

template<>
inline void *qMetaTypeConstructHelper(const Office::Shapes *t)
{ Q_ASSERT(!t); return new Office::Shapes; }

template<>
inline void *qMetaTypeConstructHelper(const Office::TextEffectFormat *t)
{ Q_ASSERT(!t); return new Office::TextEffectFormat; }

template<>
inline void *qMetaTypeConstructHelper(const Office::TextFrame *t)
{ Q_ASSERT(!t); return new Office::TextFrame; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ThreeDFormat *t)
{ Q_ASSERT(!t); return new Office::ThreeDFormat; }

template<>
inline void *qMetaTypeConstructHelper(const Office::IMsoDispCagNotifySink *t)
{ Q_ASSERT(!t); return new Office::IMsoDispCagNotifySink; }

template<>
inline void *qMetaTypeConstructHelper(const Office::Balloon *t)
{ Q_ASSERT(!t); return new Office::Balloon; }

template<>
inline void *qMetaTypeConstructHelper(const Office::BalloonCheckboxes *t)
{ Q_ASSERT(!t); return new Office::BalloonCheckboxes; }

template<>
inline void *qMetaTypeConstructHelper(const Office::BalloonCheckbox *t)
{ Q_ASSERT(!t); return new Office::BalloonCheckbox; }

template<>
inline void *qMetaTypeConstructHelper(const Office::BalloonLabels *t)
{ Q_ASSERT(!t); return new Office::BalloonLabels; }

template<>
inline void *qMetaTypeConstructHelper(const Office::BalloonLabel *t)
{ Q_ASSERT(!t); return new Office::BalloonLabel; }

template<>
inline void *qMetaTypeConstructHelper(const Office::AnswerWizardFiles *t)
{ Q_ASSERT(!t); return new Office::AnswerWizardFiles; }

template<>
inline void *qMetaTypeConstructHelper(const Office::AnswerWizard *t)
{ Q_ASSERT(!t); return new Office::AnswerWizard; }

template<>
inline void *qMetaTypeConstructHelper(const Office::Assistant *t)
{ Q_ASSERT(!t); return new Office::Assistant; }

template<>
inline void *qMetaTypeConstructHelper(const Office::IFoundFiles *t)
{ Q_ASSERT(!t); return new Office::IFoundFiles; }

template<>
inline void *qMetaTypeConstructHelper(const Office::IFind *t)
{ Q_ASSERT(!t); return new Office::IFind; }

template<>
inline void *qMetaTypeConstructHelper(const Office::FoundFiles *t)
{ Q_ASSERT(!t); return new Office::FoundFiles; }

template<>
inline void *qMetaTypeConstructHelper(const Office::PropertyTest *t)
{ Q_ASSERT(!t); return new Office::PropertyTest; }

template<>
inline void *qMetaTypeConstructHelper(const Office::PropertyTests *t)
{ Q_ASSERT(!t); return new Office::PropertyTests; }

template<>
inline void *qMetaTypeConstructHelper(const Office::FileSearch *t)
{ Q_ASSERT(!t); return new Office::FileSearch; }

template<>
inline void *qMetaTypeConstructHelper(const Office::COMAddIn *t)
{ Q_ASSERT(!t); return new Office::COMAddIn; }

template<>
inline void *qMetaTypeConstructHelper(const Office::COMAddIns *t)
{ Q_ASSERT(!t); return new Office::COMAddIns; }

template<>
inline void *qMetaTypeConstructHelper(const Office::LanguageSettings *t)
{ Q_ASSERT(!t); return new Office::LanguageSettings; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ICommandBarsEvents *t)
{ Q_ASSERT(!t); return new Office::ICommandBarsEvents; }

template<>
inline void *qMetaTypeConstructHelper(const Office::CommandBars *t)
{ Q_ASSERT(!t); return new Office::CommandBars; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ICommandBarComboBoxEvents *t)
{ Q_ASSERT(!t); return new Office::ICommandBarComboBoxEvents; }

template<>
inline void *qMetaTypeConstructHelper(const Office::CommandBarComboBox *t)
{ Q_ASSERT(!t); return new Office::CommandBarComboBox; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ICommandBarButtonEvents *t)
{ Q_ASSERT(!t); return new Office::ICommandBarButtonEvents; }

template<>
inline void *qMetaTypeConstructHelper(const Office::CommandBarButton *t)
{ Q_ASSERT(!t); return new Office::CommandBarButton; }

template<>
inline void *qMetaTypeConstructHelper(const Office::WebPageFont *t)
{ Q_ASSERT(!t); return new Office::WebPageFont; }

template<>
inline void *qMetaTypeConstructHelper(const Office::WebPageFonts *t)
{ Q_ASSERT(!t); return new Office::WebPageFonts; }

template<>
inline void *qMetaTypeConstructHelper(const Office::HTMLProjectItem *t)
{ Q_ASSERT(!t); return new Office::HTMLProjectItem; }

template<>
inline void *qMetaTypeConstructHelper(const Office::HTMLProjectItems *t)
{ Q_ASSERT(!t); return new Office::HTMLProjectItems; }

template<>
inline void *qMetaTypeConstructHelper(const Office::HTMLProject *t)
{ Q_ASSERT(!t); return new Office::HTMLProject; }

template<>
inline void *qMetaTypeConstructHelper(const Office::MsoDebugOptions *t)
{ Q_ASSERT(!t); return new Office::MsoDebugOptions; }

template<>
inline void *qMetaTypeConstructHelper(const Office::FileDialogSelectedItems *t)
{ Q_ASSERT(!t); return new Office::FileDialogSelectedItems; }

template<>
inline void *qMetaTypeConstructHelper(const Office::FileDialogFilter *t)
{ Q_ASSERT(!t); return new Office::FileDialogFilter; }

template<>
inline void *qMetaTypeConstructHelper(const Office::FileDialogFilters *t)
{ Q_ASSERT(!t); return new Office::FileDialogFilters; }

template<>
inline void *qMetaTypeConstructHelper(const Office::FileDialog *t)
{ Q_ASSERT(!t); return new Office::FileDialog; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SignatureSet *t)
{ Q_ASSERT(!t); return new Office::SignatureSet; }

template<>
inline void *qMetaTypeConstructHelper(const Office::Signature *t)
{ Q_ASSERT(!t); return new Office::Signature; }

template<>
inline void *qMetaTypeConstructHelper(const Office::IMsoEnvelopeVB *t)
{ Q_ASSERT(!t); return new Office::IMsoEnvelopeVB; }

template<>
inline void *qMetaTypeConstructHelper(const Office::MsoEnvelope *t)
{ Q_ASSERT(!t); return new Office::MsoEnvelope; }

template<>
inline void *qMetaTypeConstructHelper(const Office::FileTypes *t)
{ Q_ASSERT(!t); return new Office::FileTypes; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SearchFolders *t)
{ Q_ASSERT(!t); return new Office::SearchFolders; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ScopeFolders *t)
{ Q_ASSERT(!t); return new Office::ScopeFolders; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ScopeFolder *t)
{ Q_ASSERT(!t); return new Office::ScopeFolder; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SearchScope *t)
{ Q_ASSERT(!t); return new Office::SearchScope; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SearchScopes *t)
{ Q_ASSERT(!t); return new Office::SearchScopes; }

template<>
inline void *qMetaTypeConstructHelper(const Office::IMsoDiagram *t)
{ Q_ASSERT(!t); return new Office::IMsoDiagram; }

template<>
inline void *qMetaTypeConstructHelper(const Office::DiagramNodes *t)
{ Q_ASSERT(!t); return new Office::DiagramNodes; }

template<>
inline void *qMetaTypeConstructHelper(const Office::DiagramNodeChildren *t)
{ Q_ASSERT(!t); return new Office::DiagramNodeChildren; }

template<>
inline void *qMetaTypeConstructHelper(const Office::DiagramNode *t)
{ Q_ASSERT(!t); return new Office::DiagramNode; }

template<>
inline void *qMetaTypeConstructHelper(const Office::CanvasShapes *t)
{ Q_ASSERT(!t); return new Office::CanvasShapes; }

template<>
inline void *qMetaTypeConstructHelper(const Office::OfficeDataSourceObject *t)
{ Q_ASSERT(!t); return new Office::OfficeDataSourceObject; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ODSOColumn *t)
{ Q_ASSERT(!t); return new Office::ODSOColumn; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ODSOColumns *t)
{ Q_ASSERT(!t); return new Office::ODSOColumns; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ODSOFilter *t)
{ Q_ASSERT(!t); return new Office::ODSOFilter; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ODSOFilters *t)
{ Q_ASSERT(!t); return new Office::ODSOFilters; }

template<>
inline void *qMetaTypeConstructHelper(const Office::NewFile *t)
{ Q_ASSERT(!t); return new Office::NewFile; }

template<>
inline void *qMetaTypeConstructHelper(const Office::WebComponent *t)
{ Q_ASSERT(!t); return new Office::WebComponent; }

template<>
inline void *qMetaTypeConstructHelper(const Office::WebComponentWindowExternal *t)
{ Q_ASSERT(!t); return new Office::WebComponentWindowExternal; }

template<>
inline void *qMetaTypeConstructHelper(const Office::WebComponentFormat *t)
{ Q_ASSERT(!t); return new Office::WebComponentFormat; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ILicWizExternal *t)
{ Q_ASSERT(!t); return new Office::ILicWizExternal; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ILicValidator *t)
{ Q_ASSERT(!t); return new Office::ILicValidator; }

template<>
inline void *qMetaTypeConstructHelper(const Office::ILicAgent *t)
{ Q_ASSERT(!t); return new Office::ILicAgent; }

template<>
inline void *qMetaTypeConstructHelper(const Office::IMsoEServicesDialog *t)
{ Q_ASSERT(!t); return new Office::IMsoEServicesDialog; }

template<>
inline void *qMetaTypeConstructHelper(const Office::WebComponentProperties *t)
{ Q_ASSERT(!t); return new Office::WebComponentProperties; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SmartDocument *t)
{ Q_ASSERT(!t); return new Office::SmartDocument; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SharedWorkspaceMember *t)
{ Q_ASSERT(!t); return new Office::SharedWorkspaceMember; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SharedWorkspaceMembers *t)
{ Q_ASSERT(!t); return new Office::SharedWorkspaceMembers; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SharedWorkspaceTask *t)
{ Q_ASSERT(!t); return new Office::SharedWorkspaceTask; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SharedWorkspaceTasks *t)
{ Q_ASSERT(!t); return new Office::SharedWorkspaceTasks; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SharedWorkspaceFile *t)
{ Q_ASSERT(!t); return new Office::SharedWorkspaceFile; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SharedWorkspaceFiles *t)
{ Q_ASSERT(!t); return new Office::SharedWorkspaceFiles; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SharedWorkspaceFolder *t)
{ Q_ASSERT(!t); return new Office::SharedWorkspaceFolder; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SharedWorkspaceFolders *t)
{ Q_ASSERT(!t); return new Office::SharedWorkspaceFolders; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SharedWorkspaceLink *t)
{ Q_ASSERT(!t); return new Office::SharedWorkspaceLink; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SharedWorkspaceLinks *t)
{ Q_ASSERT(!t); return new Office::SharedWorkspaceLinks; }

template<>
inline void *qMetaTypeConstructHelper(const Office::SharedWorkspace *t)
{ Q_ASSERT(!t); return new Office::SharedWorkspace; }

template<>
inline void *qMetaTypeConstructHelper(const Office::Sync *t)
{ Q_ASSERT(!t); return new Office::Sync; }

template<>
inline void *qMetaTypeConstructHelper(const Office::DocumentLibraryVersion *t)
{ Q_ASSERT(!t); return new Office::DocumentLibraryVersion; }

template<>
inline void *qMetaTypeConstructHelper(const Office::DocumentLibraryVersions *t)
{ Q_ASSERT(!t); return new Office::DocumentLibraryVersions; }

template<>
inline void *qMetaTypeConstructHelper(const Office::UserPermission *t)
{ Q_ASSERT(!t); return new Office::UserPermission; }

template<>
inline void *qMetaTypeConstructHelper(const Office::Permission *t)
{ Q_ASSERT(!t); return new Office::Permission; }

#endif

